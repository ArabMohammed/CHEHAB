#include <cstddef>
#include <cstdint>
#include <utility>
#include "_gen_he_matrix_mul.hpp"

using namespace std;
using namespace seal;

void matrix_mul(const unordered_map<string, Ciphertext> &encrypted_inputs,
const unordered_map<string, Plaintext> &encoded_inputs,
unordered_map<string, Ciphertext> &encrypted_outputs,
unordered_map<string, Plaintext> &encoded_outputs,
const BatchEncoder &encoder,
const Encryptor &encryptor,
const Evaluator &evaluator,
const RelinKeys &relin_keys,
const GaloisKeys &galois_keys)
{
Ciphertext c32 = encrypted_inputs.at("B[15]");
Ciphertext c31 = encrypted_inputs.at("B[14]");
Ciphertext c30 = encrypted_inputs.at("B[13]");
Ciphertext c13 = encrypted_inputs.at("A[12]");
Ciphertext c12 = encrypted_inputs.at("A[11]");
Ciphertext c11 = encrypted_inputs.at("A[10]");
Ciphertext c10 = encrypted_inputs.at("A[9]");
Ciphertext c9 = encrypted_inputs.at("A[8]");
Ciphertext c8 = encrypted_inputs.at("A[7]");
Ciphertext c7 = encrypted_inputs.at("A[6]");
Ciphertext c6 = encrypted_inputs.at("A[5]");
Ciphertext c5 = encrypted_inputs.at("A[4]");
Ciphertext c4 = encrypted_inputs.at("A[3]");
Ciphertext c3 = encrypted_inputs.at("A[2]");
Ciphertext c2 = encrypted_inputs.at("A[1]");
Ciphertext c1 = encrypted_inputs.at("A[0]");
Ciphertext c14 = encrypted_inputs.at("A[13]");
Ciphertext c15 = encrypted_inputs.at("A[14]");
Ciphertext c16 = encrypted_inputs.at("A[15]");
Ciphertext c17 = encrypted_inputs.at("B[0]");
Ciphertext c18 = encrypted_inputs.at("B[1]");
Ciphertext c19 = encrypted_inputs.at("B[2]");
Ciphertext c20 = encrypted_inputs.at("B[3]");
Ciphertext c21 = encrypted_inputs.at("B[4]");
Ciphertext c22 = encrypted_inputs.at("B[5]");
Ciphertext c23 = encrypted_inputs.at("B[6]");
Ciphertext c24 = encrypted_inputs.at("B[7]");
Ciphertext c25 = encrypted_inputs.at("B[8]");
Ciphertext c26 = encrypted_inputs.at("B[9]");
Ciphertext c27 = encrypted_inputs.at("B[10]");
Ciphertext c28 = encrypted_inputs.at("B[11]");
Ciphertext c29 = encrypted_inputs.at("B[12]");
size_t slot_count = encoder.slot_count();
Plaintext p109;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
p109);
Plaintext p104;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
p104);
Plaintext p99;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
p99);
Plaintext p74;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0},
p74);
Plaintext p39;
encoder.encode(vector<std::int64_t>{0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
p39);
Plaintext p44;
encoder.encode(vector<std::int64_t>{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
p44);
Plaintext p49;
encoder.encode(vector<std::int64_t>{0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
p49);
Plaintext p54;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
p54);
Plaintext p59;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
p59);
Plaintext p35;
encoder.encode(vector<std::int64_t>{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
p35);
Plaintext p64;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
p64);
Plaintext p69;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
p69);
Plaintext p79;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
p79);
Plaintext p84;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
p84);
Plaintext p89;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
p89);
Plaintext p94;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0},
p94);
Ciphertext c868;
evaluator.multiply(c14, c17, c868);
evaluator.relinearize(c868, relin_keys, c868);
Ciphertext c3314;
evaluator.rotate_rows(c868, 8, galois_keys, c3314);
evaluator.add(c868, c3314, c868);
evaluator.rotate_rows(c868, 4, galois_keys, c3314);
evaluator.add(c868, c3314, c868);
evaluator.rotate_rows(c868, 2, galois_keys, c3314);
evaluator.add(c868, c3314, c868);
evaluator.rotate_rows(c868, 1, galois_keys, c3314);
evaluator.add(c868, c3314, c868);
evaluator.multiply_plain(c868, p35, c868);
evaluator.multiply(c14, c18, c3314);
evaluator.relinearize(c3314, relin_keys, c3314);
Ciphertext c3306;
evaluator.rotate_rows(c3314, 8, galois_keys, c3306);
evaluator.add(c3314, c3306, c3314);
evaluator.rotate_rows(c3314, 4, galois_keys, c3306);
evaluator.add(c3314, c3306, c3314);
evaluator.rotate_rows(c3314, 2, galois_keys, c3306);
evaluator.add(c3314, c3306, c3314);
evaluator.rotate_rows(c3314, 1, galois_keys, c3306);
evaluator.add(c3314, c3306, c3314);
evaluator.multiply_plain(c3314, p39, c3314);
evaluator.add(c868, c3314, c868);
evaluator.multiply(c14, c19, c3314);
evaluator.relinearize(c3314, relin_keys, c3314);
evaluator.rotate_rows(c3314, 8, galois_keys, c3306);
evaluator.add(c3314, c3306, c3314);
evaluator.rotate_rows(c3314, 4, galois_keys, c3306);
evaluator.add(c3314, c3306, c3314);
evaluator.rotate_rows(c3314, 2, galois_keys, c3306);
evaluator.add(c3314, c3306, c3314);
evaluator.rotate_rows(c3314, 1, galois_keys, c3306);
evaluator.add(c3314, c3306, c3314);
evaluator.multiply_plain(c3314, p44, c3314);
evaluator.multiply(c14, c20, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
Ciphertext c3290;
evaluator.rotate_rows(c3306, 8, galois_keys, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.multiply_plain(c3306, p49, c3306);
evaluator.add(c3314, c3306, c3314);
evaluator.multiply(c14, c23, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.multiply_plain(c3306, p64, c3306);
evaluator.multiply(c14, c21, c3290);
evaluator.relinearize(c3290, relin_keys, c3290);
Ciphertext c3274;
evaluator.rotate_rows(c3290, 8, galois_keys, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.rotate_rows(c3290, 4, galois_keys, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.rotate_rows(c3290, 2, galois_keys, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.rotate_rows(c3290, 1, galois_keys, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.multiply_plain(c3290, p54, c3290);
evaluator.multiply(c14, c22, c3274);
evaluator.relinearize(c3274, relin_keys, c3274);
Ciphertext c3266;
evaluator.rotate_rows(c3274, 8, galois_keys, c3266);
evaluator.add(c3274, c3266, c3274);
evaluator.rotate_rows(c3274, 4, galois_keys, c3266);
evaluator.add(c3274, c3266, c3274);
evaluator.rotate_rows(c3274, 2, galois_keys, c3266);
evaluator.add(c3274, c3266, c3274);
evaluator.rotate_rows(c3274, 1, galois_keys, c3266);
evaluator.add(c3274, c3266, c3274);
evaluator.multiply_plain(c3274, p59, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.add(c3314, c3306, c3314);
evaluator.add(c868, c3314, c868);
evaluator.multiply(c14, c30, c3314);
evaluator.relinearize(c3314, relin_keys, c3314);
evaluator.rotate_rows(c3314, 8, galois_keys, c3306);
evaluator.add(c3314, c3306, c3314);
evaluator.rotate_rows(c3314, 4, galois_keys, c3290);
evaluator.add(c3314, c3290, c3314);
evaluator.rotate_rows(c3314, 2, galois_keys, c3274);
evaluator.add(c3314, c3274, c3314);
evaluator.rotate_rows(c3314, 1, galois_keys, c3266);
evaluator.add(c3314, c3266, c3314);
evaluator.multiply_plain(c3314, p99, c3314);
evaluator.multiply(c14, c27, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.multiply_plain(c3306, p84, c3306);
evaluator.multiply(c14, c26, c3290);
evaluator.relinearize(c3290, relin_keys, c3290);
evaluator.rotate_rows(c3290, 8, galois_keys, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.rotate_rows(c3290, 4, galois_keys, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.rotate_rows(c3290, 2, galois_keys, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.rotate_rows(c3290, 1, galois_keys, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.multiply_plain(c3290, p79, c3290);
evaluator.multiply(c14, c24, c3274);
evaluator.relinearize(c3274, relin_keys, c3274);
evaluator.rotate_rows(c3274, 8, galois_keys, c3266);
evaluator.add(c3274, c3266, c3274);
evaluator.rotate_rows(c3274, 4, galois_keys, c3266);
evaluator.add(c3274, c3266, c3274);
evaluator.rotate_rows(c3274, 2, galois_keys, c3266);
evaluator.add(c3274, c3266, c3274);
evaluator.rotate_rows(c3274, 1, galois_keys, c3266);
evaluator.add(c3274, c3266, c3274);
evaluator.multiply_plain(c3274, p69, c3274);
evaluator.multiply(c14, c25, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
Ciphertext c3226;
evaluator.rotate_rows(c3266, 8, galois_keys, c3226);
evaluator.add(c3266, c3226, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c3226);
evaluator.add(c3266, c3226, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c3226);
evaluator.add(c3266, c3226, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c3226);
evaluator.add(c3266, c3226, c3266);
evaluator.multiply_plain(c3266, p74, c3266);
evaluator.add(c3274, c3266, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.multiply(c14, c28, c3290);
evaluator.relinearize(c3290, relin_keys, c3290);
evaluator.rotate_rows(c3290, 8, galois_keys, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.rotate_rows(c3290, 4, galois_keys, c3266);
evaluator.add(c3290, c3266, c3290);
evaluator.rotate_rows(c3290, 2, galois_keys, c3266);
evaluator.add(c3290, c3266, c3290);
evaluator.rotate_rows(c3290, 1, galois_keys, c3266);
evaluator.add(c3290, c3266, c3290);
evaluator.multiply_plain(c3290, p89, c3290);
evaluator.multiply(c14, c29, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c3226);
evaluator.add(c3266, c3226, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c3274);
evaluator.add(c3266, c3274, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c3226);
evaluator.add(c3266, c3226, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c3226);
evaluator.add(c3266, c3226, c3266);
evaluator.multiply_plain(c3266, p94, c3266);
evaluator.add(c3290, c3266, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.add(c3314, c3306, c3314);
evaluator.multiply(c14, c31, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c3226);
evaluator.add(c3266, c3226, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c3290);
evaluator.add(c3266, c3290, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c3306);
evaluator.add(c3266, c3306, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c3226);
evaluator.add(c3266, c3226, c3266);
evaluator.multiply_plain(c3266, p104, c3266);
evaluator.multiply(c14, c32, c14);
evaluator.relinearize(c14, relin_keys, c14);
evaluator.rotate_rows(c14, 8, galois_keys, c3290);
evaluator.add(c14, c3290, c14);
evaluator.rotate_rows(c14, 4, galois_keys, c3290);
evaluator.add(c14, c3290, c14);
evaluator.rotate_rows(c14, 2, galois_keys, c3290);
evaluator.add(c14, c3290, c14);
evaluator.rotate_rows(c14, 1, galois_keys, c3290);
evaluator.add(c14, c3290, c14);
evaluator.multiply_plain(c14, p109, c14);
evaluator.add(c3266, c14, c3266);
evaluator.add(c3314, c3266, c3314);
evaluator.add(c868, c3314, c868);
evaluator.multiply(c1, c17, c14);
evaluator.relinearize(c14, relin_keys, c14);
evaluator.rotate_rows(c14, 8, galois_keys, c3290);
evaluator.add(c14, c3290, c14);
evaluator.rotate_rows(c14, 4, galois_keys, c3290);
evaluator.add(c14, c3290, c14);
evaluator.rotate_rows(c14, 2, galois_keys, c3266);
evaluator.add(c14, c3266, c14);
evaluator.rotate_rows(c14, 1, galois_keys, c3266);
evaluator.add(c14, c3266, c14);
evaluator.multiply_plain(c14, p35, c14);
evaluator.multiply(c1, c18, c3314);
evaluator.relinearize(c3314, relin_keys, c3314);
evaluator.rotate_rows(c3314, 8, galois_keys, c3290);
evaluator.add(c3314, c3290, c3314);
evaluator.rotate_rows(c3314, 4, galois_keys, c3290);
evaluator.add(c3314, c3290, c3314);
evaluator.rotate_rows(c3314, 2, galois_keys, c3290);
evaluator.add(c3314, c3290, c3314);
evaluator.rotate_rows(c3314, 1, galois_keys, c3290);
evaluator.add(c3314, c3290, c3314);
evaluator.multiply_plain(c3314, p39, c3314);
evaluator.add(c14, c3314, c14);
evaluator.multiply(c1, c22, c3314);
evaluator.relinearize(c3314, relin_keys, c3314);
evaluator.rotate_rows(c3314, 8, galois_keys, c3290);
evaluator.add(c3314, c3290, c3314);
evaluator.rotate_rows(c3314, 4, galois_keys, c3290);
evaluator.add(c3314, c3290, c3314);
evaluator.rotate_rows(c3314, 2, galois_keys, c3290);
evaluator.add(c3314, c3290, c3314);
evaluator.rotate_rows(c3314, 1, galois_keys, c3290);
evaluator.add(c3314, c3290, c3314);
evaluator.multiply_plain(c3314, p59, c3314);
evaluator.multiply(c1, c19, c3290);
evaluator.relinearize(c3290, relin_keys, c3290);
evaluator.rotate_rows(c3290, 8, galois_keys, c3266);
evaluator.add(c3290, c3266, c3290);
evaluator.rotate_rows(c3290, 4, galois_keys, c3266);
evaluator.add(c3290, c3266, c3290);
evaluator.rotate_rows(c3290, 2, galois_keys, c3266);
evaluator.add(c3290, c3266, c3290);
evaluator.rotate_rows(c3290, 1, galois_keys, c3266);
evaluator.add(c3290, c3266, c3290);
evaluator.multiply_plain(c3290, p44, c3290);
evaluator.multiply(c1, c20, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c3306);
evaluator.add(c3266, c3306, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c3306);
evaluator.add(c3266, c3306, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c3306);
evaluator.add(c3266, c3306, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c3306);
evaluator.add(c3266, c3306, c3266);
evaluator.multiply_plain(c3266, p49, c3266);
evaluator.multiply(c1, c21, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.multiply_plain(c3306, p54, c3306);
evaluator.add(c3266, c3306, c3266);
evaluator.add(c3290, c3266, c3290);
evaluator.add(c3314, c3290, c3314);
evaluator.add(c14, c3314, c14);
evaluator.multiply(c1, c26, c3314);
evaluator.relinearize(c3314, relin_keys, c3314);
evaluator.rotate_rows(c3314, 8, galois_keys, c3290);
evaluator.add(c3314, c3290, c3314);
evaluator.rotate_rows(c3314, 4, galois_keys, c3266);
evaluator.add(c3314, c3266, c3314);
evaluator.rotate_rows(c3314, 2, galois_keys, c3306);
evaluator.add(c3314, c3306, c3314);
evaluator.rotate_rows(c3314, 1, galois_keys, c3290);
evaluator.add(c3314, c3290, c3314);
evaluator.multiply_plain(c3314, p79, c3314);
evaluator.multiply(c1, c25, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c3306);
evaluator.add(c3266, c3306, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c3306);
evaluator.add(c3266, c3306, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c3306);
evaluator.add(c3266, c3306, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c3306);
evaluator.add(c3266, c3306, c3266);
evaluator.multiply_plain(c3266, p74, c3266);
evaluator.multiply(c1, c23, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.multiply_plain(c3306, p64, c3306);
evaluator.multiply(c1, c24, c3290);
evaluator.relinearize(c3290, relin_keys, c3290);
evaluator.rotate_rows(c3290, 8, galois_keys, c3226);
evaluator.add(c3290, c3226, c3290);
evaluator.rotate_rows(c3290, 4, galois_keys, c3226);
evaluator.add(c3290, c3226, c3290);
evaluator.rotate_rows(c3290, 2, galois_keys, c3226);
evaluator.add(c3290, c3226, c3290);
evaluator.rotate_rows(c3290, 1, galois_keys, c3226);
evaluator.add(c3290, c3226, c3290);
evaluator.multiply_plain(c3290, p69, c3290);
evaluator.add(c3306, c3290, c3306);
evaluator.add(c3266, c3306, c3266);
evaluator.add(c3314, c3266, c3314);
evaluator.add(c14, c3314, c14);
evaluator.multiply(c1, c30, c3314);
evaluator.relinearize(c3314, relin_keys, c3314);
evaluator.rotate_rows(c3314, 8, galois_keys, c3266);
evaluator.add(c3314, c3266, c3314);
evaluator.rotate_rows(c3314, 4, galois_keys, c3266);
evaluator.add(c3314, c3266, c3314);
evaluator.rotate_rows(c3314, 2, galois_keys, c3266);
evaluator.add(c3314, c3266, c3314);
evaluator.rotate_rows(c3314, 1, galois_keys, c3266);
evaluator.add(c3314, c3266, c3314);
evaluator.multiply_plain(c3314, p99, c3314);
evaluator.multiply(c1, c27, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c3306);
evaluator.add(c3266, c3306, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c3226);
evaluator.add(c3266, c3226, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c3290);
evaluator.add(c3266, c3290, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c3290);
evaluator.add(c3266, c3290, c3266);
evaluator.multiply_plain(c3266, p84, c3266);
evaluator.multiply(c1, c28, c3290);
evaluator.relinearize(c3290, relin_keys, c3290);
evaluator.rotate_rows(c3290, 8, galois_keys, c3306);
evaluator.add(c3290, c3306, c3290);
evaluator.rotate_rows(c3290, 4, galois_keys, c3226);
evaluator.add(c3290, c3226, c3290);
evaluator.rotate_rows(c3290, 2, galois_keys, c3306);
evaluator.add(c3290, c3306, c3290);
evaluator.rotate_rows(c3290, 1, galois_keys, c3226);
evaluator.add(c3290, c3226, c3290);
evaluator.multiply_plain(c3290, p89, c3290);
evaluator.multiply(c1, c29, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.multiply_plain(c3226, p94, c3226);
evaluator.add(c3290, c3226, c3290);
evaluator.add(c3266, c3290, c3266);
evaluator.add(c3314, c3266, c3314);
evaluator.add(c14, c3314, c14);
evaluator.multiply(c1, c31, c3314);
evaluator.relinearize(c3314, relin_keys, c3314);
evaluator.rotate_rows(c3314, 8, galois_keys, c3266);
evaluator.add(c3314, c3266, c3314);
evaluator.rotate_rows(c3314, 4, galois_keys, c3290);
evaluator.add(c3314, c3290, c3314);
evaluator.rotate_rows(c3314, 2, galois_keys, c3226);
evaluator.add(c3314, c3226, c3314);
evaluator.rotate_rows(c3314, 1, galois_keys, c3290);
evaluator.add(c3314, c3290, c3314);
evaluator.multiply_plain(c3314, p104, c3314);
evaluator.multiply(c1, c32, c1);
evaluator.relinearize(c1, relin_keys, c1);
evaluator.rotate_rows(c1, 8, galois_keys, c3226);
evaluator.add(c1, c3226, c1);
evaluator.rotate_rows(c1, 4, galois_keys, c3226);
evaluator.add(c1, c3226, c1);
evaluator.rotate_rows(c1, 2, galois_keys, c3226);
evaluator.add(c1, c3226, c1);
evaluator.rotate_rows(c1, 1, galois_keys, c3290);
evaluator.add(c1, c3290, c1);
evaluator.multiply_plain(c1, p109, c1);
evaluator.add(c3314, c1, c3314);
evaluator.add(c14, c3314, c14);
evaluator.multiply(c2, c17, c3314);
evaluator.relinearize(c3314, relin_keys, c3314);
evaluator.rotate_rows(c3314, 8, galois_keys, c1);
evaluator.add(c3314, c1, c3314);
evaluator.rotate_rows(c3314, 4, galois_keys, c1);
evaluator.add(c3314, c1, c3314);
evaluator.rotate_rows(c3314, 2, galois_keys, c1);
evaluator.add(c3314, c1, c3314);
evaluator.rotate_rows(c3314, 1, galois_keys, c1);
evaluator.add(c3314, c1, c3314);
evaluator.multiply_plain(c3314, p35, c3314);
evaluator.multiply(c2, c18, c1);
evaluator.relinearize(c1, relin_keys, c1);
evaluator.rotate_rows(c1, 8, galois_keys, c3290);
evaluator.add(c1, c3290, c1);
evaluator.rotate_rows(c1, 4, galois_keys, c3290);
evaluator.add(c1, c3290, c1);
evaluator.rotate_rows(c1, 2, galois_keys, c3290);
evaluator.add(c1, c3290, c1);
evaluator.rotate_rows(c1, 1, galois_keys, c3290);
evaluator.add(c1, c3290, c1);
evaluator.multiply_plain(c1, p39, c1);
evaluator.add(c3314, c1, c3314);
evaluator.multiply(c2, c19, c1);
evaluator.relinearize(c1, relin_keys, c1);
evaluator.rotate_rows(c1, 8, galois_keys, c3290);
evaluator.add(c1, c3290, c1);
evaluator.rotate_rows(c1, 4, galois_keys, c3290);
evaluator.add(c1, c3290, c1);
evaluator.rotate_rows(c1, 2, galois_keys, c3290);
evaluator.add(c1, c3290, c1);
evaluator.rotate_rows(c1, 1, galois_keys, c3290);
evaluator.add(c1, c3290, c1);
evaluator.multiply_plain(c1, p44, c1);
evaluator.multiply(c2, c20, c3290);
evaluator.relinearize(c3290, relin_keys, c3290);
evaluator.rotate_rows(c3290, 8, galois_keys, c3226);
evaluator.add(c3290, c3226, c3290);
evaluator.rotate_rows(c3290, 4, galois_keys, c3266);
evaluator.add(c3290, c3266, c3290);
evaluator.rotate_rows(c3290, 2, galois_keys, c3266);
evaluator.add(c3290, c3266, c3290);
evaluator.rotate_rows(c3290, 1, galois_keys, c3266);
evaluator.add(c3290, c3266, c3290);
evaluator.multiply_plain(c3290, p49, c3290);
evaluator.multiply(c2, c21, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c3306);
evaluator.add(c3266, c3306, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c3306);
evaluator.add(c3266, c3306, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c3306);
evaluator.add(c3266, c3306, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c3306);
evaluator.add(c3266, c3306, c3266);
evaluator.multiply_plain(c3266, p54, c3266);
evaluator.multiply(c2, c22, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.multiply_plain(c3306, p59, c3306);
evaluator.multiply(c2, c23, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c3274);
evaluator.add(c3226, c3274, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c3274);
evaluator.add(c3226, c3274, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c3274);
evaluator.add(c3226, c3274, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c3274);
evaluator.add(c3226, c3274, c3226);
evaluator.multiply_plain(c3226, p64, c3226);
evaluator.multiply(c2, c24, c3274);
evaluator.relinearize(c3274, relin_keys, c3274);
Ciphertext c3002;
evaluator.rotate_rows(c3274, 8, galois_keys, c3002);
evaluator.add(c3274, c3002, c3274);
evaluator.rotate_rows(c3274, 4, galois_keys, c3002);
evaluator.add(c3274, c3002, c3274);
evaluator.rotate_rows(c3274, 2, galois_keys, c3002);
evaluator.add(c3274, c3002, c3274);
evaluator.rotate_rows(c3274, 1, galois_keys, c3002);
evaluator.add(c3274, c3002, c3274);
evaluator.multiply_plain(c3274, p69, c3274);
evaluator.add(c3226, c3274, c3226);
evaluator.multiply(c2, c25, c3002);
evaluator.relinearize(c3002, relin_keys, c3002);
evaluator.rotate_rows(c3002, 8, galois_keys, c3274);
evaluator.add(c3002, c3274, c3002);
evaluator.rotate_rows(c3002, 4, galois_keys, c3274);
evaluator.add(c3002, c3274, c3002);
evaluator.rotate_rows(c3002, 2, galois_keys, c3274);
evaluator.add(c3002, c3274, c3002);
evaluator.rotate_rows(c3002, 1, galois_keys, c3274);
evaluator.add(c3002, c3274, c3002);
evaluator.multiply_plain(c3002, p74, c3002);
evaluator.multiply(c2, c30, c3274);
evaluator.relinearize(c3274, relin_keys, c3274);
Ciphertext c2986;
evaluator.rotate_rows(c3274, 8, galois_keys, c2986);
evaluator.add(c3274, c2986, c3274);
evaluator.rotate_rows(c3274, 4, galois_keys, c2986);
evaluator.add(c3274, c2986, c3274);
evaluator.rotate_rows(c3274, 2, galois_keys, c2986);
evaluator.add(c3274, c2986, c3274);
evaluator.rotate_rows(c3274, 1, galois_keys, c2986);
evaluator.add(c3274, c2986, c3274);
evaluator.multiply_plain(c3274, p99, c3274);
evaluator.multiply(c2, c29, c2986);
evaluator.relinearize(c2986, relin_keys, c2986);
Ciphertext c2978;
evaluator.rotate_rows(c2986, 8, galois_keys, c2978);
evaluator.add(c2986, c2978, c2986);
evaluator.rotate_rows(c2986, 4, galois_keys, c2978);
evaluator.add(c2986, c2978, c2986);
evaluator.rotate_rows(c2986, 2, galois_keys, c2978);
evaluator.add(c2986, c2978, c2986);
evaluator.rotate_rows(c2986, 1, galois_keys, c2978);
evaluator.add(c2986, c2978, c2986);
evaluator.multiply_plain(c2986, p94, c2986);
evaluator.multiply(c2, c26, c2978);
evaluator.relinearize(c2978, relin_keys, c2978);
Ciphertext c2970;
evaluator.rotate_rows(c2978, 8, galois_keys, c2970);
evaluator.add(c2978, c2970, c2978);
evaluator.rotate_rows(c2978, 4, galois_keys, c2970);
evaluator.add(c2978, c2970, c2978);
evaluator.rotate_rows(c2978, 2, galois_keys, c2970);
evaluator.add(c2978, c2970, c2978);
evaluator.rotate_rows(c2978, 1, galois_keys, c2970);
evaluator.add(c2978, c2970, c2978);
evaluator.multiply_plain(c2978, p79, c2978);
evaluator.multiply(c2, c27, c2970);
evaluator.relinearize(c2970, relin_keys, c2970);
Ciphertext c2962;
evaluator.rotate_rows(c2970, 8, galois_keys, c2962);
evaluator.add(c2970, c2962, c2970);
evaluator.rotate_rows(c2970, 4, galois_keys, c2962);
evaluator.add(c2970, c2962, c2970);
evaluator.rotate_rows(c2970, 2, galois_keys, c2962);
evaluator.add(c2970, c2962, c2970);
evaluator.rotate_rows(c2970, 1, galois_keys, c2962);
evaluator.add(c2970, c2962, c2970);
evaluator.multiply_plain(c2970, p84, c2970);
evaluator.multiply(c2, c28, c2962);
evaluator.relinearize(c2962, relin_keys, c2962);
Ciphertext c2954;
evaluator.rotate_rows(c2962, 8, galois_keys, c2954);
evaluator.add(c2962, c2954, c2962);
evaluator.rotate_rows(c2962, 4, galois_keys, c2954);
evaluator.add(c2962, c2954, c2962);
evaluator.rotate_rows(c2962, 2, galois_keys, c2954);
evaluator.add(c2962, c2954, c2962);
evaluator.rotate_rows(c2962, 1, galois_keys, c2954);
evaluator.add(c2962, c2954, c2962);
evaluator.multiply_plain(c2962, p89, c2962);
evaluator.add(c2970, c2962, c2970);
evaluator.add(c2978, c2970, c2978);
evaluator.add(c2986, c2978, c2986);
evaluator.add(c3274, c2986, c3274);
evaluator.add(c3002, c3274, c3002);
evaluator.add(c3226, c3002, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.add(c3266, c3306, c3266);
evaluator.multiply(c2, c31, c3002);
evaluator.relinearize(c3002, relin_keys, c3002);
evaluator.rotate_rows(c3002, 8, galois_keys, c3274);
evaluator.add(c3002, c3274, c3002);
evaluator.rotate_rows(c3002, 4, galois_keys, c3274);
evaluator.add(c3002, c3274, c3002);
evaluator.rotate_rows(c3002, 2, galois_keys, c3274);
evaluator.add(c3002, c3274, c3002);
evaluator.rotate_rows(c3002, 1, galois_keys, c3274);
evaluator.add(c3002, c3274, c3002);
evaluator.multiply_plain(c3002, p104, c3002);
evaluator.multiply(c2, c32, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c2986);
evaluator.add(c2, c2986, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c2986);
evaluator.add(c2, c2986, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c2986);
evaluator.add(c2, c2986, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c2986);
evaluator.add(c2, c2986, c2);
evaluator.multiply_plain(c2, p109, c2);
evaluator.add(c3002, c2, c3002);
evaluator.add(c3266, c3002, c3266);
evaluator.add(c3290, c3266, c3290);
evaluator.add(c1, c3290, c1);
evaluator.add(c3314, c1, c3314);
evaluator.multiply(c3, c17, c1);
evaluator.relinearize(c1, relin_keys, c1);
evaluator.rotate_rows(c1, 8, galois_keys, c3290);
evaluator.add(c1, c3290, c1);
evaluator.rotate_rows(c1, 4, galois_keys, c3290);
evaluator.add(c1, c3290, c1);
evaluator.rotate_rows(c1, 2, galois_keys, c3290);
evaluator.add(c1, c3290, c1);
evaluator.rotate_rows(c1, 1, galois_keys, c3290);
evaluator.add(c1, c3290, c1);
evaluator.multiply_plain(c1, p35, c1);
evaluator.multiply(c3, c18, c3290);
evaluator.relinearize(c3290, relin_keys, c3290);
evaluator.rotate_rows(c3290, 8, galois_keys, c3266);
evaluator.add(c3290, c3266, c3290);
evaluator.rotate_rows(c3290, 4, galois_keys, c3002);
evaluator.add(c3290, c3002, c3290);
evaluator.rotate_rows(c3290, 2, galois_keys, c3002);
evaluator.add(c3290, c3002, c3290);
evaluator.rotate_rows(c3290, 1, galois_keys, c3002);
evaluator.add(c3290, c3002, c3290);
evaluator.multiply_plain(c3290, p39, c3290);
evaluator.add(c1, c3290, c1);
evaluator.multiply(c3, c19, c3002);
evaluator.relinearize(c3002, relin_keys, c3002);
evaluator.rotate_rows(c3002, 8, galois_keys, c2986);
evaluator.add(c3002, c2986, c3002);
evaluator.rotate_rows(c3002, 4, galois_keys, c2962);
evaluator.add(c3002, c2962, c3002);
evaluator.rotate_rows(c3002, 2, galois_keys, c2);
evaluator.add(c3002, c2, c3002);
evaluator.rotate_rows(c3002, 1, galois_keys, c2);
evaluator.add(c3002, c2, c3002);
evaluator.multiply_plain(c3002, p44, c3002);
evaluator.multiply(c3, c20, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c2954);
evaluator.add(c2, c2954, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3290);
evaluator.add(c2, c3290, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3226);
evaluator.add(c2, c3226, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3266);
evaluator.add(c2, c3266, c2);
evaluator.multiply_plain(c2, p49, c2);
evaluator.multiply(c3, c21, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c3274);
evaluator.add(c3306, c3274, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c3274);
evaluator.add(c3306, c3274, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c3274);
evaluator.add(c3306, c3274, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c3274);
evaluator.add(c3306, c3274, c3306);
evaluator.multiply_plain(c3306, p54, c3306);
evaluator.add(c2, c3306, c2);
evaluator.add(c3002, c2, c3002);
evaluator.add(c1, c3002, c1);
evaluator.multiply(c3, c25, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c3002);
evaluator.add(c2, c3002, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3002);
evaluator.add(c2, c3002, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3002);
evaluator.add(c2, c3002, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3274);
evaluator.add(c2, c3274, c2);
evaluator.multiply_plain(c2, p74, c2);
evaluator.multiply(c3, c24, c3274);
evaluator.relinearize(c3274, relin_keys, c3274);
evaluator.rotate_rows(c3274, 8, galois_keys, c3002);
evaluator.add(c3274, c3002, c3274);
evaluator.rotate_rows(c3274, 4, galois_keys, c3002);
evaluator.add(c3274, c3002, c3274);
evaluator.rotate_rows(c3274, 2, galois_keys, c3002);
evaluator.add(c3274, c3002, c3274);
evaluator.rotate_rows(c3274, 1, galois_keys, c3002);
evaluator.add(c3274, c3002, c3274);
evaluator.multiply_plain(c3274, p69, c3274);
evaluator.multiply(c3, c22, c3002);
evaluator.relinearize(c3002, relin_keys, c3002);
evaluator.rotate_rows(c3002, 8, galois_keys, c3306);
evaluator.add(c3002, c3306, c3002);
evaluator.rotate_rows(c3002, 4, galois_keys, c3306);
evaluator.add(c3002, c3306, c3002);
evaluator.rotate_rows(c3002, 2, galois_keys, c3306);
evaluator.add(c3002, c3306, c3002);
evaluator.rotate_rows(c3002, 1, galois_keys, c3306);
evaluator.add(c3002, c3306, c3002);
evaluator.multiply_plain(c3002, p59, c3002);
evaluator.multiply(c3, c23, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c2954);
evaluator.add(c3306, c2954, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c2954);
evaluator.add(c3306, c2954, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c2954);
evaluator.add(c3306, c2954, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c2954);
evaluator.add(c3306, c2954, c3306);
evaluator.multiply_plain(c3306, p64, c3306);
evaluator.add(c3002, c3306, c3002);
evaluator.add(c3274, c3002, c3274);
evaluator.add(c2, c3274, c2);
evaluator.multiply(c3, c26, c3274);
evaluator.relinearize(c3274, relin_keys, c3274);
evaluator.rotate_rows(c3274, 8, galois_keys, c2954);
evaluator.add(c3274, c2954, c3274);
evaluator.rotate_rows(c3274, 4, galois_keys, c3002);
evaluator.add(c3274, c3002, c3274);
evaluator.rotate_rows(c3274, 2, galois_keys, c3002);
evaluator.add(c3274, c3002, c3274);
evaluator.rotate_rows(c3274, 1, galois_keys, c3002);
evaluator.add(c3274, c3002, c3274);
evaluator.multiply_plain(c3274, p79, c3274);
evaluator.multiply(c3, c27, c3002);
evaluator.relinearize(c3002, relin_keys, c3002);
evaluator.rotate_rows(c3002, 8, galois_keys, c3290);
evaluator.add(c3002, c3290, c3002);
evaluator.rotate_rows(c3002, 4, galois_keys, c3290);
evaluator.add(c3002, c3290, c3002);
evaluator.rotate_rows(c3002, 2, galois_keys, c3306);
evaluator.add(c3002, c3306, c3002);
evaluator.rotate_rows(c3002, 1, galois_keys, c3226);
evaluator.add(c3002, c3226, c3002);
evaluator.multiply_plain(c3002, p84, c3002);
evaluator.add(c3274, c3002, c3274);
evaluator.add(c2, c3274, c2);
evaluator.multiply(c3, c30, c3274);
evaluator.relinearize(c3274, relin_keys, c3274);
evaluator.rotate_rows(c3274, 8, galois_keys, c3290);
evaluator.add(c3274, c3290, c3274);
evaluator.rotate_rows(c3274, 4, galois_keys, c3290);
evaluator.add(c3274, c3290, c3274);
evaluator.rotate_rows(c3274, 2, galois_keys, c3290);
evaluator.add(c3274, c3290, c3274);
evaluator.rotate_rows(c3274, 1, galois_keys, c3290);
evaluator.add(c3274, c3290, c3274);
evaluator.multiply_plain(c3274, p99, c3274);
evaluator.multiply(c3, c28, c3290);
evaluator.relinearize(c3290, relin_keys, c3290);
evaluator.rotate_rows(c3290, 8, galois_keys, c3002);
evaluator.add(c3290, c3002, c3290);
evaluator.rotate_rows(c3290, 4, galois_keys, c3002);
evaluator.add(c3290, c3002, c3290);
evaluator.rotate_rows(c3290, 2, galois_keys, c3002);
evaluator.add(c3290, c3002, c3290);
evaluator.rotate_rows(c3290, 1, galois_keys, c3002);
evaluator.add(c3290, c3002, c3290);
evaluator.multiply_plain(c3290, p89, c3290);
evaluator.multiply(c3, c29, c3002);
evaluator.relinearize(c3002, relin_keys, c3002);
evaluator.rotate_rows(c3002, 8, galois_keys, c3266);
evaluator.add(c3002, c3266, c3002);
evaluator.rotate_rows(c3002, 4, galois_keys, c3266);
evaluator.add(c3002, c3266, c3002);
evaluator.rotate_rows(c3002, 2, galois_keys, c3266);
evaluator.add(c3002, c3266, c3002);
evaluator.rotate_rows(c3002, 1, galois_keys, c3266);
evaluator.add(c3002, c3266, c3002);
evaluator.multiply_plain(c3002, p94, c3002);
evaluator.add(c3290, c3002, c3290);
evaluator.add(c3274, c3290, c3274);
evaluator.add(c2, c3274, c2);
evaluator.multiply(c3, c31, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c3290);
evaluator.add(c3266, c3290, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c3290);
evaluator.add(c3266, c3290, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c3290);
evaluator.add(c3266, c3290, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c3290);
evaluator.add(c3266, c3290, c3266);
evaluator.multiply_plain(c3266, p104, c3266);
evaluator.multiply(c3, c32, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c3290);
evaluator.add(c3, c3290, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c3290);
evaluator.add(c3, c3290, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c3290);
evaluator.add(c3, c3290, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c3290);
evaluator.add(c3, c3290, c3);
evaluator.multiply_plain(c3, p109, c3);
evaluator.add(c3266, c3, c3266);
evaluator.add(c2, c3266, c2);
evaluator.add(c1, c2, c1);
evaluator.multiply(c5, c17, c3290);
evaluator.relinearize(c3290, relin_keys, c3290);
evaluator.rotate_rows(c3290, 8, galois_keys, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.rotate_rows(c3290, 4, galois_keys, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.rotate_rows(c3290, 2, galois_keys, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.rotate_rows(c3290, 1, galois_keys, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.multiply_plain(c3290, p35, c3290);
evaluator.multiply(c5, c18, c3274);
evaluator.relinearize(c3274, relin_keys, c3274);
evaluator.rotate_rows(c3274, 8, galois_keys, c3266);
evaluator.add(c3274, c3266, c3274);
evaluator.rotate_rows(c3274, 4, galois_keys, c3266);
evaluator.add(c3274, c3266, c3274);
evaluator.rotate_rows(c3274, 2, galois_keys, c2);
evaluator.add(c3274, c2, c3274);
evaluator.rotate_rows(c3274, 1, galois_keys, c3306);
evaluator.add(c3274, c3306, c3274);
evaluator.multiply_plain(c3274, p39, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.multiply(c5, c22, c3274);
evaluator.relinearize(c3274, relin_keys, c3274);
evaluator.rotate_rows(c3274, 8, galois_keys, c3306);
evaluator.add(c3274, c3306, c3274);
evaluator.rotate_rows(c3274, 4, galois_keys, c3306);
evaluator.add(c3274, c3306, c3274);
evaluator.rotate_rows(c3274, 2, galois_keys, c3306);
evaluator.add(c3274, c3306, c3274);
evaluator.rotate_rows(c3274, 1, galois_keys, c3306);
evaluator.add(c3274, c3306, c3274);
evaluator.multiply_plain(c3274, p59, c3274);
evaluator.multiply(c5, c21, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c3266);
evaluator.add(c3306, c3266, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c3266);
evaluator.add(c3306, c3266, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c3266);
evaluator.add(c3306, c3266, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c3266);
evaluator.add(c3306, c3266, c3306);
evaluator.multiply_plain(c3306, p54, c3306);
evaluator.multiply(c5, c19, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c2986);
evaluator.add(c3266, c2986, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c2986);
evaluator.add(c3266, c2986, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c2986);
evaluator.add(c3266, c2986, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c2986);
evaluator.add(c3266, c2986, c3266);
evaluator.multiply_plain(c3266, p44, c3266);
evaluator.multiply(c5, c20, c2986);
evaluator.relinearize(c2986, relin_keys, c2986);
evaluator.rotate_rows(c2986, 8, galois_keys, c3002);
evaluator.add(c2986, c3002, c2986);
evaluator.rotate_rows(c2986, 4, galois_keys, c3002);
evaluator.add(c2986, c3002, c2986);
evaluator.rotate_rows(c2986, 2, galois_keys, c3002);
evaluator.add(c2986, c3002, c2986);
evaluator.rotate_rows(c2986, 1, galois_keys, c3002);
evaluator.add(c2986, c3002, c2986);
evaluator.multiply_plain(c2986, p49, c2986);
evaluator.add(c3266, c2986, c3266);
evaluator.add(c3306, c3266, c3306);
evaluator.add(c3274, c3306, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.multiply(c5, c23, c3274);
evaluator.relinearize(c3274, relin_keys, c3274);
evaluator.rotate_rows(c3274, 8, galois_keys, c3306);
evaluator.add(c3274, c3306, c3274);
evaluator.rotate_rows(c3274, 4, galois_keys, c3306);
evaluator.add(c3274, c3306, c3274);
evaluator.rotate_rows(c3274, 2, galois_keys, c3306);
evaluator.add(c3274, c3306, c3274);
evaluator.rotate_rows(c3274, 1, galois_keys, c3306);
evaluator.add(c3274, c3306, c3274);
evaluator.multiply_plain(c3274, p64, c3274);
evaluator.multiply(c5, c24, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c3266);
evaluator.add(c3306, c3266, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c3002);
evaluator.add(c3306, c3002, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c3002);
evaluator.add(c3306, c3002, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c3002);
evaluator.add(c3306, c3002, c3306);
evaluator.multiply_plain(c3306, p69, c3306);
evaluator.add(c3274, c3306, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.multiply(c5, c25, c3274);
evaluator.relinearize(c3274, relin_keys, c3274);
evaluator.rotate_rows(c3274, 8, galois_keys, c3306);
evaluator.add(c3274, c3306, c3274);
evaluator.rotate_rows(c3274, 4, galois_keys, c3002);
evaluator.add(c3274, c3002, c3274);
evaluator.rotate_rows(c3274, 2, galois_keys, c3266);
evaluator.add(c3274, c3266, c3274);
evaluator.rotate_rows(c3274, 1, galois_keys, c3266);
evaluator.add(c3274, c3266, c3274);
evaluator.multiply_plain(c3274, p74, c3274);
evaluator.multiply(c5, c26, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c2986);
evaluator.add(c3266, c2986, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c2986);
evaluator.add(c3266, c2986, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c2986);
evaluator.add(c3266, c2986, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c2986);
evaluator.add(c3266, c2986, c3266);
evaluator.multiply_plain(c3266, p79, c3266);
evaluator.add(c3274, c3266, c3274);
evaluator.multiply(c5, c30, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c2986);
evaluator.add(c3266, c2986, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c2986);
evaluator.add(c3266, c2986, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c2986);
evaluator.add(c3266, c2986, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c2986);
evaluator.add(c3266, c2986, c3266);
evaluator.multiply_plain(c3266, p99, c3266);
evaluator.multiply(c5, c29, c2986);
evaluator.relinearize(c2986, relin_keys, c2986);
evaluator.rotate_rows(c2986, 8, galois_keys, c3306);
evaluator.add(c2986, c3306, c2986);
evaluator.rotate_rows(c2986, 4, galois_keys, c3306);
evaluator.add(c2986, c3306, c2986);
evaluator.rotate_rows(c2986, 2, galois_keys, c3306);
evaluator.add(c2986, c3306, c2986);
evaluator.rotate_rows(c2986, 1, galois_keys, c3306);
evaluator.add(c2986, c3306, c2986);
evaluator.multiply_plain(c2986, p94, c2986);
evaluator.multiply(c5, c27, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.multiply_plain(c3306, p84, c3306);
evaluator.multiply(c5, c28, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.multiply_plain(c3226, p89, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.add(c2986, c3306, c2986);
evaluator.add(c3266, c2986, c3266);
evaluator.add(c3274, c3266, c3274);
evaluator.multiply(c5, c31, c2986);
evaluator.relinearize(c2986, relin_keys, c2986);
evaluator.rotate_rows(c2986, 8, galois_keys, c3226);
evaluator.add(c2986, c3226, c2986);
evaluator.rotate_rows(c2986, 4, galois_keys, c3226);
evaluator.add(c2986, c3226, c2986);
evaluator.rotate_rows(c2986, 2, galois_keys, c3306);
evaluator.add(c2986, c3306, c2986);
evaluator.rotate_rows(c2986, 1, galois_keys, c3306);
evaluator.add(c2986, c3306, c2986);
evaluator.multiply_plain(c2986, p104, c2986);
evaluator.multiply(c5, c32, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c3306);
evaluator.add(c5, c3306, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c2);
evaluator.add(c5, c2, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c3266);
evaluator.add(c5, c3266, c5);
evaluator.multiply_plain(c5, p109, c5);
evaluator.add(c2986, c5, c2986);
evaluator.add(c3274, c2986, c3274);
evaluator.add(c3290, c3274, c3290);
evaluator.multiply(c7, c17, c3274);
evaluator.relinearize(c3274, relin_keys, c3274);
evaluator.rotate_rows(c3274, 8, galois_keys, c2986);
evaluator.add(c3274, c2986, c3274);
evaluator.rotate_rows(c3274, 4, galois_keys, c5);
evaluator.add(c3274, c5, c3274);
evaluator.rotate_rows(c3274, 2, galois_keys, c3266);
evaluator.add(c3274, c3266, c3274);
evaluator.rotate_rows(c3274, 1, galois_keys, c2);
evaluator.add(c3274, c2, c3274);
evaluator.multiply_plain(c3274, p35, c3274);
evaluator.multiply(c7, c18, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.multiply_plain(c3306, p39, c3306);
evaluator.add(c3274, c3306, c3274);
evaluator.multiply(c7, c21, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.multiply_plain(c3306, p54, c3306);
evaluator.multiply(c7, c19, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c2986);
evaluator.add(c3226, c2986, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c2986);
evaluator.add(c3226, c2986, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c2986);
evaluator.add(c3226, c2986, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c2986);
evaluator.add(c3226, c2986, c3226);
evaluator.multiply_plain(c3226, p44, c3226);
evaluator.multiply(c7, c20, c2986);
evaluator.relinearize(c2986, relin_keys, c2986);
evaluator.rotate_rows(c2986, 8, galois_keys, c5);
evaluator.add(c2986, c5, c2986);
evaluator.rotate_rows(c2986, 4, galois_keys, c5);
evaluator.add(c2986, c5, c2986);
evaluator.rotate_rows(c2986, 2, galois_keys, c5);
evaluator.add(c2986, c5, c2986);
evaluator.rotate_rows(c2986, 1, galois_keys, c5);
evaluator.add(c2986, c5, c2986);
evaluator.multiply_plain(c2986, p49, c2986);
evaluator.add(c3226, c2986, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.add(c3274, c3306, c3274);
evaluator.multiply(c7, c22, c2986);
evaluator.relinearize(c2986, relin_keys, c2986);
evaluator.rotate_rows(c2986, 8, galois_keys, c5);
evaluator.add(c2986, c5, c2986);
evaluator.rotate_rows(c2986, 4, galois_keys, c5);
evaluator.add(c2986, c5, c2986);
evaluator.rotate_rows(c2986, 2, galois_keys, c5);
evaluator.add(c2986, c5, c2986);
evaluator.rotate_rows(c2986, 1, galois_keys, c5);
evaluator.add(c2986, c5, c2986);
evaluator.multiply_plain(c2986, p59, c2986);
evaluator.multiply(c7, c23, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.multiply_plain(c5, p64, c5);
evaluator.multiply(c7, c24, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c3266);
evaluator.add(c3226, c3266, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.multiply_plain(c3226, p69, c3226);
evaluator.multiply(c7, c25, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.multiply_plain(c3306, p74, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.add(c5, c3226, c5);
evaluator.multiply(c7, c28, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.multiply_plain(c3306, p89, c3306);
evaluator.multiply(c7, c26, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.multiply_plain(c3226, p79, c3226);
evaluator.multiply(c7, c27, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c2962);
evaluator.add(c2, c2962, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c2962);
evaluator.add(c2, c2962, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c2962);
evaluator.add(c2, c2962, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c2962);
evaluator.add(c2, c2962, c2);
evaluator.multiply_plain(c2, p84, c2);
evaluator.add(c3226, c2, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.add(c5, c3306, c5);
evaluator.multiply(c7, c29, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c2962);
evaluator.add(c2, c2962, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c2962);
evaluator.add(c2, c2962, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c2962);
evaluator.add(c2, c2962, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c2962);
evaluator.add(c2, c2962, c2);
evaluator.multiply_plain(c2, p94, c2);
evaluator.multiply(c7, c30, c2962);
evaluator.relinearize(c2962, relin_keys, c2962);
evaluator.rotate_rows(c2962, 8, galois_keys, c3226);
evaluator.add(c2962, c3226, c2962);
evaluator.rotate_rows(c2962, 4, galois_keys, c3226);
evaluator.add(c2962, c3226, c2962);
evaluator.rotate_rows(c2962, 2, galois_keys, c3226);
evaluator.add(c2962, c3226, c2962);
evaluator.rotate_rows(c2962, 1, galois_keys, c3226);
evaluator.add(c2962, c3226, c2962);
evaluator.multiply_plain(c2962, p99, c2962);
evaluator.add(c2, c2962, c2);
evaluator.add(c5, c2, c5);
evaluator.add(c2986, c5, c2986);
evaluator.multiply(c7, c31, c2962);
evaluator.relinearize(c2962, relin_keys, c2962);
evaluator.rotate_rows(c2962, 8, galois_keys, c3226);
evaluator.add(c2962, c3226, c2962);
evaluator.rotate_rows(c2962, 4, galois_keys, c3306);
evaluator.add(c2962, c3306, c2962);
evaluator.rotate_rows(c2962, 2, galois_keys, c3306);
evaluator.add(c2962, c3306, c2962);
evaluator.rotate_rows(c2962, 1, galois_keys, c3306);
evaluator.add(c2962, c3306, c2962);
evaluator.multiply_plain(c2962, p104, c2962);
evaluator.multiply(c7, c32, c7);
evaluator.relinearize(c7, relin_keys, c7);
evaluator.rotate_rows(c7, 8, galois_keys, c3306);
evaluator.add(c7, c3306, c7);
evaluator.rotate_rows(c7, 4, galois_keys, c3306);
evaluator.add(c7, c3306, c7);
evaluator.rotate_rows(c7, 2, galois_keys, c3306);
evaluator.add(c7, c3306, c7);
evaluator.rotate_rows(c7, 1, galois_keys, c3306);
evaluator.add(c7, c3306, c7);
evaluator.multiply_plain(c7, p109, c7);
evaluator.add(c2962, c7, c2962);
evaluator.add(c2986, c2962, c2986);
evaluator.add(c3274, c2986, c3274);
evaluator.multiply(c9, c17, c7);
evaluator.relinearize(c7, relin_keys, c7);
evaluator.rotate_rows(c7, 8, galois_keys, c2986);
evaluator.add(c7, c2986, c7);
evaluator.rotate_rows(c7, 4, galois_keys, c2962);
evaluator.add(c7, c2962, c7);
evaluator.rotate_rows(c7, 2, galois_keys, c2986);
evaluator.add(c7, c2986, c7);
evaluator.rotate_rows(c7, 1, galois_keys, c2962);
evaluator.add(c7, c2962, c7);
evaluator.multiply_plain(c7, p35, c7);
evaluator.multiply(c9, c18, c2986);
evaluator.relinearize(c2986, relin_keys, c2986);
evaluator.rotate_rows(c2986, 8, galois_keys, c2962);
evaluator.add(c2986, c2962, c2986);
evaluator.rotate_rows(c2986, 4, galois_keys, c2962);
evaluator.add(c2986, c2962, c2986);
evaluator.rotate_rows(c2986, 2, galois_keys, c2962);
evaluator.add(c2986, c2962, c2986);
evaluator.rotate_rows(c2986, 1, galois_keys, c2962);
evaluator.add(c2986, c2962, c2986);
evaluator.multiply_plain(c2986, p39, c2986);
evaluator.add(c7, c2986, c7);
evaluator.multiply(c9, c23, c2986);
evaluator.relinearize(c2986, relin_keys, c2986);
evaluator.rotate_rows(c2986, 8, galois_keys, c2962);
evaluator.add(c2986, c2962, c2986);
evaluator.rotate_rows(c2986, 4, galois_keys, c2962);
evaluator.add(c2986, c2962, c2986);
evaluator.rotate_rows(c2986, 2, galois_keys, c2962);
evaluator.add(c2986, c2962, c2986);
evaluator.rotate_rows(c2986, 1, galois_keys, c2962);
evaluator.add(c2986, c2962, c2986);
evaluator.multiply_plain(c2986, p64, c2986);
evaluator.multiply(c9, c22, c2962);
evaluator.relinearize(c2962, relin_keys, c2962);
evaluator.rotate_rows(c2962, 8, galois_keys, c3306);
evaluator.add(c2962, c3306, c2962);
evaluator.rotate_rows(c2962, 4, galois_keys, c3306);
evaluator.add(c2962, c3306, c2962);
evaluator.rotate_rows(c2962, 2, galois_keys, c3306);
evaluator.add(c2962, c3306, c2962);
evaluator.rotate_rows(c2962, 1, galois_keys, c3306);
evaluator.add(c2962, c3306, c2962);
evaluator.multiply_plain(c2962, p59, c2962);
evaluator.multiply(c9, c21, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.multiply_plain(c3306, p54, c3306);
evaluator.multiply(c9, c19, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c3226);
evaluator.add(c2, c3226, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3226);
evaluator.add(c2, c3226, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3226);
evaluator.add(c2, c3226, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3226);
evaluator.add(c2, c3226, c2);
evaluator.multiply_plain(c2, p44, c2);
evaluator.multiply(c9, c20, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c5);
evaluator.add(c3226, c5, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c5);
evaluator.add(c3226, c5, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c5);
evaluator.add(c3226, c5, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c5);
evaluator.add(c3226, c5, c3226);
evaluator.multiply_plain(c3226, p49, c3226);
evaluator.add(c2, c3226, c2);
evaluator.add(c3306, c2, c3306);
evaluator.add(c2962, c3306, c2962);
evaluator.add(c2986, c2962, c2986);
evaluator.add(c7, c2986, c7);
evaluator.multiply(c9, c27, c2986);
evaluator.relinearize(c2986, relin_keys, c2986);
evaluator.rotate_rows(c2986, 8, galois_keys, c3306);
evaluator.add(c2986, c3306, c2986);
evaluator.rotate_rows(c2986, 4, galois_keys, c2);
evaluator.add(c2986, c2, c2986);
evaluator.rotate_rows(c2986, 2, galois_keys, c2);
evaluator.add(c2986, c2, c2986);
evaluator.rotate_rows(c2986, 1, galois_keys, c2962);
evaluator.add(c2986, c2962, c2986);
evaluator.multiply_plain(c2986, p84, c2986);
evaluator.multiply(c9, c26, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.multiply_plain(c3306, p79, c3306);
evaluator.multiply(c9, c24, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.multiply_plain(c3226, p69, c3226);
evaluator.multiply(c9, c25, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c2962);
evaluator.add(c2, c2962, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c2962);
evaluator.add(c2, c2962, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c2962);
evaluator.add(c2, c2962, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c2962);
evaluator.add(c2, c2962, c2);
evaluator.multiply_plain(c2, p74, c2);
evaluator.add(c3226, c2, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.add(c2986, c3306, c2986);
evaluator.add(c7, c2986, c7);
evaluator.multiply(c9, c28, c2986);
evaluator.relinearize(c2986, relin_keys, c2986);
evaluator.rotate_rows(c2986, 8, galois_keys, c3226);
evaluator.add(c2986, c3226, c2986);
evaluator.rotate_rows(c2986, 4, galois_keys, c3226);
evaluator.add(c2986, c3226, c2986);
evaluator.rotate_rows(c2986, 2, galois_keys, c3226);
evaluator.add(c2986, c3226, c2986);
evaluator.rotate_rows(c2986, 1, galois_keys, c3226);
evaluator.add(c2986, c3226, c2986);
evaluator.multiply_plain(c2986, p89, c2986);
evaluator.multiply(c9, c29, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c2962);
evaluator.add(c3226, c2962, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.multiply_plain(c3226, p94, c3226);
evaluator.multiply(c9, c30, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c2962);
evaluator.add(c3306, c2962, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.multiply_plain(c3306, p99, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.add(c2986, c3226, c2986);
evaluator.multiply(c9, c31, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.multiply_plain(c3226, p104, c3226);
evaluator.multiply(c9, c32, c9);
evaluator.relinearize(c9, relin_keys, c9);
evaluator.rotate_rows(c9, 8, galois_keys, c2);
evaluator.add(c9, c2, c9);
evaluator.rotate_rows(c9, 4, galois_keys, c2);
evaluator.add(c9, c2, c9);
evaluator.rotate_rows(c9, 2, galois_keys, c2);
evaluator.add(c9, c2, c9);
evaluator.rotate_rows(c9, 1, galois_keys, c2);
evaluator.add(c9, c2, c9);
evaluator.multiply_plain(c9, p109, c9);
evaluator.add(c3226, c9, c3226);
evaluator.add(c2986, c3226, c2986);
evaluator.add(c7, c2986, c7);
evaluator.multiply(c10, c17, c2986);
evaluator.relinearize(c2986, relin_keys, c2986);
evaluator.rotate_rows(c2986, 8, galois_keys, c3226);
evaluator.add(c2986, c3226, c2986);
evaluator.rotate_rows(c2986, 4, galois_keys, c3226);
evaluator.add(c2986, c3226, c2986);
evaluator.rotate_rows(c2986, 2, galois_keys, c3226);
evaluator.add(c2986, c3226, c2986);
evaluator.rotate_rows(c2986, 1, galois_keys, c3226);
evaluator.add(c2986, c3226, c2986);
evaluator.multiply_plain(c2986, p35, c2986);
evaluator.multiply(c10, c18, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.multiply_plain(c3226, p39, c3226);
evaluator.add(c2986, c3226, c2986);
evaluator.multiply(c10, c19, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c9);
evaluator.add(c2, c9, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c9);
evaluator.add(c2, c9, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c9);
evaluator.add(c2, c9, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c9);
evaluator.add(c2, c9, c2);
evaluator.multiply_plain(c2, p44, c2);
evaluator.add(c2986, c2, c2986);
evaluator.multiply(c10, c24, c9);
evaluator.relinearize(c9, relin_keys, c9);
evaluator.rotate_rows(c9, 8, galois_keys, c3226);
evaluator.add(c9, c3226, c9);
evaluator.rotate_rows(c9, 4, galois_keys, c3226);
evaluator.add(c9, c3226, c9);
evaluator.rotate_rows(c9, 2, galois_keys, c3226);
evaluator.add(c9, c3226, c9);
evaluator.rotate_rows(c9, 1, galois_keys, c3226);
evaluator.add(c9, c3226, c9);
evaluator.multiply_plain(c9, p69, c9);
evaluator.multiply(c10, c23, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.multiply_plain(c3226, p64, c3226);
evaluator.multiply(c10, c22, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c2962);
evaluator.add(c3306, c2962, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c2962);
evaluator.add(c3306, c2962, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c2962);
evaluator.add(c3306, c2962, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c2962);
evaluator.add(c3306, c2962, c3306);
evaluator.multiply_plain(c3306, p59, c3306);
evaluator.multiply(c10, c20, c2962);
evaluator.relinearize(c2962, relin_keys, c2962);
evaluator.rotate_rows(c2962, 8, galois_keys, c2970);
evaluator.add(c2962, c2970, c2962);
evaluator.rotate_rows(c2962, 4, galois_keys, c2970);
evaluator.add(c2962, c2970, c2962);
evaluator.rotate_rows(c2962, 2, galois_keys, c2970);
evaluator.add(c2962, c2970, c2962);
evaluator.rotate_rows(c2962, 1, galois_keys, c2970);
evaluator.add(c2962, c2970, c2962);
evaluator.multiply_plain(c2962, p49, c2962);
evaluator.multiply(c10, c21, c2970);
evaluator.relinearize(c2970, relin_keys, c2970);
evaluator.rotate_rows(c2970, 8, galois_keys, c2);
evaluator.add(c2970, c2, c2970);
evaluator.rotate_rows(c2970, 4, galois_keys, c2);
evaluator.add(c2970, c2, c2970);
evaluator.rotate_rows(c2970, 2, galois_keys, c2);
evaluator.add(c2970, c2, c2970);
evaluator.rotate_rows(c2970, 1, galois_keys, c2);
evaluator.add(c2970, c2, c2970);
evaluator.multiply_plain(c2970, p54, c2970);
evaluator.add(c2962, c2970, c2962);
evaluator.add(c3306, c2962, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.add(c9, c3226, c9);
evaluator.multiply(c10, c29, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c2962);
evaluator.add(c3226, c2962, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c2962);
evaluator.add(c3226, c2962, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c2962);
evaluator.add(c3226, c2962, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c2962);
evaluator.add(c3226, c2962, c3226);
evaluator.multiply_plain(c3226, p94, c3226);
evaluator.multiply(c10, c28, c2962);
evaluator.relinearize(c2962, relin_keys, c2962);
evaluator.rotate_rows(c2962, 8, galois_keys, c3306);
evaluator.add(c2962, c3306, c2962);
evaluator.rotate_rows(c2962, 4, galois_keys, c3306);
evaluator.add(c2962, c3306, c2962);
evaluator.rotate_rows(c2962, 2, galois_keys, c3306);
evaluator.add(c2962, c3306, c2962);
evaluator.rotate_rows(c2962, 1, galois_keys, c3306);
evaluator.add(c2962, c3306, c2962);
evaluator.multiply_plain(c2962, p89, c2962);
evaluator.multiply(c10, c27, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.multiply_plain(c3306, p84, c3306);
evaluator.multiply(c10, c25, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c2970);
evaluator.add(c2, c2970, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c2970);
evaluator.add(c2, c2970, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c2970);
evaluator.add(c2, c2970, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c2970);
evaluator.add(c2, c2970, c2);
evaluator.multiply_plain(c2, p74, c2);
evaluator.multiply(c10, c26, c2970);
evaluator.relinearize(c2970, relin_keys, c2970);
evaluator.rotate_rows(c2970, 8, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 4, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 2, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 1, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.multiply_plain(c2970, p79, c2970);
evaluator.add(c2, c2970, c2);
evaluator.add(c3306, c2, c3306);
evaluator.add(c2962, c3306, c2962);
evaluator.add(c3226, c2962, c3226);
evaluator.add(c9, c3226, c9);
evaluator.multiply(c10, c32, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c2962);
evaluator.add(c3226, c2962, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c2970);
evaluator.add(c3226, c2970, c3226);
evaluator.multiply_plain(c3226, p109, c3226);
evaluator.multiply(c10, c30, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c2962);
evaluator.add(c5, c2962, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c2962);
evaluator.add(c5, c2962, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c2962);
evaluator.add(c5, c2962, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c2962);
evaluator.add(c5, c2962, c5);
evaluator.multiply_plain(c5, p99, c5);
evaluator.multiply(c10, c31, c10);
evaluator.relinearize(c10, relin_keys, c10);
evaluator.rotate_rows(c10, 8, galois_keys, c2962);
evaluator.add(c10, c2962, c10);
evaluator.rotate_rows(c10, 4, galois_keys, c2962);
evaluator.add(c10, c2962, c10);
evaluator.rotate_rows(c10, 2, galois_keys, c2962);
evaluator.add(c10, c2962, c10);
evaluator.rotate_rows(c10, 1, galois_keys, c2962);
evaluator.add(c10, c2962, c10);
evaluator.multiply_plain(c10, p104, c10);
evaluator.add(c5, c10, c5);
evaluator.add(c3226, c5, c3226);
evaluator.add(c9, c3226, c9);
evaluator.add(c2986, c9, c2986);
evaluator.multiply(c15, c17, c9);
evaluator.relinearize(c9, relin_keys, c9);
evaluator.rotate_rows(c9, 8, galois_keys, c3226);
evaluator.add(c9, c3226, c9);
evaluator.rotate_rows(c9, 4, galois_keys, c3226);
evaluator.add(c9, c3226, c9);
evaluator.rotate_rows(c9, 2, galois_keys, c3226);
evaluator.add(c9, c3226, c9);
evaluator.rotate_rows(c9, 1, galois_keys, c3226);
evaluator.add(c9, c3226, c9);
evaluator.multiply_plain(c9, p35, c9);
evaluator.multiply(c15, c18, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c5);
evaluator.add(c3226, c5, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c5);
evaluator.add(c3226, c5, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c5);
evaluator.add(c3226, c5, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c5);
evaluator.add(c3226, c5, c3226);
evaluator.multiply_plain(c3226, p39, c3226);
evaluator.add(c9, c3226, c9);
evaluator.multiply(c15, c22, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c5);
evaluator.add(c3226, c5, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c2962);
evaluator.add(c3226, c2962, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c2962);
evaluator.add(c3226, c2962, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c2962);
evaluator.add(c3226, c2962, c3226);
evaluator.multiply_plain(c3226, p59, c3226);
evaluator.multiply(c15, c19, c2962);
evaluator.relinearize(c2962, relin_keys, c2962);
evaluator.rotate_rows(c2962, 8, galois_keys, c10);
evaluator.add(c2962, c10, c2962);
evaluator.rotate_rows(c2962, 4, galois_keys, c5);
evaluator.add(c2962, c5, c2962);
evaluator.rotate_rows(c2962, 2, galois_keys, c3306);
evaluator.add(c2962, c3306, c2962);
evaluator.rotate_rows(c2962, 1, galois_keys, c3306);
evaluator.add(c2962, c3306, c2962);
evaluator.multiply_plain(c2962, p44, c2962);
evaluator.multiply(c15, c20, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c2970);
evaluator.add(c3306, c2970, c3306);
evaluator.multiply_plain(c3306, p49, c3306);
evaluator.multiply(c15, c21, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c2970);
evaluator.add(c2, c2970, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c2970);
evaluator.add(c2, c2970, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c2970);
evaluator.add(c2, c2970, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c2970);
evaluator.add(c2, c2970, c2);
evaluator.multiply_plain(c2, p54, c2);
evaluator.add(c3306, c2, c3306);
evaluator.add(c2962, c3306, c2962);
evaluator.add(c3226, c2962, c3226);
evaluator.multiply(c15, c23, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c2970);
evaluator.add(c3306, c2970, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c2970);
evaluator.add(c3306, c2970, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c2970);
evaluator.add(c3306, c2970, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.multiply_plain(c3306, p64, c3306);
evaluator.multiply(c15, c30, c2962);
evaluator.relinearize(c2962, relin_keys, c2962);
evaluator.rotate_rows(c2962, 8, galois_keys, c2970);
evaluator.add(c2962, c2970, c2962);
evaluator.rotate_rows(c2962, 4, galois_keys, c2970);
evaluator.add(c2962, c2970, c2962);
evaluator.rotate_rows(c2962, 2, galois_keys, c2970);
evaluator.add(c2962, c2970, c2962);
evaluator.rotate_rows(c2962, 1, galois_keys, c2970);
evaluator.add(c2962, c2970, c2962);
evaluator.multiply_plain(c2962, p99, c2962);
evaluator.multiply(c15, c24, c2970);
evaluator.relinearize(c2970, relin_keys, c2970);
evaluator.rotate_rows(c2970, 8, galois_keys, c2);
evaluator.add(c2970, c2, c2970);
evaluator.rotate_rows(c2970, 4, galois_keys, c2);
evaluator.add(c2970, c2, c2970);
evaluator.rotate_rows(c2970, 2, galois_keys, c2);
evaluator.add(c2970, c2, c2970);
evaluator.rotate_rows(c2970, 1, galois_keys, c2);
evaluator.add(c2970, c2, c2970);
evaluator.multiply_plain(c2970, p69, c2970);
evaluator.multiply(c15, c25, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c10);
evaluator.add(c2, c10, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c10);
evaluator.add(c2, c10, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c10);
evaluator.add(c2, c10, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c10);
evaluator.add(c2, c10, c2);
evaluator.multiply_plain(c2, p74, c2);
evaluator.multiply(c15, c26, c10);
evaluator.relinearize(c10, relin_keys, c10);
evaluator.rotate_rows(c10, 8, galois_keys, c5);
evaluator.add(c10, c5, c10);
evaluator.rotate_rows(c10, 4, galois_keys, c5);
evaluator.add(c10, c5, c10);
evaluator.rotate_rows(c10, 2, galois_keys, c5);
evaluator.add(c10, c5, c10);
evaluator.rotate_rows(c10, 1, galois_keys, c5);
evaluator.add(c10, c5, c10);
evaluator.multiply_plain(c10, p79, c10);
evaluator.multiply(c15, c27, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c3266);
evaluator.add(c5, c3266, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c3266);
evaluator.add(c5, c3266, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c3266);
evaluator.add(c5, c3266, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c3266);
evaluator.add(c5, c3266, c5);
evaluator.multiply_plain(c5, p84, c5);
evaluator.add(c10, c5, c10);
evaluator.add(c2, c10, c2);
evaluator.multiply(c15, c28, c10);
evaluator.relinearize(c10, relin_keys, c10);
evaluator.rotate_rows(c10, 8, galois_keys, c5);
evaluator.add(c10, c5, c10);
evaluator.rotate_rows(c10, 4, galois_keys, c5);
evaluator.add(c10, c5, c10);
evaluator.rotate_rows(c10, 2, galois_keys, c5);
evaluator.add(c10, c5, c10);
evaluator.rotate_rows(c10, 1, galois_keys, c5);
evaluator.add(c10, c5, c10);
evaluator.multiply_plain(c10, p89, c10);
evaluator.multiply(c15, c29, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c3266);
evaluator.add(c5, c3266, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c3266);
evaluator.add(c5, c3266, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c3266);
evaluator.add(c5, c3266, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c3266);
evaluator.add(c5, c3266, c5);
evaluator.multiply_plain(c5, p94, c5);
evaluator.add(c10, c5, c10);
evaluator.add(c2, c10, c2);
evaluator.add(c2970, c2, c2970);
evaluator.add(c2962, c2970, c2962);
evaluator.multiply(c15, c31, c2970);
evaluator.relinearize(c2970, relin_keys, c2970);
evaluator.rotate_rows(c2970, 8, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 4, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 2, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 1, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.multiply_plain(c2970, p104, c2970);
evaluator.multiply(c15, c32, c15);
evaluator.relinearize(c15, relin_keys, c15);
evaluator.rotate_rows(c15, 8, galois_keys, c5);
evaluator.add(c15, c5, c15);
evaluator.rotate_rows(c15, 4, galois_keys, c5);
evaluator.add(c15, c5, c15);
evaluator.rotate_rows(c15, 2, galois_keys, c3266);
evaluator.add(c15, c3266, c15);
evaluator.rotate_rows(c15, 1, galois_keys, c3266);
evaluator.add(c15, c3266, c15);
evaluator.multiply_plain(c15, p109, c15);
evaluator.add(c2970, c15, c2970);
evaluator.add(c2962, c2970, c2962);
evaluator.add(c3306, c2962, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.add(c9, c3226, c9);
evaluator.multiply(c6, c17, c15);
evaluator.relinearize(c15, relin_keys, c15);
evaluator.rotate_rows(c15, 8, galois_keys, c3266);
evaluator.add(c15, c3266, c15);
evaluator.rotate_rows(c15, 4, galois_keys, c3266);
evaluator.add(c15, c3266, c15);
evaluator.rotate_rows(c15, 2, galois_keys, c3266);
evaluator.add(c15, c3266, c15);
evaluator.rotate_rows(c15, 1, galois_keys, c3266);
evaluator.add(c15, c3266, c15);
evaluator.multiply_plain(c15, p35, c15);
evaluator.multiply(c6, c18, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c5);
evaluator.add(c3266, c5, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c10);
evaluator.add(c3266, c10, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c2);
evaluator.add(c3266, c2, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c2);
evaluator.add(c3266, c2, c3266);
evaluator.multiply_plain(c3266, p39, c3266);
evaluator.add(c15, c3266, c15);
evaluator.multiply(c6, c19, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c2);
evaluator.add(c3266, c2, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c5);
evaluator.add(c3266, c5, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c10);
evaluator.add(c3266, c10, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c2970);
evaluator.add(c3266, c2970, c3266);
evaluator.multiply_plain(c3266, p44, c3266);
evaluator.add(c15, c3266, c15);
evaluator.multiply(c6, c20, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c2970);
evaluator.add(c3266, c2970, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c2970);
evaluator.add(c3266, c2970, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c2970);
evaluator.add(c3266, c2970, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c2962);
evaluator.add(c3266, c2962, c3266);
evaluator.multiply_plain(c3266, p49, c3266);
evaluator.add(c15, c3266, c15);
evaluator.multiply(c6, c24, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c2970);
evaluator.add(c3266, c2970, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c2970);
evaluator.add(c3266, c2970, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c2970);
evaluator.add(c3266, c2970, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c2970);
evaluator.add(c3266, c2970, c3266);
evaluator.multiply_plain(c3266, p69, c3266);
evaluator.multiply(c6, c21, c2970);
evaluator.relinearize(c2970, relin_keys, c2970);
evaluator.rotate_rows(c2970, 8, galois_keys, c3306);
evaluator.add(c2970, c3306, c2970);
evaluator.rotate_rows(c2970, 4, galois_keys, c3306);
evaluator.add(c2970, c3306, c2970);
evaluator.rotate_rows(c2970, 2, galois_keys, c3306);
evaluator.add(c2970, c3306, c2970);
evaluator.rotate_rows(c2970, 1, galois_keys, c3306);
evaluator.add(c2970, c3306, c2970);
evaluator.multiply_plain(c2970, p54, c2970);
evaluator.multiply(c6, c22, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.multiply_plain(c3306, p59, c3306);
evaluator.multiply(c6, c23, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c2962);
evaluator.add(c3226, c2962, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c2962);
evaluator.add(c3226, c2962, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c2962);
evaluator.add(c3226, c2962, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c2962);
evaluator.add(c3226, c2962, c3226);
evaluator.multiply_plain(c3226, p64, c3226);
evaluator.add(c3306, c3226, c3306);
evaluator.add(c2970, c3306, c2970);
evaluator.add(c3266, c2970, c3266);
evaluator.add(c15, c3266, c15);
evaluator.multiply(c6, c25, c2962);
evaluator.relinearize(c2962, relin_keys, c2962);
evaluator.rotate_rows(c2962, 8, galois_keys, c3226);
evaluator.add(c2962, c3226, c2962);
evaluator.rotate_rows(c2962, 4, galois_keys, c3226);
evaluator.add(c2962, c3226, c2962);
evaluator.rotate_rows(c2962, 2, galois_keys, c3226);
evaluator.add(c2962, c3226, c2962);
evaluator.rotate_rows(c2962, 1, galois_keys, c3226);
evaluator.add(c2962, c3226, c2962);
evaluator.multiply_plain(c2962, p74, c2962);
evaluator.multiply(c6, c29, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c3306);
evaluator.add(c3226, c3306, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c2970);
evaluator.add(c3226, c2970, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c2970);
evaluator.add(c3226, c2970, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c2970);
evaluator.add(c3226, c2970, c3226);
evaluator.multiply_plain(c3226, p94, c3226);
evaluator.multiply(c6, c28, c2970);
evaluator.relinearize(c2970, relin_keys, c2970);
evaluator.rotate_rows(c2970, 8, galois_keys, c3266);
evaluator.add(c2970, c3266, c2970);
evaluator.rotate_rows(c2970, 4, galois_keys, c3266);
evaluator.add(c2970, c3266, c2970);
evaluator.rotate_rows(c2970, 2, galois_keys, c3266);
evaluator.add(c2970, c3266, c2970);
evaluator.rotate_rows(c2970, 1, galois_keys, c3266);
evaluator.add(c2970, c3266, c2970);
evaluator.multiply_plain(c2970, p89, c2970);
evaluator.multiply(c6, c26, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c3266);
evaluator.add(c2, c3266, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3266);
evaluator.add(c2, c3266, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3266);
evaluator.add(c2, c3266, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3266);
evaluator.add(c2, c3266, c2);
evaluator.multiply_plain(c2, p79, c2);
evaluator.multiply(c6, c27, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c5);
evaluator.add(c3266, c5, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c5);
evaluator.add(c3266, c5, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c5);
evaluator.add(c3266, c5, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c5);
evaluator.add(c3266, c5, c3266);
evaluator.multiply_plain(c3266, p84, c3266);
evaluator.add(c2, c3266, c2);
evaluator.add(c2970, c2, c2970);
evaluator.add(c3226, c2970, c3226);
evaluator.multiply(c6, c30, c2970);
evaluator.relinearize(c2970, relin_keys, c2970);
evaluator.rotate_rows(c2970, 8, galois_keys, c2);
evaluator.add(c2970, c2, c2970);
evaluator.rotate_rows(c2970, 4, galois_keys, c2);
evaluator.add(c2970, c2, c2970);
evaluator.rotate_rows(c2970, 2, galois_keys, c2);
evaluator.add(c2970, c2, c2970);
evaluator.rotate_rows(c2970, 1, galois_keys, c3266);
evaluator.add(c2970, c3266, c2970);
evaluator.multiply_plain(c2970, p99, c2970);
evaluator.multiply(c6, c31, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c5);
evaluator.add(c3266, c5, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c5);
evaluator.add(c3266, c5, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c5);
evaluator.add(c3266, c5, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c2);
evaluator.add(c3266, c2, c3266);
evaluator.multiply_plain(c3266, p104, c3266);
evaluator.multiply(c6, c32, c6);
evaluator.relinearize(c6, relin_keys, c6);
evaluator.rotate_rows(c6, 8, galois_keys, c2);
evaluator.add(c6, c2, c6);
evaluator.rotate_rows(c6, 4, galois_keys, c2);
evaluator.add(c6, c2, c6);
evaluator.rotate_rows(c6, 2, galois_keys, c2);
evaluator.add(c6, c2, c6);
evaluator.rotate_rows(c6, 1, galois_keys, c2);
evaluator.add(c6, c2, c6);
evaluator.multiply_plain(c6, p109, c6);
evaluator.add(c3266, c6, c3266);
evaluator.add(c2970, c3266, c2970);
evaluator.add(c3226, c2970, c3226);
evaluator.add(c2962, c3226, c2962);
evaluator.add(c15, c2962, c15);
evaluator.multiply(c11, c17, c2962);
evaluator.relinearize(c2962, relin_keys, c2962);
evaluator.rotate_rows(c2962, 8, galois_keys, c3226);
evaluator.add(c2962, c3226, c2962);
evaluator.rotate_rows(c2962, 4, galois_keys, c2970);
evaluator.add(c2962, c2970, c2962);
evaluator.rotate_rows(c2962, 2, galois_keys, c2);
evaluator.add(c2962, c2, c2962);
evaluator.rotate_rows(c2962, 1, galois_keys, c5);
evaluator.add(c2962, c5, c2962);
evaluator.multiply_plain(c2962, p35, c2962);
evaluator.multiply(c11, c18, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c3266);
evaluator.add(c5, c3266, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c6);
evaluator.add(c5, c6, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c2970);
evaluator.add(c5, c2970, c5);
evaluator.multiply_plain(c5, p39, c5);
evaluator.add(c2962, c5, c2962);
evaluator.multiply(c11, c19, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c2);
evaluator.add(c5, c2, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c2);
evaluator.add(c5, c2, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c2);
evaluator.add(c5, c2, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c2);
evaluator.add(c5, c2, c5);
evaluator.multiply_plain(c5, p44, c5);
evaluator.add(c2962, c5, c2962);
evaluator.multiply(c11, c23, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c2);
evaluator.add(c5, c2, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c2);
evaluator.add(c5, c2, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c2);
evaluator.add(c5, c2, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c2);
evaluator.add(c5, c2, c5);
evaluator.multiply_plain(c5, p64, c5);
evaluator.multiply(c11, c20, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c3266);
evaluator.add(c2, c3266, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3266);
evaluator.add(c2, c3266, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3266);
evaluator.add(c2, c3266, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3266);
evaluator.add(c2, c3266, c2);
evaluator.multiply_plain(c2, p49, c2);
evaluator.multiply(c11, c21, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c3226);
evaluator.add(c3266, c3226, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c3226);
evaluator.add(c3266, c3226, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c3226);
evaluator.add(c3266, c3226, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c3226);
evaluator.add(c3266, c3226, c3266);
evaluator.multiply_plain(c3266, p54, c3266);
evaluator.multiply(c11, c22, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c6);
evaluator.add(c3226, c6, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c6);
evaluator.add(c3226, c6, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c6);
evaluator.add(c3226, c6, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c6);
evaluator.add(c3226, c6, c3226);
evaluator.multiply_plain(c3226, p59, c3226);
evaluator.add(c3266, c3226, c3266);
evaluator.add(c2, c3266, c2);
evaluator.add(c5, c2, c5);
evaluator.add(c2962, c5, c2962);
evaluator.multiply(c11, c30, c6);
evaluator.relinearize(c6, relin_keys, c6);
evaluator.rotate_rows(c6, 8, galois_keys, c3226);
evaluator.add(c6, c3226, c6);
evaluator.rotate_rows(c6, 4, galois_keys, c3226);
evaluator.add(c6, c3226, c6);
evaluator.rotate_rows(c6, 2, galois_keys, c3226);
evaluator.add(c6, c3226, c6);
evaluator.rotate_rows(c6, 1, galois_keys, c3226);
evaluator.add(c6, c3226, c6);
evaluator.multiply_plain(c6, p99, c6);
evaluator.multiply(c11, c24, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c3266);
evaluator.add(c3226, c3266, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c3266);
evaluator.add(c3226, c3266, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.multiply_plain(c3226, p69, c3226);
evaluator.multiply(c11, c29, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c3266);
evaluator.add(c2, c3266, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3266);
evaluator.add(c2, c3266, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3266);
evaluator.add(c2, c3266, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3266);
evaluator.add(c2, c3266, c2);
evaluator.multiply_plain(c2, p94, c2);
evaluator.multiply(c11, c28, c3266);
evaluator.relinearize(c3266, relin_keys, c3266);
evaluator.rotate_rows(c3266, 8, galois_keys, c5);
evaluator.add(c3266, c5, c3266);
evaluator.rotate_rows(c3266, 4, galois_keys, c5);
evaluator.add(c3266, c5, c3266);
evaluator.rotate_rows(c3266, 2, galois_keys, c5);
evaluator.add(c3266, c5, c3266);
evaluator.rotate_rows(c3266, 1, galois_keys, c5);
evaluator.add(c3266, c5, c3266);
evaluator.multiply_plain(c3266, p89, c3266);
evaluator.multiply(c11, c25, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c3306);
evaluator.add(c5, c3306, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c3306);
evaluator.add(c5, c3306, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c3306);
evaluator.add(c5, c3306, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c3306);
evaluator.add(c5, c3306, c5);
evaluator.multiply_plain(c5, p74, c5);
evaluator.multiply(c11, c26, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c2970);
evaluator.add(c3306, c2970, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c2970);
evaluator.add(c3306, c2970, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c2970);
evaluator.add(c3306, c2970, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c2970);
evaluator.add(c3306, c2970, c3306);
evaluator.multiply_plain(c3306, p79, c3306);
evaluator.multiply(c11, c27, c2970);
evaluator.relinearize(c2970, relin_keys, c2970);
evaluator.rotate_rows(c2970, 8, galois_keys, c10);
evaluator.add(c2970, c10, c2970);
evaluator.rotate_rows(c2970, 4, galois_keys, c10);
evaluator.add(c2970, c10, c2970);
evaluator.rotate_rows(c2970, 2, galois_keys, c10);
evaluator.add(c2970, c10, c2970);
evaluator.rotate_rows(c2970, 1, galois_keys, c10);
evaluator.add(c2970, c10, c2970);
evaluator.multiply_plain(c2970, p84, c2970);
evaluator.add(c3306, c2970, c3306);
evaluator.add(c5, c3306, c5);
evaluator.add(c3266, c5, c3266);
evaluator.add(c2, c3266, c2);
evaluator.add(c3226, c2, c3226);
evaluator.add(c6, c3226, c6);
evaluator.multiply(c11, c31, c10);
evaluator.relinearize(c10, relin_keys, c10);
evaluator.rotate_rows(c10, 8, galois_keys, c3266);
evaluator.add(c10, c3266, c10);
evaluator.rotate_rows(c10, 4, galois_keys, c3266);
evaluator.add(c10, c3266, c10);
evaluator.rotate_rows(c10, 2, galois_keys, c3266);
evaluator.add(c10, c3266, c10);
evaluator.rotate_rows(c10, 1, galois_keys, c3266);
evaluator.add(c10, c3266, c10);
evaluator.multiply_plain(c10, p104, c10);
evaluator.multiply(c11, c32, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c3266);
evaluator.add(c11, c3266, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c5);
evaluator.add(c11, c5, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c5);
evaluator.add(c11, c5, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c3306);
evaluator.add(c11, c3306, c11);
evaluator.multiply_plain(c11, p109, c11);
evaluator.add(c10, c11, c10);
evaluator.add(c6, c10, c6);
evaluator.add(c2962, c6, c2962);
evaluator.multiply(c4, c17, c6);
evaluator.relinearize(c6, relin_keys, c6);
evaluator.rotate_rows(c6, 8, galois_keys, c10);
evaluator.add(c6, c10, c6);
evaluator.rotate_rows(c6, 4, galois_keys, c5);
evaluator.add(c6, c5, c6);
evaluator.rotate_rows(c6, 2, galois_keys, c2);
evaluator.add(c6, c2, c6);
evaluator.rotate_rows(c6, 1, galois_keys, c3226);
evaluator.add(c6, c3226, c6);
evaluator.multiply_plain(c6, p35, c6);
evaluator.multiply(c4, c18, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c10);
evaluator.add(c3306, c10, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c10);
evaluator.add(c3306, c10, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c10);
evaluator.add(c3306, c10, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c10);
evaluator.add(c3306, c10, c3306);
evaluator.multiply_plain(c3306, p39, c3306);
evaluator.add(c6, c3306, c6);
evaluator.multiply(c4, c19, c10);
evaluator.relinearize(c10, relin_keys, c10);
evaluator.rotate_rows(c10, 8, galois_keys, c2970);
evaluator.add(c10, c2970, c10);
evaluator.rotate_rows(c10, 4, galois_keys, c2970);
evaluator.add(c10, c2970, c10);
evaluator.rotate_rows(c10, 2, galois_keys, c2970);
evaluator.add(c10, c2970, c10);
evaluator.rotate_rows(c10, 1, galois_keys, c2970);
evaluator.add(c10, c2970, c10);
evaluator.multiply_plain(c10, p44, c10);
evaluator.add(c6, c10, c6);
evaluator.multiply(c4, c23, c2970);
evaluator.relinearize(c2970, relin_keys, c2970);
evaluator.rotate_rows(c2970, 8, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 4, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 2, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 1, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.multiply_plain(c2970, p64, c2970);
evaluator.multiply(c4, c22, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c11);
evaluator.add(c5, c11, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c11);
evaluator.add(c5, c11, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c11);
evaluator.add(c5, c11, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c11);
evaluator.add(c5, c11, c5);
evaluator.multiply_plain(c5, p59, c5);
evaluator.multiply(c4, c20, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c3306);
evaluator.add(c11, c3306, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c3306);
evaluator.add(c11, c3306, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c3306);
evaluator.add(c11, c3306, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c3306);
evaluator.add(c11, c3306, c11);
evaluator.multiply_plain(c11, p49, c11);
evaluator.multiply(c4, c21, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c2);
evaluator.add(c3306, c2, c3306);
evaluator.multiply_plain(c3306, p54, c3306);
evaluator.add(c11, c3306, c11);
evaluator.add(c5, c11, c5);
evaluator.add(c2970, c5, c2970);
evaluator.add(c6, c2970, c6);
evaluator.multiply(c4, c24, c2970);
evaluator.relinearize(c2970, relin_keys, c2970);
evaluator.rotate_rows(c2970, 8, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 4, galois_keys, c11);
evaluator.add(c2970, c11, c2970);
evaluator.rotate_rows(c2970, 2, galois_keys, c2);
evaluator.add(c2970, c2, c2970);
evaluator.rotate_rows(c2970, 1, galois_keys, c3306);
evaluator.add(c2970, c3306, c2970);
evaluator.multiply_plain(c2970, p69, c2970);
evaluator.multiply(c4, c27, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c5);
evaluator.add(c3306, c5, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c5);
evaluator.add(c3306, c5, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c5);
evaluator.add(c3306, c5, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c5);
evaluator.add(c3306, c5, c3306);
evaluator.multiply_plain(c3306, p84, c3306);
evaluator.multiply(c4, c25, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c11);
evaluator.add(c5, c11, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c11);
evaluator.add(c5, c11, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c11);
evaluator.add(c5, c11, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c11);
evaluator.add(c5, c11, c5);
evaluator.multiply_plain(c5, p74, c5);
evaluator.multiply(c4, c26, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c10);
evaluator.add(c11, c10, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c10);
evaluator.add(c11, c10, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c10);
evaluator.add(c11, c10, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c10);
evaluator.add(c11, c10, c11);
evaluator.multiply_plain(c11, p79, c11);
evaluator.add(c5, c11, c5);
evaluator.add(c3306, c5, c3306);
evaluator.multiply(c4, c28, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c10);
evaluator.add(c5, c10, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c10);
evaluator.add(c5, c10, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c10);
evaluator.add(c5, c10, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c10);
evaluator.add(c5, c10, c5);
evaluator.multiply_plain(c5, p89, c5);
evaluator.multiply(c4, c29, c10);
evaluator.relinearize(c10, relin_keys, c10);
evaluator.rotate_rows(c10, 8, galois_keys, c11);
evaluator.add(c10, c11, c10);
evaluator.rotate_rows(c10, 4, galois_keys, c11);
evaluator.add(c10, c11, c10);
evaluator.rotate_rows(c10, 2, galois_keys, c11);
evaluator.add(c10, c11, c10);
evaluator.rotate_rows(c10, 1, galois_keys, c11);
evaluator.add(c10, c11, c10);
evaluator.multiply_plain(c10, p94, c10);
evaluator.multiply(c4, c30, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c3226);
evaluator.add(c11, c3226, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c3226);
evaluator.add(c11, c3226, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c3226);
evaluator.add(c11, c3226, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c3226);
evaluator.add(c11, c3226, c11);
evaluator.multiply_plain(c11, p99, c11);
evaluator.add(c10, c11, c10);
evaluator.add(c5, c10, c5);
evaluator.multiply(c4, c31, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c3226);
evaluator.add(c11, c3226, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c10);
evaluator.add(c11, c10, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c3226);
evaluator.add(c11, c3226, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c3226);
evaluator.add(c11, c3226, c11);
evaluator.multiply_plain(c11, p104, c11);
evaluator.multiply(c4, c32, c4);
evaluator.relinearize(c4, relin_keys, c4);
evaluator.rotate_rows(c4, 8, galois_keys, c3226);
evaluator.add(c4, c3226, c4);
evaluator.rotate_rows(c4, 4, galois_keys, c3226);
evaluator.add(c4, c3226, c4);
evaluator.rotate_rows(c4, 2, galois_keys, c3226);
evaluator.add(c4, c3226, c4);
evaluator.rotate_rows(c4, 1, galois_keys, c3226);
evaluator.add(c4, c3226, c4);
evaluator.multiply_plain(c4, p109, c4);
evaluator.add(c11, c4, c11);
evaluator.add(c5, c11, c5);
evaluator.add(c3306, c5, c3306);
evaluator.add(c2970, c3306, c2970);
evaluator.add(c6, c2970, c6);
evaluator.multiply(c8, c17, c3306);
evaluator.relinearize(c3306, relin_keys, c3306);
evaluator.rotate_rows(c3306, 8, galois_keys, c11);
evaluator.add(c3306, c11, c3306);
evaluator.rotate_rows(c3306, 4, galois_keys, c4);
evaluator.add(c3306, c4, c3306);
evaluator.rotate_rows(c3306, 2, galois_keys, c4);
evaluator.add(c3306, c4, c3306);
evaluator.rotate_rows(c3306, 1, galois_keys, c11);
evaluator.add(c3306, c11, c3306);
evaluator.multiply_plain(c3306, p35, c3306);
evaluator.multiply(c8, c18, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c2970);
evaluator.add(c11, c2970, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c2970);
evaluator.add(c11, c2970, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c2970);
evaluator.add(c11, c2970, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c2970);
evaluator.add(c11, c2970, c11);
evaluator.multiply_plain(c11, p39, c11);
evaluator.add(c3306, c11, c3306);
evaluator.multiply(c8, c19, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c4);
evaluator.add(c11, c4, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c4);
evaluator.add(c11, c4, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c4);
evaluator.add(c11, c4, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c4);
evaluator.add(c11, c4, c11);
evaluator.multiply_plain(c11, p44, c11);
evaluator.add(c3306, c11, c3306);
evaluator.multiply(c8, c20, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c4);
evaluator.add(c11, c4, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c4);
evaluator.add(c11, c4, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c4);
evaluator.add(c11, c4, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c4);
evaluator.add(c11, c4, c11);
evaluator.multiply_plain(c11, p49, c11);
evaluator.add(c3306, c11, c3306);
evaluator.multiply(c8, c24, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c4);
evaluator.add(c11, c4, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c4);
evaluator.add(c11, c4, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c4);
evaluator.add(c11, c4, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c4);
evaluator.add(c11, c4, c11);
evaluator.multiply_plain(c11, p69, c11);
evaluator.multiply(c8, c23, c4);
evaluator.relinearize(c4, relin_keys, c4);
evaluator.rotate_rows(c4, 8, galois_keys, c2970);
evaluator.add(c4, c2970, c4);
evaluator.rotate_rows(c4, 4, galois_keys, c2970);
evaluator.add(c4, c2970, c4);
evaluator.rotate_rows(c4, 2, galois_keys, c2970);
evaluator.add(c4, c2970, c4);
evaluator.rotate_rows(c4, 1, galois_keys, c2970);
evaluator.add(c4, c2970, c4);
evaluator.multiply_plain(c4, p64, c4);
evaluator.multiply(c8, c21, c2970);
evaluator.relinearize(c2970, relin_keys, c2970);
evaluator.rotate_rows(c2970, 8, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 4, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 2, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 1, galois_keys, c3226);
evaluator.add(c2970, c3226, c2970);
evaluator.multiply_plain(c2970, p54, c2970);
evaluator.multiply(c8, c22, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.multiply_plain(c5, p59, c5);
evaluator.add(c2970, c5, c2970);
evaluator.add(c4, c2970, c4);
evaluator.add(c11, c4, c11);
evaluator.multiply(c8, c25, c4);
evaluator.relinearize(c4, relin_keys, c4);
evaluator.rotate_rows(c4, 8, galois_keys, c2970);
evaluator.add(c4, c2970, c4);
evaluator.rotate_rows(c4, 4, galois_keys, c5);
evaluator.add(c4, c5, c4);
evaluator.rotate_rows(c4, 2, galois_keys, c5);
evaluator.add(c4, c5, c4);
evaluator.rotate_rows(c4, 1, galois_keys, c5);
evaluator.add(c4, c5, c4);
evaluator.multiply_plain(c4, p74, c4);
evaluator.multiply(c8, c26, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c2970);
evaluator.add(c5, c2970, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c2970);
evaluator.add(c5, c2970, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c2970);
evaluator.add(c5, c2970, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c2970);
evaluator.add(c5, c2970, c5);
evaluator.multiply_plain(c5, p79, c5);
evaluator.add(c4, c5, c4);
evaluator.add(c11, c4, c11);
evaluator.multiply(c8, c30, c4);
evaluator.relinearize(c4, relin_keys, c4);
evaluator.rotate_rows(c4, 8, galois_keys, c5);
evaluator.add(c4, c5, c4);
evaluator.rotate_rows(c4, 4, galois_keys, c5);
evaluator.add(c4, c5, c4);
evaluator.rotate_rows(c4, 2, galois_keys, c2970);
evaluator.add(c4, c2970, c4);
evaluator.rotate_rows(c4, 1, galois_keys, c2970);
evaluator.add(c4, c2970, c4);
evaluator.multiply_plain(c4, p99, c4);
evaluator.multiply(c8, c29, c2970);
evaluator.relinearize(c2970, relin_keys, c2970);
evaluator.rotate_rows(c2970, 8, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 4, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 2, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 1, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.multiply_plain(c2970, p94, c2970);
evaluator.multiply(c8, c27, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.multiply_plain(c5, p84, c5);
evaluator.multiply(c8, c28, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.multiply_plain(c3226, p89, c3226);
evaluator.add(c5, c3226, c5);
evaluator.add(c2970, c5, c2970);
evaluator.add(c4, c2970, c4);
evaluator.add(c11, c4, c11);
evaluator.add(c3306, c11, c3306);
evaluator.multiply(c8, c31, c4);
evaluator.relinearize(c4, relin_keys, c4);
evaluator.rotate_rows(c4, 8, galois_keys, c2970);
evaluator.add(c4, c2970, c4);
evaluator.rotate_rows(c4, 4, galois_keys, c2970);
evaluator.add(c4, c2970, c4);
evaluator.rotate_rows(c4, 2, galois_keys, c3226);
evaluator.add(c4, c3226, c4);
evaluator.rotate_rows(c4, 1, galois_keys, c5);
evaluator.add(c4, c5, c4);
evaluator.multiply_plain(c4, p104, c4);
evaluator.multiply(c8, c32, c8);
evaluator.relinearize(c8, relin_keys, c8);
evaluator.rotate_rows(c8, 8, galois_keys, c2);
evaluator.add(c8, c2, c8);
evaluator.rotate_rows(c8, 4, galois_keys, c11);
evaluator.add(c8, c11, c8);
evaluator.rotate_rows(c8, 2, galois_keys, c11);
evaluator.add(c8, c11, c8);
evaluator.rotate_rows(c8, 1, galois_keys, c11);
evaluator.add(c8, c11, c8);
evaluator.multiply_plain(c8, p109, c8);
evaluator.add(c4, c8, c4);
evaluator.add(c3306, c4, c3306);
evaluator.multiply(c12, c17, c4);
evaluator.relinearize(c4, relin_keys, c4);
evaluator.rotate_rows(c4, 8, galois_keys, c8);
evaluator.add(c4, c8, c4);
evaluator.rotate_rows(c4, 4, galois_keys, c8);
evaluator.add(c4, c8, c4);
evaluator.rotate_rows(c4, 2, galois_keys, c8);
evaluator.add(c4, c8, c4);
evaluator.rotate_rows(c4, 1, galois_keys, c8);
evaluator.add(c4, c8, c4);
evaluator.multiply_plain(c4, p35, c4);
evaluator.multiply(c12, c18, c8);
evaluator.relinearize(c8, relin_keys, c8);
evaluator.rotate_rows(c8, 8, galois_keys, c11);
evaluator.add(c8, c11, c8);
evaluator.rotate_rows(c8, 4, galois_keys, c11);
evaluator.add(c8, c11, c8);
evaluator.rotate_rows(c8, 2, galois_keys, c11);
evaluator.add(c8, c11, c8);
evaluator.rotate_rows(c8, 1, galois_keys, c11);
evaluator.add(c8, c11, c8);
evaluator.multiply_plain(c8, p39, c8);
evaluator.add(c4, c8, c4);
evaluator.multiply(c12, c21, c8);
evaluator.relinearize(c8, relin_keys, c8);
evaluator.rotate_rows(c8, 8, galois_keys, c11);
evaluator.add(c8, c11, c8);
evaluator.rotate_rows(c8, 4, galois_keys, c11);
evaluator.add(c8, c11, c8);
evaluator.rotate_rows(c8, 2, galois_keys, c11);
evaluator.add(c8, c11, c8);
evaluator.rotate_rows(c8, 1, galois_keys, c11);
evaluator.add(c8, c11, c8);
evaluator.multiply_plain(c8, p54, c8);
evaluator.multiply(c12, c19, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c2);
evaluator.add(c11, c2, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c2);
evaluator.add(c11, c2, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c2);
evaluator.add(c11, c2, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c2);
evaluator.add(c11, c2, c11);
evaluator.multiply_plain(c11, p44, c11);
evaluator.multiply(c12, c20, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c2970);
evaluator.add(c2, c2970, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3226);
evaluator.add(c2, c3226, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3226);
evaluator.add(c2, c3226, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3226);
evaluator.add(c2, c3226, c2);
evaluator.multiply_plain(c2, p49, c2);
evaluator.add(c11, c2, c11);
evaluator.add(c8, c11, c8);
evaluator.add(c4, c8, c4);
evaluator.multiply(c12, c25, c8);
evaluator.relinearize(c8, relin_keys, c8);
evaluator.rotate_rows(c8, 8, galois_keys, c2);
evaluator.add(c8, c2, c8);
evaluator.rotate_rows(c8, 4, galois_keys, c11);
evaluator.add(c8, c11, c8);
evaluator.rotate_rows(c8, 2, galois_keys, c3226);
evaluator.add(c8, c3226, c8);
evaluator.rotate_rows(c8, 1, galois_keys, c2);
evaluator.add(c8, c2, c8);
evaluator.multiply_plain(c8, p74, c8);
evaluator.multiply(c12, c24, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c5);
evaluator.add(c11, c5, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c5);
evaluator.add(c11, c5, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c5);
evaluator.add(c11, c5, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c5);
evaluator.add(c11, c5, c11);
evaluator.multiply_plain(c11, p69, c11);
evaluator.multiply(c12, c22, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c3226);
evaluator.add(c5, c3226, c5);
evaluator.multiply_plain(c5, p59, c5);
evaluator.multiply(c12, c23, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.multiply_plain(c3226, p64, c3226);
evaluator.add(c5, c3226, c5);
evaluator.add(c11, c5, c11);
evaluator.add(c8, c11, c8);
evaluator.add(c4, c8, c4);
evaluator.multiply(c12, c26, c8);
evaluator.relinearize(c8, relin_keys, c8);
evaluator.rotate_rows(c8, 8, galois_keys, c3226);
evaluator.add(c8, c3226, c8);
evaluator.rotate_rows(c8, 4, galois_keys, c3226);
evaluator.add(c8, c3226, c8);
evaluator.rotate_rows(c8, 2, galois_keys, c3226);
evaluator.add(c8, c3226, c8);
evaluator.rotate_rows(c8, 1, galois_keys, c2);
evaluator.add(c8, c2, c8);
evaluator.multiply_plain(c8, p79, c8);
evaluator.multiply(c12, c30, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c3226);
evaluator.add(c2, c3226, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3226);
evaluator.add(c2, c3226, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3226);
evaluator.add(c2, c3226, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3226);
evaluator.add(c2, c3226, c2);
evaluator.multiply_plain(c2, p99, c2);
evaluator.multiply(c12, c27, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c5);
evaluator.add(c3226, c5, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c5);
evaluator.add(c3226, c5, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c11);
evaluator.add(c3226, c11, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c5);
evaluator.add(c3226, c5, c3226);
evaluator.multiply_plain(c3226, p84, c3226);
evaluator.multiply(c12, c28, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c11);
evaluator.add(c5, c11, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c11);
evaluator.add(c5, c11, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c11);
evaluator.add(c5, c11, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c11);
evaluator.add(c5, c11, c5);
evaluator.multiply_plain(c5, p89, c5);
evaluator.multiply(c12, c29, c2970);
evaluator.relinearize(c2970, relin_keys, c2970);
evaluator.rotate_rows(c2970, 8, galois_keys, c11);
evaluator.add(c2970, c11, c2970);
evaluator.rotate_rows(c2970, 4, galois_keys, c11);
evaluator.add(c2970, c11, c2970);
evaluator.rotate_rows(c2970, 2, galois_keys, c11);
evaluator.add(c2970, c11, c2970);
evaluator.rotate_rows(c2970, 1, galois_keys, c11);
evaluator.add(c2970, c11, c2970);
evaluator.multiply_plain(c2970, p94, c2970);
evaluator.add(c5, c2970, c5);
evaluator.add(c3226, c5, c3226);
evaluator.add(c2, c3226, c2);
evaluator.multiply(c12, c31, c2970);
evaluator.relinearize(c2970, relin_keys, c2970);
evaluator.rotate_rows(c2970, 8, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 4, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 2, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.rotate_rows(c2970, 1, galois_keys, c5);
evaluator.add(c2970, c5, c2970);
evaluator.multiply_plain(c2970, p104, c2970);
evaluator.multiply(c12, c32, c12);
evaluator.relinearize(c12, relin_keys, c12);
evaluator.rotate_rows(c12, 8, galois_keys, c5);
evaluator.add(c12, c5, c12);
evaluator.rotate_rows(c12, 4, galois_keys, c5);
evaluator.add(c12, c5, c12);
evaluator.rotate_rows(c12, 2, galois_keys, c5);
evaluator.add(c12, c5, c12);
evaluator.rotate_rows(c12, 1, galois_keys, c5);
evaluator.add(c12, c5, c12);
evaluator.multiply_plain(c12, p109, c12);
evaluator.add(c2970, c12, c2970);
evaluator.add(c2, c2970, c2);
evaluator.add(c8, c2, c8);
evaluator.add(c4, c8, c4);
evaluator.multiply(c16, c17, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c12);
evaluator.add(c5, c12, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c12);
evaluator.add(c5, c12, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c12);
evaluator.add(c5, c12, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c12);
evaluator.add(c5, c12, c5);
evaluator.multiply_plain(c5, p35, c5);
evaluator.multiply(c16, c18, c12);
evaluator.relinearize(c12, relin_keys, c12);
evaluator.rotate_rows(c12, 8, galois_keys, c3226);
evaluator.add(c12, c3226, c12);
evaluator.rotate_rows(c12, 4, galois_keys, c3226);
evaluator.add(c12, c3226, c12);
evaluator.rotate_rows(c12, 2, galois_keys, c3226);
evaluator.add(c12, c3226, c12);
evaluator.rotate_rows(c12, 1, galois_keys, c3226);
evaluator.add(c12, c3226, c12);
evaluator.multiply_plain(c12, p39, c12);
evaluator.add(c5, c12, c5);
evaluator.multiply(c16, c21, c12);
evaluator.relinearize(c12, relin_keys, c12);
evaluator.rotate_rows(c12, 8, galois_keys, c3226);
evaluator.add(c12, c3226, c12);
evaluator.rotate_rows(c12, 4, galois_keys, c3226);
evaluator.add(c12, c3226, c12);
evaluator.rotate_rows(c12, 2, galois_keys, c3226);
evaluator.add(c12, c3226, c12);
evaluator.rotate_rows(c12, 1, galois_keys, c3226);
evaluator.add(c12, c3226, c12);
evaluator.multiply_plain(c12, p54, c12);
evaluator.multiply(c16, c19, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c11);
evaluator.add(c3226, c11, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c2970);
evaluator.add(c3226, c2970, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c2);
evaluator.add(c3226, c2, c3226);
evaluator.multiply_plain(c3226, p44, c3226);
evaluator.multiply(c16, c20, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c8);
evaluator.add(c2, c8, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c8);
evaluator.add(c2, c8, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c8);
evaluator.add(c2, c8, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c8);
evaluator.add(c2, c8, c2);
evaluator.multiply_plain(c2, p49, c2);
evaluator.add(c3226, c2, c3226);
evaluator.add(c12, c3226, c12);
evaluator.add(c5, c12, c5);
evaluator.multiply(c16, c25, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c3226);
evaluator.add(c2, c3226, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3226);
evaluator.add(c2, c3226, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3226);
evaluator.add(c2, c3226, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3226);
evaluator.add(c2, c3226, c2);
evaluator.multiply_plain(c2, p74, c2);
evaluator.multiply(c16, c24, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c8);
evaluator.add(c3226, c8, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c8);
evaluator.add(c3226, c8, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c8);
evaluator.add(c3226, c8, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c8);
evaluator.add(c3226, c8, c3226);
evaluator.multiply_plain(c3226, p69, c3226);
evaluator.multiply(c16, c22, c8);
evaluator.relinearize(c8, relin_keys, c8);
evaluator.rotate_rows(c8, 8, galois_keys, c12);
evaluator.add(c8, c12, c8);
evaluator.rotate_rows(c8, 4, galois_keys, c12);
evaluator.add(c8, c12, c8);
evaluator.rotate_rows(c8, 2, galois_keys, c12);
evaluator.add(c8, c12, c8);
evaluator.rotate_rows(c8, 1, galois_keys, c12);
evaluator.add(c8, c12, c8);
evaluator.multiply_plain(c8, p59, c8);
evaluator.multiply(c16, c23, c12);
evaluator.relinearize(c12, relin_keys, c12);
evaluator.rotate_rows(c12, 8, galois_keys, c11);
evaluator.add(c12, c11, c12);
evaluator.rotate_rows(c12, 4, galois_keys, c11);
evaluator.add(c12, c11, c12);
evaluator.rotate_rows(c12, 2, galois_keys, c11);
evaluator.add(c12, c11, c12);
evaluator.rotate_rows(c12, 1, galois_keys, c11);
evaluator.add(c12, c11, c12);
evaluator.multiply_plain(c12, p64, c12);
evaluator.add(c8, c12, c8);
evaluator.add(c3226, c8, c3226);
evaluator.add(c2, c3226, c2);
evaluator.multiply(c16, c28, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c12);
evaluator.add(c11, c12, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c12);
evaluator.add(c11, c12, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c12);
evaluator.add(c11, c12, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c12);
evaluator.add(c11, c12, c11);
evaluator.multiply_plain(c11, p89, c11);
evaluator.multiply(c16, c26, c12);
evaluator.relinearize(c12, relin_keys, c12);
evaluator.rotate_rows(c12, 8, galois_keys, c8);
evaluator.add(c12, c8, c12);
evaluator.rotate_rows(c12, 4, galois_keys, c3226);
evaluator.add(c12, c3226, c12);
evaluator.rotate_rows(c12, 2, galois_keys, c3226);
evaluator.add(c12, c3226, c12);
evaluator.rotate_rows(c12, 1, galois_keys, c3226);
evaluator.add(c12, c3226, c12);
evaluator.multiply_plain(c12, p79, c12);
evaluator.multiply(c16, c27, c3226);
evaluator.relinearize(c3226, relin_keys, c3226);
evaluator.rotate_rows(c3226, 8, galois_keys, c2970);
evaluator.add(c3226, c2970, c3226);
evaluator.rotate_rows(c3226, 4, galois_keys, c2970);
evaluator.add(c3226, c2970, c3226);
evaluator.rotate_rows(c3226, 2, galois_keys, c2970);
evaluator.add(c3226, c2970, c3226);
evaluator.rotate_rows(c3226, 1, galois_keys, c2970);
evaluator.add(c3226, c2970, c3226);
evaluator.multiply_plain(c3226, p84, c3226);
evaluator.add(c12, c3226, c12);
evaluator.add(c11, c12, c11);
evaluator.add(c2, c11, c2);
evaluator.add(c5, c2, c5);
evaluator.multiply(c16, c29, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c11);
evaluator.add(c2, c11, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c11);
evaluator.add(c2, c11, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c11);
evaluator.add(c2, c11, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c11);
evaluator.add(c2, c11, c2);
evaluator.multiply_plain(c2, p94, c2);
evaluator.multiply(c16, c30, c12);
evaluator.relinearize(c12, relin_keys, c12);
evaluator.rotate_rows(c12, 8, galois_keys, c11);
evaluator.add(c12, c11, c12);
evaluator.rotate_rows(c12, 4, galois_keys, c11);
evaluator.add(c12, c11, c12);
evaluator.rotate_rows(c12, 2, galois_keys, c11);
evaluator.add(c12, c11, c12);
evaluator.rotate_rows(c12, 1, galois_keys, c11);
evaluator.add(c12, c11, c12);
evaluator.multiply_plain(c12, p99, c12);
evaluator.add(c2, c12, c2);
evaluator.multiply(c16, c31, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c3226);
evaluator.add(c11, c3226, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c3226);
evaluator.add(c11, c3226, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c3226);
evaluator.add(c11, c3226, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c3226);
evaluator.add(c11, c3226, c11);
evaluator.multiply_plain(c11, p104, c11);
evaluator.multiply(c16, c32, c16);
evaluator.relinearize(c16, relin_keys, c16);
evaluator.rotate_rows(c16, 8, galois_keys, c3226);
evaluator.add(c16, c3226, c16);
evaluator.rotate_rows(c16, 4, galois_keys, c3226);
evaluator.add(c16, c3226, c16);
evaluator.rotate_rows(c16, 2, galois_keys, c3226);
evaluator.add(c16, c3226, c16);
evaluator.rotate_rows(c16, 1, galois_keys, c3226);
evaluator.add(c16, c3226, c16);
evaluator.multiply_plain(c16, p109, c16);
evaluator.add(c11, c16, c11);
evaluator.add(c2, c11, c2);
evaluator.add(c5, c2, c5);
evaluator.multiply(c13, c17, c17);
evaluator.relinearize(c17, relin_keys, c17);
evaluator.rotate_rows(c17, 8, galois_keys, c2);
evaluator.add(c17, c2, c17);
evaluator.rotate_rows(c17, 4, galois_keys, c2);
evaluator.add(c17, c2, c17);
evaluator.rotate_rows(c17, 2, galois_keys, c2);
evaluator.add(c17, c2, c17);
evaluator.rotate_rows(c17, 1, galois_keys, c2);
evaluator.add(c17, c2, c17);
evaluator.multiply_plain(c17, p35, c17);
evaluator.multiply(c13, c18, c18);
evaluator.relinearize(c18, relin_keys, c18);
evaluator.rotate_rows(c18, 8, galois_keys, c2);
evaluator.add(c18, c2, c18);
evaluator.rotate_rows(c18, 4, galois_keys, c3226);
evaluator.add(c18, c3226, c18);
evaluator.rotate_rows(c18, 2, galois_keys, c2);
evaluator.add(c18, c2, c18);
evaluator.rotate_rows(c18, 1, galois_keys, c2);
evaluator.add(c18, c2, c18);
evaluator.multiply_plain(c18, p39, c18);
evaluator.add(c17, c18, c17);
evaluator.multiply(c13, c22, c22);
evaluator.relinearize(c22, relin_keys, c22);
evaluator.rotate_rows(c22, 8, galois_keys, c2);
evaluator.add(c22, c2, c22);
evaluator.rotate_rows(c22, 4, galois_keys, c18);
evaluator.add(c22, c18, c22);
evaluator.rotate_rows(c22, 2, galois_keys, c3226);
evaluator.add(c22, c3226, c22);
evaluator.rotate_rows(c22, 1, galois_keys, c11);
evaluator.add(c22, c11, c22);
evaluator.multiply_plain(c22, p59, c22);
evaluator.multiply(c13, c21, c21);
evaluator.relinearize(c21, relin_keys, c21);
evaluator.rotate_rows(c21, 8, galois_keys, c11);
evaluator.add(c21, c11, c21);
evaluator.rotate_rows(c21, 4, galois_keys, c11);
evaluator.add(c21, c11, c21);
evaluator.rotate_rows(c21, 2, galois_keys, c11);
evaluator.add(c21, c11, c21);
evaluator.rotate_rows(c21, 1, galois_keys, c11);
evaluator.add(c21, c11, c21);
evaluator.multiply_plain(c21, p54, c21);
evaluator.multiply(c13, c19, c19);
evaluator.relinearize(c19, relin_keys, c19);
evaluator.rotate_rows(c19, 8, galois_keys, c11);
evaluator.add(c19, c11, c19);
evaluator.rotate_rows(c19, 4, galois_keys, c11);
evaluator.add(c19, c11, c19);
evaluator.rotate_rows(c19, 2, galois_keys, c11);
evaluator.add(c19, c11, c19);
evaluator.rotate_rows(c19, 1, galois_keys, c11);
evaluator.add(c19, c11, c19);
evaluator.multiply_plain(c19, p44, c19);
evaluator.multiply(c13, c20, c20);
evaluator.relinearize(c20, relin_keys, c20);
evaluator.rotate_rows(c20, 8, galois_keys, c11);
evaluator.add(c20, c11, c20);
evaluator.rotate_rows(c20, 4, galois_keys, c11);
evaluator.add(c20, c11, c20);
evaluator.rotate_rows(c20, 2, galois_keys, c11);
evaluator.add(c20, c11, c20);
evaluator.rotate_rows(c20, 1, galois_keys, c11);
evaluator.add(c20, c11, c20);
evaluator.multiply_plain(c20, p49, c20);
evaluator.add(c19, c20, c19);
evaluator.add(c21, c19, c21);
evaluator.add(c22, c21, c22);
evaluator.add(c17, c22, c17);
evaluator.multiply(c13, c25, c25);
evaluator.relinearize(c25, relin_keys, c25);
evaluator.rotate_rows(c25, 8, galois_keys, c22);
evaluator.add(c25, c22, c25);
evaluator.rotate_rows(c25, 4, galois_keys, c19);
evaluator.add(c25, c19, c25);
evaluator.rotate_rows(c25, 2, galois_keys, c19);
evaluator.add(c25, c19, c25);
evaluator.rotate_rows(c25, 1, galois_keys, c19);
evaluator.add(c25, c19, c25);
evaluator.multiply_plain(c25, p74, c25);
evaluator.multiply(c13, c23, c23);
evaluator.relinearize(c23, relin_keys, c23);
evaluator.rotate_rows(c23, 8, galois_keys, c19);
evaluator.add(c23, c19, c23);
evaluator.rotate_rows(c23, 4, galois_keys, c19);
evaluator.add(c23, c19, c23);
evaluator.rotate_rows(c23, 2, galois_keys, c19);
evaluator.add(c23, c19, c23);
evaluator.rotate_rows(c23, 1, galois_keys, c19);
evaluator.add(c23, c19, c23);
evaluator.multiply_plain(c23, p64, c23);
evaluator.multiply(c13, c24, c24);
evaluator.relinearize(c24, relin_keys, c24);
evaluator.rotate_rows(c24, 8, galois_keys, c19);
evaluator.add(c24, c19, c24);
evaluator.rotate_rows(c24, 4, galois_keys, c22);
evaluator.add(c24, c22, c24);
evaluator.rotate_rows(c24, 2, galois_keys, c22);
evaluator.add(c24, c22, c24);
evaluator.rotate_rows(c24, 1, galois_keys, c22);
evaluator.add(c24, c22, c24);
evaluator.multiply_plain(c24, p69, c24);
evaluator.add(c23, c24, c23);
evaluator.add(c25, c23, c25);
evaluator.multiply(c13, c29, c29);
evaluator.relinearize(c29, relin_keys, c29);
evaluator.rotate_rows(c29, 8, galois_keys, c23);
evaluator.add(c29, c23, c29);
evaluator.rotate_rows(c29, 4, galois_keys, c22);
evaluator.add(c29, c22, c29);
evaluator.rotate_rows(c29, 2, galois_keys, c24);
evaluator.add(c29, c24, c29);
evaluator.rotate_rows(c29, 1, galois_keys, c11);
evaluator.add(c29, c11, c29);
evaluator.multiply_plain(c29, p94, c29);
evaluator.multiply(c13, c26, c26);
evaluator.relinearize(c26, relin_keys, c26);
evaluator.rotate_rows(c26, 8, galois_keys, c21);
evaluator.add(c26, c21, c26);
evaluator.rotate_rows(c26, 4, galois_keys, c21);
evaluator.add(c26, c21, c26);
evaluator.rotate_rows(c26, 2, galois_keys, c21);
evaluator.add(c26, c21, c26);
evaluator.rotate_rows(c26, 1, galois_keys, c24);
evaluator.add(c26, c24, c26);
evaluator.multiply_plain(c26, p79, c26);
evaluator.multiply(c13, c27, c27);
evaluator.relinearize(c27, relin_keys, c27);
evaluator.rotate_rows(c27, 8, galois_keys, c11);
evaluator.add(c27, c11, c27);
evaluator.rotate_rows(c27, 4, galois_keys, c11);
evaluator.add(c27, c11, c27);
evaluator.rotate_rows(c27, 2, galois_keys, c11);
evaluator.add(c27, c11, c27);
evaluator.rotate_rows(c27, 1, galois_keys, c11);
evaluator.add(c27, c11, c27);
evaluator.multiply_plain(c27, p84, c27);
evaluator.multiply(c13, c28, c28);
evaluator.relinearize(c28, relin_keys, c28);
evaluator.rotate_rows(c28, 8, galois_keys, c11);
evaluator.add(c28, c11, c28);
evaluator.rotate_rows(c28, 4, galois_keys, c11);
evaluator.add(c28, c11, c28);
evaluator.rotate_rows(c28, 2, galois_keys, c11);
evaluator.add(c28, c11, c28);
evaluator.rotate_rows(c28, 1, galois_keys, c11);
evaluator.add(c28, c11, c28);
evaluator.multiply_plain(c28, p89, c28);
evaluator.add(c27, c28, c27);
evaluator.add(c26, c27, c26);
evaluator.add(c29, c26, c29);
evaluator.multiply(c13, c30, c30);
evaluator.relinearize(c30, relin_keys, c30);
evaluator.rotate_rows(c30, 8, galois_keys, c26);
evaluator.add(c30, c26, c30);
evaluator.rotate_rows(c30, 4, galois_keys, c27);
evaluator.add(c30, c27, c30);
evaluator.rotate_rows(c30, 2, galois_keys, c27);
evaluator.add(c30, c27, c30);
evaluator.rotate_rows(c30, 1, galois_keys, c28);
evaluator.add(c30, c28, c30);
evaluator.multiply_plain(c30, p99, c30);
evaluator.multiply(c13, c31, c31);
evaluator.relinearize(c31, relin_keys, c31);
evaluator.rotate_rows(c31, 8, galois_keys, c28);
evaluator.add(c31, c28, c31);
evaluator.rotate_rows(c31, 4, galois_keys, c28);
evaluator.add(c31, c28, c31);
evaluator.rotate_rows(c31, 2, galois_keys, c28);
evaluator.add(c31, c28, c31);
evaluator.rotate_rows(c31, 1, galois_keys, c28);
evaluator.add(c31, c28, c31);
evaluator.multiply_plain(c31, p104, c31);
evaluator.multiply(c13, c32, c13);
evaluator.relinearize(c13, relin_keys, c13);
evaluator.rotate_rows(c13, 8, galois_keys, c28);
evaluator.add(c13, c28, c13);
evaluator.rotate_rows(c13, 4, galois_keys, c28);
evaluator.add(c13, c28, c13);
evaluator.rotate_rows(c13, 2, galois_keys, c27);
evaluator.add(c13, c27, c13);
evaluator.rotate_rows(c13, 1, galois_keys, c27);
evaluator.add(c13, c27, c13);
evaluator.multiply_plain(c13, p109, c13);
evaluator.add(c31, c13, c31);
evaluator.add(c30, c31, c30);
evaluator.add(c29, c30, c29);
evaluator.add(c25, c29, c25);
evaluator.add(c17, c25, c17);
encrypted_outputs.emplace("C[13]", move(c868));
encrypted_outputs.emplace("C[0]", move(c14));
encrypted_outputs.emplace("C[1]", move(c3314));
encrypted_outputs.emplace("C[2]", move(c1));
encrypted_outputs.emplace("C[4]", move(c3290));
encrypted_outputs.emplace("C[6]", move(c3274));
encrypted_outputs.emplace("C[8]", move(c7));
encrypted_outputs.emplace("C[9]", move(c2986));
encrypted_outputs.emplace("C[14]", move(c9));
encrypted_outputs.emplace("C[5]", move(c15));
encrypted_outputs.emplace("C[10]", move(c2962));
encrypted_outputs.emplace("C[3]", move(c6));
encrypted_outputs.emplace("C[7]", move(c3306));
encrypted_outputs.emplace("C[11]", move(c4));
encrypted_outputs.emplace("C[15]", move(c5));
encrypted_outputs.emplace("C[12]", move(c17));
}

vector<int> get_rotation_steps_matrix_mul(){
return vector<int>{8, 4, 2, 1};
}
