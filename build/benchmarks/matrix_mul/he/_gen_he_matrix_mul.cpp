#include <cstddef>
#include <cstdint>
#include <utility>
#include "_gen_he_matrix_mul.hpp"

using namespace std;
using namespace seal;

void matrix_mul(const unordered_map<string, Ciphertext> &encrypted_inputs,
const unordered_map<string, Plaintext> &encoded_inputs,
unordered_map<string, Ciphertext> &encrypted_outputs,
unordered_map<string, Plaintext> &encoded_outputs,
const BatchEncoder &encoder,
const Encryptor &encryptor,
const Evaluator &evaluator,
const RelinKeys &relin_keys,
const GaloisKeys &galois_keys)
{
Ciphertext c32 = encrypted_inputs.at("B[15]");
Ciphertext c31 = encrypted_inputs.at("B[14]");
Ciphertext c30 = encrypted_inputs.at("B[13]");
Ciphertext c13 = encrypted_inputs.at("A[12]");
Ciphertext c12 = encrypted_inputs.at("A[11]");
Ciphertext c11 = encrypted_inputs.at("A[10]");
Ciphertext c10 = encrypted_inputs.at("A[9]");
Ciphertext c9 = encrypted_inputs.at("A[8]");
Ciphertext c8 = encrypted_inputs.at("A[7]");
Ciphertext c7 = encrypted_inputs.at("A[6]");
Ciphertext c6 = encrypted_inputs.at("A[5]");
Ciphertext c5 = encrypted_inputs.at("A[4]");
Ciphertext c4 = encrypted_inputs.at("A[3]");
Ciphertext c3 = encrypted_inputs.at("A[2]");
Ciphertext c2 = encrypted_inputs.at("A[1]");
Ciphertext c1 = encrypted_inputs.at("A[0]");
Ciphertext c14 = encrypted_inputs.at("A[13]");
Ciphertext c15 = encrypted_inputs.at("A[14]");
Ciphertext c16 = encrypted_inputs.at("A[15]");
Ciphertext c17 = encrypted_inputs.at("B[0]");
Ciphertext c18 = encrypted_inputs.at("B[1]");
Ciphertext c19 = encrypted_inputs.at("B[2]");
Ciphertext c20 = encrypted_inputs.at("B[3]");
Ciphertext c21 = encrypted_inputs.at("B[4]");
Ciphertext c22 = encrypted_inputs.at("B[5]");
Ciphertext c23 = encrypted_inputs.at("B[6]");
Ciphertext c24 = encrypted_inputs.at("B[7]");
Ciphertext c25 = encrypted_inputs.at("B[8]");
Ciphertext c26 = encrypted_inputs.at("B[9]");
Ciphertext c27 = encrypted_inputs.at("B[10]");
Ciphertext c28 = encrypted_inputs.at("B[11]");
Ciphertext c29 = encrypted_inputs.at("B[12]");
size_t slot_count = encoder.slot_count();
Plaintext p109;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
p109);
Plaintext p104;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0},
p104);
Plaintext p99;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0},
p99);
Plaintext p74;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0},
p74);
Plaintext p39;
encoder.encode(vector<std::int64_t>{0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
p39);
Plaintext p44;
encoder.encode(vector<std::int64_t>{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
p44);
Plaintext p49;
encoder.encode(vector<std::int64_t>{0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
p49);
Plaintext p54;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
p54);
Plaintext p59;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
p59);
Plaintext p35;
encoder.encode(vector<std::int64_t>{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
p35);
Plaintext p64;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
p64);
Plaintext p69;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0},
p69);
Plaintext p79;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
p79);
Plaintext p84;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
p84);
Plaintext p89;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
p89);
Plaintext p94;
encoder.encode(vector<std::int64_t>{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0},
p94);
Ciphertext c931;
evaluator.multiply(c15, c17, c931);
evaluator.relinearize(c931, relin_keys, c931);
Ciphertext c3311;
evaluator.rotate_rows(c931, 8, galois_keys, c3311);
evaluator.add(c931, c3311, c931);
evaluator.rotate_rows(c931, 4, galois_keys, c3311);
evaluator.add(c931, c3311, c931);
evaluator.rotate_rows(c931, 2, galois_keys, c3311);
evaluator.add(c931, c3311, c931);
evaluator.rotate_rows(c931, 1, galois_keys, c3311);
evaluator.add(c931, c3311, c931);
evaluator.multiply_plain(c931, p35, c931);
evaluator.multiply(c15, c18, c3311);
evaluator.relinearize(c3311, relin_keys, c3311);
Ciphertext c3303;
evaluator.rotate_rows(c3311, 8, galois_keys, c3303);
evaluator.add(c3311, c3303, c3311);
evaluator.rotate_rows(c3311, 4, galois_keys, c3303);
evaluator.add(c3311, c3303, c3311);
evaluator.rotate_rows(c3311, 2, galois_keys, c3303);
evaluator.add(c3311, c3303, c3311);
evaluator.rotate_rows(c3311, 1, galois_keys, c3303);
evaluator.add(c3311, c3303, c3311);
evaluator.multiply_plain(c3311, p39, c3311);
evaluator.add(c931, c3311, c931);
evaluator.multiply(c15, c19, c3311);
evaluator.relinearize(c3311, relin_keys, c3311);
evaluator.rotate_rows(c3311, 8, galois_keys, c3303);
evaluator.add(c3311, c3303, c3311);
evaluator.rotate_rows(c3311, 4, galois_keys, c3303);
evaluator.add(c3311, c3303, c3311);
evaluator.rotate_rows(c3311, 2, galois_keys, c3303);
evaluator.add(c3311, c3303, c3311);
evaluator.rotate_rows(c3311, 1, galois_keys, c3303);
evaluator.add(c3311, c3303, c3311);
evaluator.multiply_plain(c3311, p44, c3311);
evaluator.multiply(c15, c20, c3303);
evaluator.relinearize(c3303, relin_keys, c3303);
Ciphertext c3287;
evaluator.rotate_rows(c3303, 8, galois_keys, c3287);
evaluator.add(c3303, c3287, c3303);
evaluator.rotate_rows(c3303, 4, galois_keys, c3287);
evaluator.add(c3303, c3287, c3303);
evaluator.rotate_rows(c3303, 2, galois_keys, c3287);
evaluator.add(c3303, c3287, c3303);
evaluator.rotate_rows(c3303, 1, galois_keys, c3287);
evaluator.add(c3303, c3287, c3303);
evaluator.multiply_plain(c3303, p49, c3303);
evaluator.multiply(c15, c21, c3287);
evaluator.relinearize(c3287, relin_keys, c3287);
Ciphertext c3279;
evaluator.rotate_rows(c3287, 8, galois_keys, c3279);
evaluator.add(c3287, c3279, c3287);
evaluator.rotate_rows(c3287, 4, galois_keys, c3279);
evaluator.add(c3287, c3279, c3287);
evaluator.rotate_rows(c3287, 2, galois_keys, c3279);
evaluator.add(c3287, c3279, c3287);
evaluator.rotate_rows(c3287, 1, galois_keys, c3279);
evaluator.add(c3287, c3279, c3287);
evaluator.multiply_plain(c3287, p54, c3287);
evaluator.add(c3303, c3287, c3303);
evaluator.add(c3311, c3303, c3311);
evaluator.add(c931, c3311, c931);
evaluator.multiply(c15, c22, c3287);
evaluator.relinearize(c3287, relin_keys, c3287);
evaluator.rotate_rows(c3287, 8, galois_keys, c3279);
evaluator.add(c3287, c3279, c3287);
evaluator.rotate_rows(c3287, 4, galois_keys, c3311);
evaluator.add(c3287, c3311, c3287);
evaluator.rotate_rows(c3287, 2, galois_keys, c3311);
evaluator.add(c3287, c3311, c3287);
evaluator.rotate_rows(c3287, 1, galois_keys, c3311);
evaluator.add(c3287, c3311, c3287);
evaluator.multiply_plain(c3287, p59, c3287);
evaluator.multiply(c15, c26, c3303);
evaluator.relinearize(c3303, relin_keys, c3303);
evaluator.rotate_rows(c3303, 8, galois_keys, c3311);
evaluator.add(c3303, c3311, c3303);
evaluator.rotate_rows(c3303, 4, galois_keys, c3311);
evaluator.add(c3303, c3311, c3303);
evaluator.rotate_rows(c3303, 2, galois_keys, c3311);
evaluator.add(c3303, c3311, c3303);
evaluator.rotate_rows(c3303, 1, galois_keys, c3311);
evaluator.add(c3303, c3311, c3303);
evaluator.multiply_plain(c3303, p79, c3303);
evaluator.multiply(c15, c25, c3311);
evaluator.relinearize(c3311, relin_keys, c3311);
evaluator.rotate_rows(c3311, 8, galois_keys, c3279);
evaluator.add(c3311, c3279, c3311);
evaluator.rotate_rows(c3311, 4, galois_keys, c3279);
evaluator.add(c3311, c3279, c3311);
evaluator.rotate_rows(c3311, 2, galois_keys, c3279);
evaluator.add(c3311, c3279, c3311);
evaluator.rotate_rows(c3311, 1, galois_keys, c3279);
evaluator.add(c3311, c3279, c3311);
evaluator.multiply_plain(c3311, p74, c3311);
evaluator.multiply(c15, c23, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
Ciphertext c3247;
evaluator.rotate_rows(c3279, 8, galois_keys, c3247);
evaluator.add(c3279, c3247, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3247);
evaluator.add(c3279, c3247, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c3247);
evaluator.add(c3279, c3247, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c3247);
evaluator.add(c3279, c3247, c3279);
evaluator.multiply_plain(c3279, p64, c3279);
evaluator.multiply(c15, c24, c3247);
evaluator.relinearize(c3247, relin_keys, c3247);
Ciphertext c3239;
evaluator.rotate_rows(c3247, 8, galois_keys, c3239);
evaluator.add(c3247, c3239, c3247);
evaluator.rotate_rows(c3247, 4, galois_keys, c3239);
evaluator.add(c3247, c3239, c3247);
evaluator.rotate_rows(c3247, 2, galois_keys, c3239);
evaluator.add(c3247, c3239, c3247);
evaluator.rotate_rows(c3247, 1, galois_keys, c3239);
evaluator.add(c3247, c3239, c3247);
evaluator.multiply_plain(c3247, p69, c3247);
evaluator.add(c3279, c3247, c3279);
evaluator.add(c3311, c3279, c3311);
evaluator.add(c3303, c3311, c3303);
evaluator.multiply(c15, c30, c3247);
evaluator.relinearize(c3247, relin_keys, c3247);
evaluator.rotate_rows(c3247, 8, galois_keys, c3239);
evaluator.add(c3247, c3239, c3247);
evaluator.rotate_rows(c3247, 4, galois_keys, c3239);
evaluator.add(c3247, c3239, c3247);
evaluator.rotate_rows(c3247, 2, galois_keys, c3239);
evaluator.add(c3247, c3239, c3247);
evaluator.rotate_rows(c3247, 1, galois_keys, c3239);
evaluator.add(c3247, c3239, c3247);
evaluator.multiply_plain(c3247, p99, c3247);
evaluator.multiply(c15, c29, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c3279);
evaluator.add(c3239, c3279, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c3279);
evaluator.add(c3239, c3279, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c3279);
evaluator.add(c3239, c3279, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c3279);
evaluator.add(c3239, c3279, c3239);
evaluator.multiply_plain(c3239, p94, c3239);
evaluator.multiply(c15, c27, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c3311);
evaluator.add(c3279, c3311, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3311);
evaluator.add(c3279, c3311, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c3311);
evaluator.add(c3279, c3311, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c3311);
evaluator.add(c3279, c3311, c3279);
evaluator.multiply_plain(c3279, p84, c3279);
evaluator.multiply(c15, c28, c3311);
evaluator.relinearize(c3311, relin_keys, c3311);
Ciphertext c3207;
evaluator.rotate_rows(c3311, 8, galois_keys, c3207);
evaluator.add(c3311, c3207, c3311);
evaluator.rotate_rows(c3311, 4, galois_keys, c3207);
evaluator.add(c3311, c3207, c3311);
evaluator.rotate_rows(c3311, 2, galois_keys, c3207);
evaluator.add(c3311, c3207, c3311);
evaluator.rotate_rows(c3311, 1, galois_keys, c3207);
evaluator.add(c3311, c3207, c3311);
evaluator.multiply_plain(c3311, p89, c3311);
evaluator.add(c3279, c3311, c3279);
evaluator.add(c3239, c3279, c3239);
evaluator.add(c3247, c3239, c3247);
evaluator.add(c3303, c3247, c3303);
evaluator.add(c3287, c3303, c3287);
evaluator.multiply(c15, c31, c3311);
evaluator.relinearize(c3311, relin_keys, c3311);
evaluator.rotate_rows(c3311, 8, galois_keys, c3207);
evaluator.add(c3311, c3207, c3311);
evaluator.rotate_rows(c3311, 4, galois_keys, c3279);
evaluator.add(c3311, c3279, c3311);
evaluator.rotate_rows(c3311, 2, galois_keys, c3207);
evaluator.add(c3311, c3207, c3311);
evaluator.rotate_rows(c3311, 1, galois_keys, c3239);
evaluator.add(c3311, c3239, c3311);
evaluator.multiply_plain(c3311, p104, c3311);
evaluator.multiply(c15, c32, c15);
evaluator.relinearize(c15, relin_keys, c15);
evaluator.rotate_rows(c15, 8, galois_keys, c3247);
evaluator.add(c15, c3247, c15);
evaluator.rotate_rows(c15, 4, galois_keys, c3247);
evaluator.add(c15, c3247, c15);
evaluator.rotate_rows(c15, 2, galois_keys, c3247);
evaluator.add(c15, c3247, c15);
evaluator.rotate_rows(c15, 1, galois_keys, c3247);
evaluator.add(c15, c3247, c15);
evaluator.multiply_plain(c15, p109, c15);
evaluator.add(c3311, c15, c3311);
evaluator.add(c3287, c3311, c3287);
evaluator.add(c931, c3287, c931);
evaluator.multiply(c2, c17, c15);
evaluator.relinearize(c15, relin_keys, c15);
evaluator.rotate_rows(c15, 8, galois_keys, c3247);
evaluator.add(c15, c3247, c15);
evaluator.rotate_rows(c15, 4, galois_keys, c3247);
evaluator.add(c15, c3247, c15);
evaluator.rotate_rows(c15, 2, galois_keys, c3247);
evaluator.add(c15, c3247, c15);
evaluator.rotate_rows(c15, 1, galois_keys, c3247);
evaluator.add(c15, c3247, c15);
evaluator.multiply_plain(c15, p35, c15);
evaluator.multiply(c2, c18, c3247);
evaluator.relinearize(c3247, relin_keys, c3247);
evaluator.rotate_rows(c3247, 8, galois_keys, c3279);
evaluator.add(c3247, c3279, c3247);
evaluator.rotate_rows(c3247, 4, galois_keys, c3279);
evaluator.add(c3247, c3279, c3247);
evaluator.rotate_rows(c3247, 2, galois_keys, c3279);
evaluator.add(c3247, c3279, c3247);
evaluator.rotate_rows(c3247, 1, galois_keys, c3279);
evaluator.add(c3247, c3279, c3247);
evaluator.multiply_plain(c3247, p39, c3247);
evaluator.add(c15, c3247, c15);
evaluator.multiply(c2, c22, c3247);
evaluator.relinearize(c3247, relin_keys, c3247);
evaluator.rotate_rows(c3247, 8, galois_keys, c3279);
evaluator.add(c3247, c3279, c3247);
evaluator.rotate_rows(c3247, 4, galois_keys, c3279);
evaluator.add(c3247, c3279, c3247);
evaluator.rotate_rows(c3247, 2, galois_keys, c3279);
evaluator.add(c3247, c3279, c3247);
evaluator.rotate_rows(c3247, 1, galois_keys, c3279);
evaluator.add(c3247, c3279, c3247);
evaluator.multiply_plain(c3247, p59, c3247);
evaluator.multiply(c2, c21, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c3303);
evaluator.add(c3279, c3303, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3303);
evaluator.add(c3279, c3303, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c3303);
evaluator.add(c3279, c3303, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c3303);
evaluator.add(c3279, c3303, c3279);
evaluator.multiply_plain(c3279, p54, c3279);
evaluator.multiply(c2, c19, c3303);
evaluator.relinearize(c3303, relin_keys, c3303);
evaluator.rotate_rows(c3303, 8, galois_keys, c3311);
evaluator.add(c3303, c3311, c3303);
evaluator.rotate_rows(c3303, 4, galois_keys, c3207);
evaluator.add(c3303, c3207, c3303);
evaluator.rotate_rows(c3303, 2, galois_keys, c3287);
evaluator.add(c3303, c3287, c3303);
evaluator.rotate_rows(c3303, 1, galois_keys, c3287);
evaluator.add(c3303, c3287, c3303);
evaluator.multiply_plain(c3303, p44, c3303);
evaluator.multiply(c2, c20, c3287);
evaluator.relinearize(c3287, relin_keys, c3287);
evaluator.rotate_rows(c3287, 8, galois_keys, c3239);
evaluator.add(c3287, c3239, c3287);
evaluator.rotate_rows(c3287, 4, galois_keys, c3239);
evaluator.add(c3287, c3239, c3287);
evaluator.rotate_rows(c3287, 2, galois_keys, c3239);
evaluator.add(c3287, c3239, c3287);
evaluator.rotate_rows(c3287, 1, galois_keys, c3239);
evaluator.add(c3287, c3239, c3287);
evaluator.multiply_plain(c3287, p49, c3287);
evaluator.add(c3303, c3287, c3303);
evaluator.add(c3279, c3303, c3279);
evaluator.add(c3247, c3279, c3247);
evaluator.add(c15, c3247, c15);
evaluator.multiply(c2, c23, c3287);
evaluator.relinearize(c3287, relin_keys, c3287);
evaluator.rotate_rows(c3287, 8, galois_keys, c3239);
evaluator.add(c3287, c3239, c3287);
evaluator.rotate_rows(c3287, 4, galois_keys, c3239);
evaluator.add(c3287, c3239, c3287);
evaluator.rotate_rows(c3287, 2, galois_keys, c3239);
evaluator.add(c3287, c3239, c3287);
evaluator.rotate_rows(c3287, 1, galois_keys, c3239);
evaluator.add(c3287, c3239, c3287);
evaluator.multiply_plain(c3287, p64, c3287);
evaluator.multiply(c2, c24, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c3303);
evaluator.add(c3239, c3303, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c3303);
evaluator.add(c3239, c3303, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c3303);
evaluator.add(c3239, c3303, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c3303);
evaluator.add(c3239, c3303, c3239);
evaluator.multiply_plain(c3239, p69, c3239);
evaluator.add(c3287, c3239, c3287);
evaluator.add(c15, c3287, c15);
evaluator.multiply(c2, c28, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c3287);
evaluator.add(c3239, c3287, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c3287);
evaluator.add(c3239, c3287, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c3287);
evaluator.add(c3239, c3287, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c3287);
evaluator.add(c3239, c3287, c3239);
evaluator.multiply_plain(c3239, p89, c3239);
evaluator.multiply(c2, c27, c3287);
evaluator.relinearize(c3287, relin_keys, c3287);
evaluator.rotate_rows(c3287, 8, galois_keys, c3303);
evaluator.add(c3287, c3303, c3287);
evaluator.rotate_rows(c3287, 4, galois_keys, c3303);
evaluator.add(c3287, c3303, c3287);
evaluator.rotate_rows(c3287, 2, galois_keys, c3303);
evaluator.add(c3287, c3303, c3287);
evaluator.rotate_rows(c3287, 1, galois_keys, c3303);
evaluator.add(c3287, c3303, c3287);
evaluator.multiply_plain(c3287, p84, c3287);
evaluator.multiply(c2, c25, c3303);
evaluator.relinearize(c3303, relin_keys, c3303);
evaluator.rotate_rows(c3303, 8, galois_keys, c3279);
evaluator.add(c3303, c3279, c3303);
evaluator.rotate_rows(c3303, 4, galois_keys, c3279);
evaluator.add(c3303, c3279, c3303);
evaluator.rotate_rows(c3303, 2, galois_keys, c3279);
evaluator.add(c3303, c3279, c3303);
evaluator.rotate_rows(c3303, 1, galois_keys, c3279);
evaluator.add(c3303, c3279, c3303);
evaluator.multiply_plain(c3303, p74, c3303);
evaluator.multiply(c2, c26, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c3311);
evaluator.add(c3279, c3311, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3311);
evaluator.add(c3279, c3311, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c3311);
evaluator.add(c3279, c3311, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c3311);
evaluator.add(c3279, c3311, c3279);
evaluator.multiply_plain(c3279, p79, c3279);
evaluator.add(c3303, c3279, c3303);
evaluator.add(c3287, c3303, c3287);
evaluator.add(c3239, c3287, c3239);
evaluator.add(c15, c3239, c15);
evaluator.multiply(c2, c29, c3311);
evaluator.relinearize(c3311, relin_keys, c3311);
evaluator.rotate_rows(c3311, 8, galois_keys, c3303);
evaluator.add(c3311, c3303, c3311);
evaluator.rotate_rows(c3311, 4, galois_keys, c3287);
evaluator.add(c3311, c3287, c3311);
evaluator.rotate_rows(c3311, 2, galois_keys, c3239);
evaluator.add(c3311, c3239, c3311);
evaluator.rotate_rows(c3311, 1, galois_keys, c3279);
evaluator.add(c3311, c3279, c3311);
evaluator.multiply_plain(c3311, p94, c3311);
evaluator.multiply(c2, c30, c3303);
evaluator.relinearize(c3303, relin_keys, c3303);
evaluator.rotate_rows(c3303, 8, galois_keys, c3287);
evaluator.add(c3303, c3287, c3303);
evaluator.rotate_rows(c3303, 4, galois_keys, c3287);
evaluator.add(c3303, c3287, c3303);
evaluator.rotate_rows(c3303, 2, galois_keys, c3287);
evaluator.add(c3303, c3287, c3303);
evaluator.rotate_rows(c3303, 1, galois_keys, c3287);
evaluator.add(c3303, c3287, c3303);
evaluator.multiply_plain(c3303, p99, c3303);
evaluator.add(c3311, c3303, c3311);
evaluator.multiply(c2, c31, c3303);
evaluator.relinearize(c3303, relin_keys, c3303);
evaluator.rotate_rows(c3303, 8, galois_keys, c3287);
evaluator.add(c3303, c3287, c3303);
evaluator.rotate_rows(c3303, 4, galois_keys, c3287);
evaluator.add(c3303, c3287, c3303);
evaluator.rotate_rows(c3303, 2, galois_keys, c3287);
evaluator.add(c3303, c3287, c3303);
evaluator.rotate_rows(c3303, 1, galois_keys, c3287);
evaluator.add(c3303, c3287, c3303);
evaluator.multiply_plain(c3303, p104, c3303);
evaluator.multiply(c2, c32, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c3287);
evaluator.add(c2, c3287, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3287);
evaluator.add(c2, c3287, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3287);
evaluator.add(c2, c3287, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3287);
evaluator.add(c2, c3287, c2);
evaluator.multiply_plain(c2, p109, c2);
evaluator.add(c3303, c2, c3303);
evaluator.add(c3311, c3303, c3311);
evaluator.add(c15, c3311, c15);
evaluator.multiply(c3, c17, c3311);
evaluator.relinearize(c3311, relin_keys, c3311);
evaluator.rotate_rows(c3311, 8, galois_keys, c3303);
evaluator.add(c3311, c3303, c3311);
evaluator.rotate_rows(c3311, 4, galois_keys, c3303);
evaluator.add(c3311, c3303, c3311);
evaluator.rotate_rows(c3311, 2, galois_keys, c3303);
evaluator.add(c3311, c3303, c3311);
evaluator.rotate_rows(c3311, 1, galois_keys, c3303);
evaluator.add(c3311, c3303, c3311);
evaluator.multiply_plain(c3311, p35, c3311);
evaluator.multiply(c3, c18, c3303);
evaluator.relinearize(c3303, relin_keys, c3303);
evaluator.rotate_rows(c3303, 8, galois_keys, c2);
evaluator.add(c3303, c2, c3303);
evaluator.rotate_rows(c3303, 4, galois_keys, c2);
evaluator.add(c3303, c2, c3303);
evaluator.rotate_rows(c3303, 2, galois_keys, c2);
evaluator.add(c3303, c2, c3303);
evaluator.rotate_rows(c3303, 1, galois_keys, c2);
evaluator.add(c3303, c2, c3303);
evaluator.multiply_plain(c3303, p39, c3303);
evaluator.add(c3311, c3303, c3311);
evaluator.multiply(c3, c19, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c3303);
evaluator.add(c2, c3303, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3303);
evaluator.add(c2, c3303, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3287);
evaluator.add(c2, c3287, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3287);
evaluator.add(c2, c3287, c2);
evaluator.multiply_plain(c2, p44, c2);
evaluator.multiply(c3, c30, c3287);
evaluator.relinearize(c3287, relin_keys, c3287);
evaluator.rotate_rows(c3287, 8, galois_keys, c3303);
evaluator.add(c3287, c3303, c3287);
evaluator.rotate_rows(c3287, 4, galois_keys, c3303);
evaluator.add(c3287, c3303, c3287);
evaluator.rotate_rows(c3287, 2, galois_keys, c3239);
evaluator.add(c3287, c3239, c3287);
evaluator.rotate_rows(c3287, 1, galois_keys, c3303);
evaluator.add(c3287, c3303, c3287);
evaluator.multiply_plain(c3287, p99, c3287);
evaluator.multiply(c3, c27, c3303);
evaluator.relinearize(c3303, relin_keys, c3303);
evaluator.rotate_rows(c3303, 8, galois_keys, c3279);
evaluator.add(c3303, c3279, c3303);
evaluator.rotate_rows(c3303, 4, galois_keys, c3279);
evaluator.add(c3303, c3279, c3303);
evaluator.rotate_rows(c3303, 2, galois_keys, c3279);
evaluator.add(c3303, c3279, c3303);
evaluator.rotate_rows(c3303, 1, galois_keys, c3279);
evaluator.add(c3303, c3279, c3303);
evaluator.multiply_plain(c3303, p84, c3303);
evaluator.multiply(c3, c26, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c3247);
evaluator.add(c3279, c3247, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3247);
evaluator.add(c3279, c3247, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c3247);
evaluator.add(c3279, c3247, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c3247);
evaluator.add(c3279, c3247, c3279);
evaluator.multiply_plain(c3279, p79, c3279);
evaluator.multiply(c3, c20, c3247);
evaluator.relinearize(c3247, relin_keys, c3247);
evaluator.rotate_rows(c3247, 8, galois_keys, c3239);
evaluator.add(c3247, c3239, c3247);
evaluator.rotate_rows(c3247, 4, galois_keys, c3239);
evaluator.add(c3247, c3239, c3247);
evaluator.rotate_rows(c3247, 2, galois_keys, c3239);
evaluator.add(c3247, c3239, c3247);
evaluator.rotate_rows(c3247, 1, galois_keys, c3239);
evaluator.add(c3247, c3239, c3247);
evaluator.multiply_plain(c3247, p49, c3247);
evaluator.multiply(c3, c21, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.multiply_plain(c3239, p54, c3239);
evaluator.add(c3247, c3239, c3247);
evaluator.multiply(c3, c25, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.multiply_plain(c3239, p74, c3239);
evaluator.multiply(c3, c22, c3207);
evaluator.relinearize(c3207, relin_keys, c3207);
Ciphertext c2983;
evaluator.rotate_rows(c3207, 8, galois_keys, c2983);
evaluator.add(c3207, c2983, c3207);
evaluator.rotate_rows(c3207, 4, galois_keys, c2983);
evaluator.add(c3207, c2983, c3207);
evaluator.rotate_rows(c3207, 2, galois_keys, c2983);
evaluator.add(c3207, c2983, c3207);
evaluator.rotate_rows(c3207, 1, galois_keys, c2983);
evaluator.add(c3207, c2983, c3207);
evaluator.multiply_plain(c3207, p59, c3207);
evaluator.multiply(c3, c23, c2983);
evaluator.relinearize(c2983, relin_keys, c2983);
Ciphertext c2975;
evaluator.rotate_rows(c2983, 8, galois_keys, c2975);
evaluator.add(c2983, c2975, c2983);
evaluator.rotate_rows(c2983, 4, galois_keys, c2975);
evaluator.add(c2983, c2975, c2983);
evaluator.rotate_rows(c2983, 2, galois_keys, c2975);
evaluator.add(c2983, c2975, c2983);
evaluator.rotate_rows(c2983, 1, galois_keys, c2975);
evaluator.add(c2983, c2975, c2983);
evaluator.multiply_plain(c2983, p64, c2983);
evaluator.multiply(c3, c24, c2975);
evaluator.relinearize(c2975, relin_keys, c2975);
Ciphertext c2967;
evaluator.rotate_rows(c2975, 8, galois_keys, c2967);
evaluator.add(c2975, c2967, c2975);
evaluator.rotate_rows(c2975, 4, galois_keys, c2967);
evaluator.add(c2975, c2967, c2975);
evaluator.rotate_rows(c2975, 2, galois_keys, c2967);
evaluator.add(c2975, c2967, c2975);
evaluator.rotate_rows(c2975, 1, galois_keys, c2967);
evaluator.add(c2975, c2967, c2975);
evaluator.multiply_plain(c2975, p69, c2975);
evaluator.add(c2983, c2975, c2983);
evaluator.add(c3207, c2983, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.add(c3247, c3239, c3247);
evaluator.add(c3279, c3247, c3279);
evaluator.add(c3303, c3279, c3303);
evaluator.multiply(c3, c28, c2983);
evaluator.relinearize(c2983, relin_keys, c2983);
evaluator.rotate_rows(c2983, 8, galois_keys, c3207);
evaluator.add(c2983, c3207, c2983);
evaluator.rotate_rows(c2983, 4, galois_keys, c3207);
evaluator.add(c2983, c3207, c2983);
evaluator.rotate_rows(c2983, 2, galois_keys, c3207);
evaluator.add(c2983, c3207, c2983);
evaluator.rotate_rows(c2983, 1, galois_keys, c3239);
evaluator.add(c2983, c3239, c2983);
evaluator.multiply_plain(c2983, p89, c2983);
evaluator.multiply(c3, c29, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c3247);
evaluator.add(c3239, c3247, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.multiply_plain(c3239, p94, c3239);
evaluator.add(c2983, c3239, c2983);
evaluator.add(c3303, c2983, c3303);
evaluator.add(c3287, c3303, c3287);
evaluator.multiply(c3, c31, c3207);
evaluator.relinearize(c3207, relin_keys, c3207);
evaluator.rotate_rows(c3207, 8, galois_keys, c3247);
evaluator.add(c3207, c3247, c3207);
evaluator.rotate_rows(c3207, 4, galois_keys, c3247);
evaluator.add(c3207, c3247, c3207);
evaluator.rotate_rows(c3207, 2, galois_keys, c3247);
evaluator.add(c3207, c3247, c3207);
evaluator.rotate_rows(c3207, 1, galois_keys, c3247);
evaluator.add(c3207, c3247, c3207);
evaluator.multiply_plain(c3207, p104, c3207);
evaluator.multiply(c3, c32, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c3247);
evaluator.add(c3, c3247, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c3247);
evaluator.add(c3, c3247, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c3247);
evaluator.add(c3, c3247, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c3247);
evaluator.add(c3, c3247, c3);
evaluator.multiply_plain(c3, p109, c3);
evaluator.add(c3207, c3, c3207);
evaluator.add(c3287, c3207, c3287);
evaluator.add(c2, c3287, c2);
evaluator.add(c3311, c2, c3311);
evaluator.multiply(c4, c17, c3247);
evaluator.relinearize(c3247, relin_keys, c3247);
evaluator.rotate_rows(c3247, 8, galois_keys, c3279);
evaluator.add(c3247, c3279, c3247);
evaluator.rotate_rows(c3247, 4, galois_keys, c3279);
evaluator.add(c3247, c3279, c3247);
evaluator.rotate_rows(c3247, 2, galois_keys, c3279);
evaluator.add(c3247, c3279, c3247);
evaluator.rotate_rows(c3247, 1, galois_keys, c3279);
evaluator.add(c3247, c3279, c3247);
evaluator.multiply_plain(c3247, p35, c3247);
evaluator.multiply(c4, c18, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c2983);
evaluator.add(c3279, c2983, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c2983);
evaluator.add(c3279, c2983, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c2983);
evaluator.add(c3279, c2983, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c2983);
evaluator.add(c3279, c2983, c3279);
evaluator.multiply_plain(c3279, p39, c3279);
evaluator.add(c3247, c3279, c3247);
evaluator.multiply(c4, c19, c2983);
evaluator.relinearize(c2983, relin_keys, c2983);
evaluator.rotate_rows(c2983, 8, galois_keys, c3303);
evaluator.add(c2983, c3303, c2983);
evaluator.rotate_rows(c2983, 4, galois_keys, c3207);
evaluator.add(c2983, c3207, c2983);
evaluator.rotate_rows(c2983, 2, galois_keys, c2975);
evaluator.add(c2983, c2975, c2983);
evaluator.rotate_rows(c2983, 1, galois_keys, c3303);
evaluator.add(c2983, c3303, c2983);
evaluator.multiply_plain(c2983, p44, c2983);
evaluator.add(c3247, c2983, c3247);
evaluator.multiply(c4, c20, c3287);
evaluator.relinearize(c3287, relin_keys, c3287);
evaluator.rotate_rows(c3287, 8, galois_keys, c2);
evaluator.add(c3287, c2, c3287);
evaluator.rotate_rows(c3287, 4, galois_keys, c2);
evaluator.add(c3287, c2, c3287);
evaluator.rotate_rows(c3287, 2, galois_keys, c2);
evaluator.add(c3287, c2, c3287);
evaluator.rotate_rows(c3287, 1, galois_keys, c2);
evaluator.add(c3287, c2, c3287);
evaluator.multiply_plain(c3287, p49, c3287);
evaluator.add(c3247, c3287, c3247);
evaluator.multiply(c4, c21, c3287);
evaluator.relinearize(c3287, relin_keys, c3287);
evaluator.rotate_rows(c3287, 8, galois_keys, c2);
evaluator.add(c3287, c2, c3287);
evaluator.rotate_rows(c3287, 4, galois_keys, c2);
evaluator.add(c3287, c2, c3287);
evaluator.rotate_rows(c3287, 2, galois_keys, c2);
evaluator.add(c3287, c2, c3287);
evaluator.rotate_rows(c3287, 1, galois_keys, c2);
evaluator.add(c3287, c2, c3287);
evaluator.multiply_plain(c3287, p54, c3287);
evaluator.multiply(c4, c30, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c3239);
evaluator.add(c2, c3239, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3239);
evaluator.add(c2, c3239, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3239);
evaluator.add(c2, c3239, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3239);
evaluator.add(c2, c3239, c2);
evaluator.multiply_plain(c2, p99, c2);
evaluator.multiply(c4, c26, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.multiply_plain(c3239, p79, c3239);
evaluator.multiply(c4, c25, c3207);
evaluator.relinearize(c3207, relin_keys, c3207);
evaluator.rotate_rows(c3207, 8, galois_keys, c3);
evaluator.add(c3207, c3, c3207);
evaluator.rotate_rows(c3207, 4, galois_keys, c3);
evaluator.add(c3207, c3, c3207);
evaluator.rotate_rows(c3207, 2, galois_keys, c3);
evaluator.add(c3207, c3, c3207);
evaluator.rotate_rows(c3207, 1, galois_keys, c3);
evaluator.add(c3207, c3, c3207);
evaluator.multiply_plain(c3207, p74, c3207);
evaluator.multiply(c4, c24, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.multiply_plain(c3, p69, c3);
evaluator.multiply(c4, c22, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c2975);
evaluator.add(c2967, c2975, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c2975);
evaluator.add(c2967, c2975, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c2975);
evaluator.add(c2967, c2975, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c2975);
evaluator.add(c2967, c2975, c2967);
evaluator.multiply_plain(c2967, p59, c2967);
evaluator.multiply(c4, c23, c2975);
evaluator.relinearize(c2975, relin_keys, c2975);
evaluator.rotate_rows(c2975, 8, galois_keys, c3279);
evaluator.add(c2975, c3279, c2975);
evaluator.rotate_rows(c2975, 4, galois_keys, c3279);
evaluator.add(c2975, c3279, c2975);
evaluator.rotate_rows(c2975, 2, galois_keys, c3279);
evaluator.add(c2975, c3279, c2975);
evaluator.rotate_rows(c2975, 1, galois_keys, c3279);
evaluator.add(c2975, c3279, c2975);
evaluator.multiply_plain(c2975, p64, c2975);
evaluator.add(c2967, c2975, c2967);
evaluator.add(c3, c2967, c3);
evaluator.add(c3207, c3, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.multiply(c4, c27, c3207);
evaluator.relinearize(c3207, relin_keys, c3207);
evaluator.rotate_rows(c3207, 8, galois_keys, c3);
evaluator.add(c3207, c3, c3207);
evaluator.rotate_rows(c3207, 4, galois_keys, c2967);
evaluator.add(c3207, c2967, c3207);
evaluator.rotate_rows(c3207, 2, galois_keys, c2975);
evaluator.add(c3207, c2975, c3207);
evaluator.rotate_rows(c3207, 1, galois_keys, c3);
evaluator.add(c3207, c3, c3207);
evaluator.multiply_plain(c3207, p84, c3207);
evaluator.multiply(c4, c28, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c2975);
evaluator.add(c2967, c2975, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c2975);
evaluator.add(c2967, c2975, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c3);
evaluator.add(c2967, c3, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c3);
evaluator.add(c2967, c3, c2967);
evaluator.multiply_plain(c2967, p89, c2967);
evaluator.multiply(c4, c29, c2975);
evaluator.relinearize(c2975, relin_keys, c2975);
evaluator.rotate_rows(c2975, 8, galois_keys, c3);
evaluator.add(c2975, c3, c2975);
evaluator.rotate_rows(c2975, 4, galois_keys, c3);
evaluator.add(c2975, c3, c2975);
evaluator.rotate_rows(c2975, 2, galois_keys, c3);
evaluator.add(c2975, c3, c2975);
evaluator.rotate_rows(c2975, 1, galois_keys, c3);
evaluator.add(c2975, c3, c2975);
evaluator.multiply_plain(c2975, p94, c2975);
evaluator.add(c2967, c2975, c2967);
evaluator.add(c3207, c2967, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.add(c2, c3239, c2);
evaluator.add(c3287, c2, c3287);
evaluator.multiply(c4, c31, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c3207);
evaluator.add(c3239, c3207, c3239);
evaluator.multiply_plain(c3239, p104, c3239);
evaluator.multiply(c4, c32, c4);
evaluator.relinearize(c4, relin_keys, c4);
evaluator.rotate_rows(c4, 8, galois_keys, c3207);
evaluator.add(c4, c3207, c4);
evaluator.rotate_rows(c4, 4, galois_keys, c3207);
evaluator.add(c4, c3207, c4);
evaluator.rotate_rows(c4, 2, galois_keys, c2975);
evaluator.add(c4, c2975, c4);
evaluator.rotate_rows(c4, 1, galois_keys, c2975);
evaluator.add(c4, c2975, c4);
evaluator.multiply_plain(c4, p109, c4);
evaluator.add(c3239, c4, c3239);
evaluator.add(c3287, c3239, c3287);
evaluator.add(c3247, c3287, c3247);
evaluator.multiply(c5, c17, c4);
evaluator.relinearize(c4, relin_keys, c4);
evaluator.rotate_rows(c4, 8, galois_keys, c2975);
evaluator.add(c4, c2975, c4);
evaluator.rotate_rows(c4, 4, galois_keys, c3);
evaluator.add(c4, c3, c4);
evaluator.rotate_rows(c4, 2, galois_keys, c3207);
evaluator.add(c4, c3207, c4);
evaluator.rotate_rows(c4, 1, galois_keys, c3);
evaluator.add(c4, c3, c4);
evaluator.multiply_plain(c4, p35, c4);
evaluator.multiply(c5, c18, c3287);
evaluator.relinearize(c3287, relin_keys, c3287);
evaluator.rotate_rows(c3287, 8, galois_keys, c2);
evaluator.add(c3287, c2, c3287);
evaluator.rotate_rows(c3287, 4, galois_keys, c3207);
evaluator.add(c3287, c3207, c3287);
evaluator.rotate_rows(c3287, 2, galois_keys, c2967);
evaluator.add(c3287, c2967, c3287);
evaluator.rotate_rows(c3287, 1, galois_keys, c3239);
evaluator.add(c3287, c3239, c3287);
evaluator.multiply_plain(c3287, p39, c3287);
evaluator.add(c4, c3287, c4);
evaluator.multiply(c5, c19, c3287);
evaluator.relinearize(c3287, relin_keys, c3287);
evaluator.rotate_rows(c3287, 8, galois_keys, c3);
evaluator.add(c3287, c3, c3287);
evaluator.rotate_rows(c3287, 4, galois_keys, c3);
evaluator.add(c3287, c3, c3287);
evaluator.rotate_rows(c3287, 2, galois_keys, c3);
evaluator.add(c3287, c3, c3287);
evaluator.rotate_rows(c3287, 1, galois_keys, c3);
evaluator.add(c3287, c3, c3287);
evaluator.multiply_plain(c3287, p44, c3287);
evaluator.add(c4, c3287, c4);
evaluator.multiply(c5, c20, c3287);
evaluator.relinearize(c3287, relin_keys, c3287);
evaluator.rotate_rows(c3287, 8, galois_keys, c3);
evaluator.add(c3287, c3, c3287);
evaluator.rotate_rows(c3287, 4, galois_keys, c3);
evaluator.add(c3287, c3, c3287);
evaluator.rotate_rows(c3287, 2, galois_keys, c3);
evaluator.add(c3287, c3, c3287);
evaluator.rotate_rows(c3287, 1, galois_keys, c3);
evaluator.add(c3287, c3, c3287);
evaluator.multiply_plain(c3287, p49, c3287);
evaluator.add(c4, c3287, c4);
evaluator.multiply(c5, c24, c3287);
evaluator.relinearize(c3287, relin_keys, c3287);
evaluator.rotate_rows(c3287, 8, galois_keys, c3);
evaluator.add(c3287, c3, c3287);
evaluator.rotate_rows(c3287, 4, galois_keys, c3);
evaluator.add(c3287, c3, c3287);
evaluator.rotate_rows(c3287, 2, galois_keys, c3);
evaluator.add(c3287, c3, c3287);
evaluator.rotate_rows(c3287, 1, galois_keys, c3);
evaluator.add(c3287, c3, c3287);
evaluator.multiply_plain(c3287, p69, c3287);
evaluator.multiply(c5, c23, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c2);
evaluator.add(c3, c2, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c2);
evaluator.add(c3, c2, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c2);
evaluator.add(c3, c2, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c2);
evaluator.add(c3, c2, c3);
evaluator.multiply_plain(c3, p64, c3);
evaluator.multiply(c5, c21, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c3207);
evaluator.add(c2, c3207, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3207);
evaluator.add(c2, c3207, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3207);
evaluator.add(c2, c3207, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3207);
evaluator.add(c2, c3207, c2);
evaluator.multiply_plain(c2, p54, c2);
evaluator.multiply(c5, c22, c3207);
evaluator.relinearize(c3207, relin_keys, c3207);
evaluator.rotate_rows(c3207, 8, galois_keys, c3279);
evaluator.add(c3207, c3279, c3207);
evaluator.rotate_rows(c3207, 4, galois_keys, c3279);
evaluator.add(c3207, c3279, c3207);
evaluator.rotate_rows(c3207, 2, galois_keys, c3279);
evaluator.add(c3207, c3279, c3207);
evaluator.rotate_rows(c3207, 1, galois_keys, c3279);
evaluator.add(c3207, c3279, c3207);
evaluator.multiply_plain(c3207, p59, c3207);
evaluator.add(c2, c3207, c2);
evaluator.add(c3, c2, c3);
evaluator.add(c3287, c3, c3287);
evaluator.add(c4, c3287, c4);
evaluator.multiply(c5, c25, c3287);
evaluator.relinearize(c3287, relin_keys, c3287);
evaluator.rotate_rows(c3287, 8, galois_keys, c3);
evaluator.add(c3287, c3, c3287);
evaluator.rotate_rows(c3287, 4, galois_keys, c3207);
evaluator.add(c3287, c3207, c3287);
evaluator.rotate_rows(c3287, 2, galois_keys, c3279);
evaluator.add(c3287, c3279, c3287);
evaluator.rotate_rows(c3287, 1, galois_keys, c2);
evaluator.add(c3287, c2, c3287);
evaluator.multiply_plain(c3287, p74, c3287);
evaluator.multiply(c5, c26, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c3);
evaluator.add(c2, c3, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3);
evaluator.add(c2, c3, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3);
evaluator.add(c2, c3, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3);
evaluator.add(c2, c3, c2);
evaluator.multiply_plain(c2, p79, c2);
evaluator.multiply(c5, c27, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.multiply_plain(c3, p84, c3);
evaluator.add(c2, c3, c2);
evaluator.add(c3287, c2, c3287);
evaluator.multiply(c5, c30, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c2);
evaluator.add(c3, c2, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c2);
evaluator.add(c3, c2, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c2);
evaluator.add(c3, c2, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.multiply_plain(c3, p99, c3);
evaluator.multiply(c5, c28, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c2);
evaluator.add(c2967, c2, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c2);
evaluator.add(c2967, c2, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c2);
evaluator.add(c2967, c2, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c2);
evaluator.add(c2967, c2, c2967);
evaluator.multiply_plain(c2967, p89, c2967);
evaluator.multiply(c5, c29, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c3207);
evaluator.add(c2, c3207, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3207);
evaluator.add(c2, c3207, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3207);
evaluator.add(c2, c3207, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3207);
evaluator.add(c2, c3207, c2);
evaluator.multiply_plain(c2, p94, c2);
evaluator.add(c2967, c2, c2967);
evaluator.add(c3, c2967, c3);
evaluator.add(c3287, c3, c3287);
evaluator.multiply(c5, c31, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c2);
evaluator.add(c3, c2, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c2);
evaluator.add(c3, c2, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c3207);
evaluator.add(c3, c3207, c3);
evaluator.multiply_plain(c3, p104, c3);
evaluator.multiply(c5, c32, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c3207);
evaluator.add(c5, c3207, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c2);
evaluator.add(c5, c2, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.multiply_plain(c5, p109, c5);
evaluator.add(c3, c5, c3);
evaluator.add(c3287, c3, c3287);
evaluator.add(c4, c3287, c4);
evaluator.multiply(c6, c17, c3287);
evaluator.relinearize(c3287, relin_keys, c3287);
evaluator.rotate_rows(c3287, 8, galois_keys, c3);
evaluator.add(c3287, c3, c3287);
evaluator.rotate_rows(c3287, 4, galois_keys, c5);
evaluator.add(c3287, c5, c3287);
evaluator.rotate_rows(c3287, 2, galois_keys, c2967);
evaluator.add(c3287, c2967, c3287);
evaluator.rotate_rows(c3287, 1, galois_keys, c3);
evaluator.add(c3287, c3, c3287);
evaluator.multiply_plain(c3287, p35, c3287);
evaluator.multiply(c6, c18, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.multiply_plain(c5, p39, c5);
evaluator.add(c3287, c5, c3287);
evaluator.multiply(c6, c19, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.multiply_plain(c5, p44, c5);
evaluator.multiply(c6, c20, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c3);
evaluator.add(c2967, c3, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c3);
evaluator.add(c2967, c3, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c3);
evaluator.add(c2967, c3, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c3);
evaluator.add(c2967, c3, c2967);
evaluator.multiply_plain(c2967, p49, c2967);
evaluator.multiply(c6, c21, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c3207);
evaluator.add(c3, c3207, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c3207);
evaluator.add(c3, c3207, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c3207);
evaluator.add(c3, c3207, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c3207);
evaluator.add(c3, c3207, c3);
evaluator.multiply_plain(c3, p54, c3);
evaluator.multiply(c6, c22, c3207);
evaluator.relinearize(c3207, relin_keys, c3207);
evaluator.rotate_rows(c3207, 8, galois_keys, c3239);
evaluator.add(c3207, c3239, c3207);
evaluator.rotate_rows(c3207, 4, galois_keys, c3239);
evaluator.add(c3207, c3239, c3207);
evaluator.rotate_rows(c3207, 2, galois_keys, c3239);
evaluator.add(c3207, c3239, c3207);
evaluator.rotate_rows(c3207, 1, galois_keys, c3239);
evaluator.add(c3207, c3239, c3207);
evaluator.multiply_plain(c3207, p59, c3207);
evaluator.add(c3, c3207, c3);
evaluator.add(c2967, c3, c2967);
evaluator.add(c5, c2967, c5);
evaluator.add(c3287, c5, c3287);
evaluator.multiply(c6, c30, c3207);
evaluator.relinearize(c3207, relin_keys, c3207);
evaluator.rotate_rows(c3207, 8, galois_keys, c3239);
evaluator.add(c3207, c3239, c3207);
evaluator.rotate_rows(c3207, 4, galois_keys, c3239);
evaluator.add(c3207, c3239, c3207);
evaluator.rotate_rows(c3207, 2, galois_keys, c3239);
evaluator.add(c3207, c3239, c3207);
evaluator.rotate_rows(c3207, 1, galois_keys, c3);
evaluator.add(c3207, c3, c3207);
evaluator.multiply_plain(c3207, p99, c3207);
evaluator.multiply(c6, c23, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c3239);
evaluator.add(c3, c3239, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c5);
evaluator.add(c3, c5, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c3239);
evaluator.add(c3, c3239, c3);
evaluator.multiply_plain(c3, p64, c3);
evaluator.multiply(c6, c24, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c5);
evaluator.add(c2967, c5, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c5);
evaluator.add(c2967, c5, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c5);
evaluator.add(c2967, c5, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c5);
evaluator.add(c2967, c5, c2967);
evaluator.multiply_plain(c2967, p69, c2967);
evaluator.add(c3, c2967, c3);
evaluator.multiply(c6, c25, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c5);
evaluator.add(c2967, c5, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c5);
evaluator.add(c2967, c5, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c5);
evaluator.add(c2967, c5, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c5);
evaluator.add(c2967, c5, c2967);
evaluator.multiply_plain(c2967, p74, c2967);
evaluator.multiply(c6, c26, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c3239);
evaluator.add(c5, c3239, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c3239);
evaluator.add(c5, c3239, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c3239);
evaluator.add(c5, c3239, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c3239);
evaluator.add(c5, c3239, c5);
evaluator.multiply_plain(c5, p79, c5);
evaluator.multiply(c6, c27, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c3279);
evaluator.add(c3239, c3279, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c3279);
evaluator.add(c3239, c3279, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c3279);
evaluator.add(c3239, c3279, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c3279);
evaluator.add(c3239, c3279, c3239);
evaluator.multiply_plain(c3239, p84, c3239);
evaluator.add(c5, c3239, c5);
evaluator.add(c2967, c5, c2967);
evaluator.multiply(c6, c28, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c3279);
evaluator.add(c5, c3279, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c3279);
evaluator.add(c5, c3279, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c3279);
evaluator.add(c5, c3279, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c3279);
evaluator.add(c5, c3279, c5);
evaluator.multiply_plain(c5, p89, c5);
evaluator.multiply(c6, c29, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.multiply_plain(c3279, p94, c3279);
evaluator.add(c5, c3279, c5);
evaluator.add(c2967, c5, c2967);
evaluator.add(c3, c2967, c3);
evaluator.add(c3207, c3, c3207);
evaluator.add(c3287, c3207, c3287);
evaluator.multiply(c6, c31, c3207);
evaluator.relinearize(c3207, relin_keys, c3207);
evaluator.rotate_rows(c3207, 8, galois_keys, c3);
evaluator.add(c3207, c3, c3207);
evaluator.rotate_rows(c3207, 4, galois_keys, c2967);
evaluator.add(c3207, c2967, c3207);
evaluator.rotate_rows(c3207, 2, galois_keys, c5);
evaluator.add(c3207, c5, c3207);
evaluator.rotate_rows(c3207, 1, galois_keys, c3239);
evaluator.add(c3207, c3239, c3207);
evaluator.multiply_plain(c3207, p104, c3207);
evaluator.multiply(c6, c32, c6);
evaluator.relinearize(c6, relin_keys, c6);
evaluator.rotate_rows(c6, 8, galois_keys, c3239);
evaluator.add(c6, c3239, c6);
evaluator.rotate_rows(c6, 4, galois_keys, c3279);
evaluator.add(c6, c3279, c6);
evaluator.rotate_rows(c6, 2, galois_keys, c3239);
evaluator.add(c6, c3239, c6);
evaluator.rotate_rows(c6, 1, galois_keys, c3279);
evaluator.add(c6, c3279, c6);
evaluator.multiply_plain(c6, p109, c6);
evaluator.add(c3207, c6, c3207);
evaluator.add(c3287, c3207, c3287);
evaluator.multiply(c7, c17, c3207);
evaluator.relinearize(c3207, relin_keys, c3207);
evaluator.rotate_rows(c3207, 8, galois_keys, c6);
evaluator.add(c3207, c6, c3207);
evaluator.rotate_rows(c3207, 4, galois_keys, c6);
evaluator.add(c3207, c6, c3207);
evaluator.rotate_rows(c3207, 2, galois_keys, c6);
evaluator.add(c3207, c6, c3207);
evaluator.rotate_rows(c3207, 1, galois_keys, c6);
evaluator.add(c3207, c6, c3207);
evaluator.multiply_plain(c3207, p35, c3207);
evaluator.multiply(c7, c18, c6);
evaluator.relinearize(c6, relin_keys, c6);
evaluator.rotate_rows(c6, 8, galois_keys, c3239);
evaluator.add(c6, c3239, c6);
evaluator.rotate_rows(c6, 4, galois_keys, c3239);
evaluator.add(c6, c3239, c6);
evaluator.rotate_rows(c6, 2, galois_keys, c3239);
evaluator.add(c6, c3239, c6);
evaluator.rotate_rows(c6, 1, galois_keys, c3239);
evaluator.add(c6, c3239, c6);
evaluator.multiply_plain(c6, p39, c6);
evaluator.add(c3207, c6, c3207);
evaluator.multiply(c7, c19, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c6);
evaluator.add(c3239, c6, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c6);
evaluator.add(c3239, c6, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c6);
evaluator.add(c3239, c6, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c6);
evaluator.add(c3239, c6, c3239);
evaluator.multiply_plain(c3239, p44, c3239);
evaluator.add(c3207, c3239, c3207);
evaluator.multiply(c7, c20, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c6);
evaluator.add(c3239, c6, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c6);
evaluator.add(c3239, c6, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c6);
evaluator.add(c3239, c6, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c6);
evaluator.add(c3239, c6, c3239);
evaluator.multiply_plain(c3239, p49, c3239);
evaluator.add(c3207, c3239, c3207);
evaluator.multiply(c7, c30, c6);
evaluator.relinearize(c6, relin_keys, c6);
evaluator.rotate_rows(c6, 8, galois_keys, c3239);
evaluator.add(c6, c3239, c6);
evaluator.rotate_rows(c6, 4, galois_keys, c3239);
evaluator.add(c6, c3239, c6);
evaluator.rotate_rows(c6, 2, galois_keys, c3239);
evaluator.add(c6, c3239, c6);
evaluator.rotate_rows(c6, 1, galois_keys, c3239);
evaluator.add(c6, c3239, c6);
evaluator.multiply_plain(c6, p99, c6);
evaluator.multiply(c7, c29, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c3279);
evaluator.add(c3239, c3279, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c3);
evaluator.add(c3239, c3, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c3);
evaluator.add(c3239, c3, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c3);
evaluator.add(c3239, c3, c3239);
evaluator.multiply_plain(c3239, p94, c3239);
evaluator.multiply(c7, c21, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.multiply_plain(c3, p54, c3);
evaluator.multiply(c7, c22, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c3279);
evaluator.add(c2967, c3279, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c3279);
evaluator.add(c2967, c3279, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c3279);
evaluator.add(c2967, c3279, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c3279);
evaluator.add(c2967, c3279, c2967);
evaluator.multiply_plain(c2967, p59, c2967);
evaluator.multiply(c7, c23, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c5);
evaluator.add(c3279, c5, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c5);
evaluator.add(c3279, c5, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c5);
evaluator.add(c3279, c5, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c5);
evaluator.add(c3279, c5, c3279);
evaluator.multiply_plain(c3279, p64, c3279);
evaluator.add(c2967, c3279, c2967);
evaluator.add(c3, c2967, c3);
evaluator.multiply(c7, c26, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.multiply_plain(c5, p79, c5);
evaluator.multiply(c7, c24, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c3279);
evaluator.add(c2967, c3279, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c3279);
evaluator.add(c2967, c3279, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c3279);
evaluator.add(c2967, c3279, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c3279);
evaluator.add(c2967, c3279, c2967);
evaluator.multiply_plain(c2967, p69, c2967);
evaluator.multiply(c7, c25, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c2);
evaluator.add(c3279, c2, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c2);
evaluator.add(c3279, c2, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c2);
evaluator.add(c3279, c2, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c2);
evaluator.add(c3279, c2, c3279);
evaluator.multiply_plain(c3279, p74, c3279);
evaluator.add(c2967, c3279, c2967);
evaluator.add(c5, c2967, c5);
evaluator.add(c3, c5, c3);
evaluator.multiply(c7, c27, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c2967);
evaluator.add(c2, c2967, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c2967);
evaluator.add(c2, c2967, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c2967);
evaluator.add(c2, c2967, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c2967);
evaluator.add(c2, c2967, c2);
evaluator.multiply_plain(c2, p84, c2);
evaluator.multiply(c7, c28, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c5);
evaluator.add(c2967, c5, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c5);
evaluator.add(c2967, c5, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c5);
evaluator.add(c2967, c5, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c5);
evaluator.add(c2967, c5, c2967);
evaluator.multiply_plain(c2967, p89, c2967);
evaluator.add(c2, c2967, c2);
evaluator.add(c3, c2, c3);
evaluator.add(c3239, c3, c3239);
evaluator.add(c6, c3239, c6);
evaluator.multiply(c7, c31, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c3);
evaluator.add(c2, c3, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3);
evaluator.add(c2, c3, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3);
evaluator.add(c2, c3, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3);
evaluator.add(c2, c3, c2);
evaluator.multiply_plain(c2, p104, c2);
evaluator.multiply(c7, c32, c7);
evaluator.relinearize(c7, relin_keys, c7);
evaluator.rotate_rows(c7, 8, galois_keys, c3);
evaluator.add(c7, c3, c7);
evaluator.rotate_rows(c7, 4, galois_keys, c3);
evaluator.add(c7, c3, c7);
evaluator.rotate_rows(c7, 2, galois_keys, c3);
evaluator.add(c7, c3, c7);
evaluator.rotate_rows(c7, 1, galois_keys, c3);
evaluator.add(c7, c3, c7);
evaluator.multiply_plain(c7, p109, c7);
evaluator.add(c2, c7, c2);
evaluator.add(c6, c2, c6);
evaluator.add(c3207, c6, c3207);
evaluator.multiply(c9, c17, c6);
evaluator.relinearize(c6, relin_keys, c6);
evaluator.rotate_rows(c6, 8, galois_keys, c7);
evaluator.add(c6, c7, c6);
evaluator.rotate_rows(c6, 4, galois_keys, c7);
evaluator.add(c6, c7, c6);
evaluator.rotate_rows(c6, 2, galois_keys, c7);
evaluator.add(c6, c7, c6);
evaluator.rotate_rows(c6, 1, galois_keys, c7);
evaluator.add(c6, c7, c6);
evaluator.multiply_plain(c6, p35, c6);
evaluator.multiply(c9, c18, c7);
evaluator.relinearize(c7, relin_keys, c7);
evaluator.rotate_rows(c7, 8, galois_keys, c2);
evaluator.add(c7, c2, c7);
evaluator.rotate_rows(c7, 4, galois_keys, c2);
evaluator.add(c7, c2, c7);
evaluator.rotate_rows(c7, 2, galois_keys, c2);
evaluator.add(c7, c2, c7);
evaluator.rotate_rows(c7, 1, galois_keys, c2);
evaluator.add(c7, c2, c7);
evaluator.multiply_plain(c7, p39, c7);
evaluator.add(c6, c7, c6);
evaluator.multiply(c9, c22, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c3);
evaluator.add(c2, c3, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3);
evaluator.add(c2, c3, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3);
evaluator.add(c2, c3, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3);
evaluator.add(c2, c3, c2);
evaluator.multiply_plain(c2, p59, c2);
evaluator.multiply(c9, c21, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c7);
evaluator.add(c3, c7, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c7);
evaluator.add(c3, c7, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c7);
evaluator.add(c3, c7, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c7);
evaluator.add(c3, c7, c3);
evaluator.multiply_plain(c3, p54, c3);
evaluator.multiply(c9, c19, c7);
evaluator.relinearize(c7, relin_keys, c7);
evaluator.rotate_rows(c7, 8, galois_keys, c3279);
evaluator.add(c7, c3279, c7);
evaluator.rotate_rows(c7, 4, galois_keys, c3279);
evaluator.add(c7, c3279, c7);
evaluator.rotate_rows(c7, 2, galois_keys, c3279);
evaluator.add(c7, c3279, c7);
evaluator.rotate_rows(c7, 1, galois_keys, c3279);
evaluator.add(c7, c3279, c7);
evaluator.multiply_plain(c7, p44, c7);
evaluator.multiply(c9, c20, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.multiply_plain(c3279, p49, c3279);
evaluator.add(c7, c3279, c7);
evaluator.add(c3, c7, c3);
evaluator.add(c2, c3, c2);
evaluator.multiply(c9, c23, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c7);
evaluator.add(c3, c7, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c7);
evaluator.add(c3, c7, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c7);
evaluator.add(c3, c7, c3);
evaluator.multiply_plain(c3, p64, c3);
evaluator.multiply(c9, c24, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c7);
evaluator.add(c3279, c7, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c7);
evaluator.add(c3279, c7, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c7);
evaluator.add(c3279, c7, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c7);
evaluator.add(c3279, c7, c3279);
evaluator.multiply_plain(c3279, p69, c3279);
evaluator.add(c3, c3279, c3);
evaluator.add(c2, c3, c2);
evaluator.add(c6, c2, c6);
evaluator.multiply(c9, c29, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c3);
evaluator.add(c2, c3, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c3);
evaluator.add(c2, c3, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c3);
evaluator.add(c2, c3, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c3);
evaluator.add(c2, c3, c2);
evaluator.multiply_plain(c2, p94, c2);
evaluator.multiply(c9, c28, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c7);
evaluator.add(c3, c7, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c7);
evaluator.add(c3, c7, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c7);
evaluator.add(c3, c7, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c7);
evaluator.add(c3, c7, c3);
evaluator.multiply_plain(c3, p89, c3);
evaluator.multiply(c9, c25, c7);
evaluator.relinearize(c7, relin_keys, c7);
evaluator.rotate_rows(c7, 8, galois_keys, c3279);
evaluator.add(c7, c3279, c7);
evaluator.rotate_rows(c7, 4, galois_keys, c3279);
evaluator.add(c7, c3279, c7);
evaluator.rotate_rows(c7, 2, galois_keys, c3279);
evaluator.add(c7, c3279, c7);
evaluator.rotate_rows(c7, 1, galois_keys, c3279);
evaluator.add(c7, c3279, c7);
evaluator.multiply_plain(c7, p74, c7);
evaluator.multiply(c9, c26, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.multiply_plain(c3279, p79, c3279);
evaluator.multiply(c9, c27, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c2967);
evaluator.add(c3239, c2967, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c2967);
evaluator.add(c3239, c2967, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c2967);
evaluator.add(c3239, c2967, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c2967);
evaluator.add(c3239, c2967, c3239);
evaluator.multiply_plain(c3239, p84, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.add(c7, c3279, c7);
evaluator.add(c3, c7, c3);
evaluator.add(c2, c3, c2);
evaluator.multiply(c9, c30, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c7);
evaluator.add(c3, c7, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c3239);
evaluator.add(c3, c3239, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c7);
evaluator.add(c3, c7, c3);
evaluator.multiply_plain(c3, p99, c3);
evaluator.multiply(c9, c31, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c3279);
evaluator.add(c3239, c3279, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c3279);
evaluator.add(c3239, c3279, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c3279);
evaluator.add(c3239, c3279, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c3279);
evaluator.add(c3239, c3279, c3239);
evaluator.multiply_plain(c3239, p104, c3239);
evaluator.multiply(c9, c32, c9);
evaluator.relinearize(c9, relin_keys, c9);
evaluator.rotate_rows(c9, 8, galois_keys, c3279);
evaluator.add(c9, c3279, c9);
evaluator.rotate_rows(c9, 4, galois_keys, c3279);
evaluator.add(c9, c3279, c9);
evaluator.rotate_rows(c9, 2, galois_keys, c3279);
evaluator.add(c9, c3279, c9);
evaluator.rotate_rows(c9, 1, galois_keys, c3279);
evaluator.add(c9, c3279, c9);
evaluator.multiply_plain(c9, p109, c9);
evaluator.add(c3239, c9, c3239);
evaluator.add(c3, c3239, c3);
evaluator.add(c2, c3, c2);
evaluator.add(c6, c2, c6);
evaluator.multiply(c10, c17, c2);
evaluator.relinearize(c2, relin_keys, c2);
evaluator.rotate_rows(c2, 8, galois_keys, c9);
evaluator.add(c2, c9, c2);
evaluator.rotate_rows(c2, 4, galois_keys, c9);
evaluator.add(c2, c9, c2);
evaluator.rotate_rows(c2, 2, galois_keys, c9);
evaluator.add(c2, c9, c2);
evaluator.rotate_rows(c2, 1, galois_keys, c9);
evaluator.add(c2, c9, c2);
evaluator.multiply_plain(c2, p35, c2);
evaluator.multiply(c10, c18, c9);
evaluator.relinearize(c9, relin_keys, c9);
evaluator.rotate_rows(c9, 8, galois_keys, c3239);
evaluator.add(c9, c3239, c9);
evaluator.rotate_rows(c9, 4, galois_keys, c3239);
evaluator.add(c9, c3239, c9);
evaluator.rotate_rows(c9, 2, galois_keys, c3239);
evaluator.add(c9, c3239, c9);
evaluator.rotate_rows(c9, 1, galois_keys, c3239);
evaluator.add(c9, c3239, c9);
evaluator.multiply_plain(c9, p39, c9);
evaluator.add(c2, c9, c2);
evaluator.multiply(c10, c19, c9);
evaluator.relinearize(c9, relin_keys, c9);
evaluator.rotate_rows(c9, 8, galois_keys, c3279);
evaluator.add(c9, c3279, c9);
evaluator.rotate_rows(c9, 4, galois_keys, c3239);
evaluator.add(c9, c3239, c9);
evaluator.rotate_rows(c9, 2, galois_keys, c3279);
evaluator.add(c9, c3279, c9);
evaluator.rotate_rows(c9, 1, galois_keys, c3279);
evaluator.add(c9, c3279, c9);
evaluator.multiply_plain(c9, p44, c9);
evaluator.multiply(c10, c20, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c7);
evaluator.add(c3279, c7, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.multiply_plain(c3279, p49, c3279);
evaluator.add(c9, c3279, c9);
evaluator.multiply(c10, c21, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.multiply_plain(c3279, p54, c3279);
evaluator.multiply(c10, c22, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c3239);
evaluator.add(c3, c3239, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c3239);
evaluator.add(c3, c3239, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c3239);
evaluator.add(c3, c3239, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c3239);
evaluator.add(c3, c3239, c3);
evaluator.multiply_plain(c3, p59, c3);
evaluator.multiply(c10, c27, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c2967);
evaluator.add(c3239, c2967, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c2967);
evaluator.add(c3239, c2967, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c2967);
evaluator.add(c3239, c2967, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c2967);
evaluator.add(c3239, c2967, c3239);
evaluator.multiply_plain(c3239, p84, c3239);
evaluator.multiply(c10, c26, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c7);
evaluator.add(c2967, c7, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c7);
evaluator.add(c2967, c7, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c7);
evaluator.add(c2967, c7, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c7);
evaluator.add(c2967, c7, c2967);
evaluator.multiply_plain(c2967, p79, c2967);
evaluator.multiply(c10, c25, c7);
evaluator.relinearize(c7, relin_keys, c7);
evaluator.rotate_rows(c7, 8, galois_keys, c5);
evaluator.add(c7, c5, c7);
evaluator.rotate_rows(c7, 4, galois_keys, c5);
evaluator.add(c7, c5, c7);
evaluator.rotate_rows(c7, 2, galois_keys, c5);
evaluator.add(c7, c5, c7);
evaluator.rotate_rows(c7, 1, galois_keys, c5);
evaluator.add(c7, c5, c7);
evaluator.multiply_plain(c7, p74, c7);
evaluator.multiply(c10, c23, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c2975);
evaluator.add(c5, c2975, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c2975);
evaluator.add(c5, c2975, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c2975);
evaluator.add(c5, c2975, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c2975);
evaluator.add(c5, c2975, c5);
evaluator.multiply_plain(c5, p64, c5);
evaluator.multiply(c10, c24, c2975);
evaluator.relinearize(c2975, relin_keys, c2975);
evaluator.rotate_rows(c2975, 8, galois_keys, c2983);
evaluator.add(c2975, c2983, c2975);
evaluator.rotate_rows(c2975, 4, galois_keys, c2983);
evaluator.add(c2975, c2983, c2975);
evaluator.rotate_rows(c2975, 2, galois_keys, c2983);
evaluator.add(c2975, c2983, c2975);
evaluator.rotate_rows(c2975, 1, galois_keys, c2983);
evaluator.add(c2975, c2983, c2975);
evaluator.multiply_plain(c2975, p69, c2975);
evaluator.add(c5, c2975, c5);
evaluator.add(c7, c5, c7);
evaluator.add(c2967, c7, c2967);
evaluator.add(c3239, c2967, c3239);
evaluator.multiply(c10, c28, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c7);
evaluator.add(c2967, c7, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c2975);
evaluator.add(c2967, c2975, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c5);
evaluator.add(c2967, c5, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c2983);
evaluator.add(c2967, c2983, c2967);
evaluator.multiply_plain(c2967, p89, c2967);
evaluator.multiply(c10, c29, c7);
evaluator.relinearize(c7, relin_keys, c7);
evaluator.rotate_rows(c7, 8, galois_keys, c2975);
evaluator.add(c7, c2975, c7);
evaluator.rotate_rows(c7, 4, galois_keys, c2975);
evaluator.add(c7, c2975, c7);
evaluator.rotate_rows(c7, 2, galois_keys, c2975);
evaluator.add(c7, c2975, c7);
evaluator.rotate_rows(c7, 1, galois_keys, c2975);
evaluator.add(c7, c2975, c7);
evaluator.multiply_plain(c7, p94, c7);
evaluator.multiply(c10, c30, c2975);
evaluator.relinearize(c2975, relin_keys, c2975);
evaluator.rotate_rows(c2975, 8, galois_keys, c5);
evaluator.add(c2975, c5, c2975);
evaluator.rotate_rows(c2975, 4, galois_keys, c5);
evaluator.add(c2975, c5, c2975);
evaluator.rotate_rows(c2975, 2, galois_keys, c5);
evaluator.add(c2975, c5, c2975);
evaluator.rotate_rows(c2975, 1, galois_keys, c5);
evaluator.add(c2975, c5, c2975);
evaluator.multiply_plain(c2975, p99, c2975);
evaluator.add(c7, c2975, c7);
evaluator.add(c2967, c7, c2967);
evaluator.multiply(c10, c31, c7);
evaluator.relinearize(c7, relin_keys, c7);
evaluator.rotate_rows(c7, 8, galois_keys, c2975);
evaluator.add(c7, c2975, c7);
evaluator.rotate_rows(c7, 4, galois_keys, c2975);
evaluator.add(c7, c2975, c7);
evaluator.rotate_rows(c7, 2, galois_keys, c2975);
evaluator.add(c7, c2975, c7);
evaluator.rotate_rows(c7, 1, galois_keys, c5);
evaluator.add(c7, c5, c7);
evaluator.multiply_plain(c7, p104, c7);
evaluator.multiply(c10, c32, c10);
evaluator.relinearize(c10, relin_keys, c10);
evaluator.rotate_rows(c10, 8, galois_keys, c5);
evaluator.add(c10, c5, c10);
evaluator.rotate_rows(c10, 4, galois_keys, c5);
evaluator.add(c10, c5, c10);
evaluator.rotate_rows(c10, 2, galois_keys, c5);
evaluator.add(c10, c5, c10);
evaluator.rotate_rows(c10, 1, galois_keys, c5);
evaluator.add(c10, c5, c10);
evaluator.multiply_plain(c10, p109, c10);
evaluator.add(c7, c10, c7);
evaluator.add(c2967, c7, c2967);
evaluator.add(c3239, c2967, c3239);
evaluator.add(c3, c3239, c3);
evaluator.add(c3279, c3, c3279);
evaluator.add(c9, c3279, c9);
evaluator.add(c2, c9, c2);
evaluator.multiply(c16, c17, c9);
evaluator.relinearize(c9, relin_keys, c9);
evaluator.rotate_rows(c9, 8, galois_keys, c3279);
evaluator.add(c9, c3279, c9);
evaluator.rotate_rows(c9, 4, galois_keys, c3279);
evaluator.add(c9, c3279, c9);
evaluator.rotate_rows(c9, 2, galois_keys, c3279);
evaluator.add(c9, c3279, c9);
evaluator.rotate_rows(c9, 1, galois_keys, c3279);
evaluator.add(c9, c3279, c9);
evaluator.multiply_plain(c9, p35, c9);
evaluator.multiply(c16, c18, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c7);
evaluator.add(c3279, c7, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c5);
evaluator.add(c3279, c5, c3279);
evaluator.multiply_plain(c3279, p39, c3279);
evaluator.add(c9, c3279, c9);
evaluator.multiply(c16, c19, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c3279);
evaluator.add(c5, c3279, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c2975);
evaluator.add(c5, c2975, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c3239);
evaluator.add(c5, c3239, c5);
evaluator.multiply_plain(c5, p44, c5);
evaluator.add(c9, c5, c9);
evaluator.multiply(c16, c20, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c3);
evaluator.add(c5, c3, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c3);
evaluator.add(c5, c3, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c3);
evaluator.add(c5, c3, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c3);
evaluator.add(c5, c3, c5);
evaluator.multiply_plain(c5, p49, c5);
evaluator.add(c9, c5, c9);
evaluator.multiply(c16, c21, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c10);
evaluator.add(c5, c10, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c10);
evaluator.add(c5, c10, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c10);
evaluator.add(c5, c10, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c10);
evaluator.add(c5, c10, c5);
evaluator.multiply_plain(c5, p54, c5);
evaluator.multiply(c16, c22, c10);
evaluator.relinearize(c10, relin_keys, c10);
evaluator.rotate_rows(c10, 8, galois_keys, c7);
evaluator.add(c10, c7, c10);
evaluator.rotate_rows(c10, 4, galois_keys, c7);
evaluator.add(c10, c7, c10);
evaluator.rotate_rows(c10, 2, galois_keys, c7);
evaluator.add(c10, c7, c10);
evaluator.rotate_rows(c10, 1, galois_keys, c7);
evaluator.add(c10, c7, c10);
evaluator.multiply_plain(c10, p59, c10);
evaluator.multiply(c16, c23, c7);
evaluator.relinearize(c7, relin_keys, c7);
evaluator.rotate_rows(c7, 8, galois_keys, c3);
evaluator.add(c7, c3, c7);
evaluator.rotate_rows(c7, 4, galois_keys, c3);
evaluator.add(c7, c3, c7);
evaluator.rotate_rows(c7, 2, galois_keys, c3);
evaluator.add(c7, c3, c7);
evaluator.rotate_rows(c7, 1, galois_keys, c3);
evaluator.add(c7, c3, c7);
evaluator.multiply_plain(c7, p64, c7);
evaluator.add(c10, c7, c10);
evaluator.add(c5, c10, c5);
evaluator.multiply(c16, c26, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c7);
evaluator.add(c3, c7, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c7);
evaluator.add(c3, c7, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c7);
evaluator.add(c3, c7, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c7);
evaluator.add(c3, c7, c3);
evaluator.multiply_plain(c3, p79, c3);
evaluator.multiply(c16, c24, c7);
evaluator.relinearize(c7, relin_keys, c7);
evaluator.rotate_rows(c7, 8, galois_keys, c3279);
evaluator.add(c7, c3279, c7);
evaluator.rotate_rows(c7, 4, galois_keys, c3279);
evaluator.add(c7, c3279, c7);
evaluator.rotate_rows(c7, 2, galois_keys, c3279);
evaluator.add(c7, c3279, c7);
evaluator.rotate_rows(c7, 1, galois_keys, c3279);
evaluator.add(c7, c3279, c7);
evaluator.multiply_plain(c7, p69, c7);
evaluator.multiply(c16, c25, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c10);
evaluator.add(c3279, c10, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c2967);
evaluator.add(c3279, c2967, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c10);
evaluator.add(c3279, c10, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c2983);
evaluator.add(c3279, c2983, c3279);
evaluator.multiply_plain(c3279, p74, c3279);
evaluator.add(c7, c3279, c7);
evaluator.add(c3, c7, c3);
evaluator.add(c5, c3, c5);
evaluator.add(c9, c5, c9);
evaluator.multiply(c16, c30, c2983);
evaluator.relinearize(c2983, relin_keys, c2983);
evaluator.rotate_rows(c2983, 8, galois_keys, c3279);
evaluator.add(c2983, c3279, c2983);
evaluator.rotate_rows(c2983, 4, galois_keys, c3279);
evaluator.add(c2983, c3279, c2983);
evaluator.rotate_rows(c2983, 2, galois_keys, c3279);
evaluator.add(c2983, c3279, c2983);
evaluator.rotate_rows(c2983, 1, galois_keys, c3279);
evaluator.add(c2983, c3279, c2983);
evaluator.multiply_plain(c2983, p99, c2983);
evaluator.multiply(c16, c27, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c7);
evaluator.add(c3279, c7, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c7);
evaluator.add(c3279, c7, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c7);
evaluator.add(c3279, c7, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c7);
evaluator.add(c3279, c7, c3279);
evaluator.multiply_plain(c3279, p84, c3279);
evaluator.multiply(c16, c28, c7);
evaluator.relinearize(c7, relin_keys, c7);
evaluator.rotate_rows(c7, 8, galois_keys, c3);
evaluator.add(c7, c3, c7);
evaluator.rotate_rows(c7, 4, galois_keys, c3);
evaluator.add(c7, c3, c7);
evaluator.rotate_rows(c7, 2, galois_keys, c3);
evaluator.add(c7, c3, c7);
evaluator.rotate_rows(c7, 1, galois_keys, c3);
evaluator.add(c7, c3, c7);
evaluator.multiply_plain(c7, p89, c7);
evaluator.multiply(c16, c29, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c2975);
evaluator.add(c3, c2975, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c2975);
evaluator.add(c3, c2975, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c2975);
evaluator.add(c3, c2975, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c2975);
evaluator.add(c3, c2975, c3);
evaluator.multiply_plain(c3, p94, c3);
evaluator.add(c7, c3, c7);
evaluator.add(c3279, c7, c3279);
evaluator.add(c2983, c3279, c2983);
evaluator.add(c9, c2983, c9);
evaluator.multiply(c16, c31, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c2975);
evaluator.add(c3, c2975, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c2975);
evaluator.add(c3, c2975, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c2975);
evaluator.add(c3, c2975, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c2975);
evaluator.add(c3, c2975, c3);
evaluator.multiply_plain(c3, p104, c3);
evaluator.multiply(c16, c32, c16);
evaluator.relinearize(c16, relin_keys, c16);
evaluator.rotate_rows(c16, 8, galois_keys, c2975);
evaluator.add(c16, c2975, c16);
evaluator.rotate_rows(c16, 4, galois_keys, c2975);
evaluator.add(c16, c2975, c16);
evaluator.rotate_rows(c16, 2, galois_keys, c2975);
evaluator.add(c16, c2975, c16);
evaluator.rotate_rows(c16, 1, galois_keys, c2975);
evaluator.add(c16, c2975, c16);
evaluator.multiply_plain(c16, p109, c16);
evaluator.add(c3, c16, c3);
evaluator.add(c9, c3, c9);
evaluator.multiply(c11, c17, c2975);
evaluator.relinearize(c2975, relin_keys, c2975);
evaluator.rotate_rows(c2975, 8, galois_keys, c2983);
evaluator.add(c2975, c2983, c2975);
evaluator.rotate_rows(c2975, 4, galois_keys, c3279);
evaluator.add(c2975, c3279, c2975);
evaluator.rotate_rows(c2975, 2, galois_keys, c3279);
evaluator.add(c2975, c3279, c2975);
evaluator.rotate_rows(c2975, 1, galois_keys, c3279);
evaluator.add(c2975, c3279, c2975);
evaluator.multiply_plain(c2975, p35, c2975);
evaluator.multiply(c11, c18, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c16);
evaluator.add(c3, c16, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.multiply_plain(c3, p39, c3);
evaluator.add(c2975, c3, c2975);
evaluator.multiply(c11, c23, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c16);
evaluator.add(c3, c16, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c16);
evaluator.add(c3, c16, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c16);
evaluator.add(c3, c16, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c16);
evaluator.add(c3, c16, c3);
evaluator.multiply_plain(c3, p64, c3);
evaluator.multiply(c11, c22, c16);
evaluator.relinearize(c16, relin_keys, c16);
evaluator.rotate_rows(c16, 8, galois_keys, c3279);
evaluator.add(c16, c3279, c16);
evaluator.rotate_rows(c16, 4, galois_keys, c3279);
evaluator.add(c16, c3279, c16);
evaluator.rotate_rows(c16, 2, galois_keys, c3279);
evaluator.add(c16, c3279, c16);
evaluator.rotate_rows(c16, 1, galois_keys, c3279);
evaluator.add(c16, c3279, c16);
evaluator.multiply_plain(c16, p59, c16);
evaluator.multiply(c11, c21, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c5);
evaluator.add(c3279, c5, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c5);
evaluator.add(c3279, c5, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c5);
evaluator.add(c3279, c5, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c5);
evaluator.add(c3279, c5, c3279);
evaluator.multiply_plain(c3279, p54, c3279);
evaluator.multiply(c11, c19, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c2967);
evaluator.add(c5, c2967, c5);
evaluator.multiply_plain(c5, p44, c5);
evaluator.multiply(c11, c20, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c2983);
evaluator.add(c2967, c2983, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c2983);
evaluator.add(c2967, c2983, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c2983);
evaluator.add(c2967, c2983, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c2983);
evaluator.add(c2967, c2983, c2967);
evaluator.multiply_plain(c2967, p49, c2967);
evaluator.add(c5, c2967, c5);
evaluator.add(c3279, c5, c3279);
evaluator.add(c16, c3279, c16);
evaluator.add(c3, c16, c3);
evaluator.add(c2975, c3, c2975);
evaluator.multiply(c11, c24, c2983);
evaluator.relinearize(c2983, relin_keys, c2983);
evaluator.rotate_rows(c2983, 8, galois_keys, c5);
evaluator.add(c2983, c5, c2983);
evaluator.rotate_rows(c2983, 4, galois_keys, c5);
evaluator.add(c2983, c5, c2983);
evaluator.rotate_rows(c2983, 2, galois_keys, c5);
evaluator.add(c2983, c5, c2983);
evaluator.rotate_rows(c2983, 1, galois_keys, c5);
evaluator.add(c2983, c5, c2983);
evaluator.multiply_plain(c2983, p69, c2983);
evaluator.multiply(c11, c25, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c3279);
evaluator.add(c5, c3279, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c3279);
evaluator.add(c5, c3279, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c3279);
evaluator.add(c5, c3279, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c16);
evaluator.add(c5, c16, c5);
evaluator.multiply_plain(c5, p74, c5);
evaluator.add(c2983, c5, c2983);
evaluator.multiply(c11, c26, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.multiply_plain(c3279, p79, c3279);
evaluator.multiply(c11, c30, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.multiply_plain(c3, p99, c3);
evaluator.multiply(c11, c27, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c3239);
evaluator.add(c2967, c3239, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c3239);
evaluator.add(c2967, c3239, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c3239);
evaluator.add(c2967, c3239, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c3239);
evaluator.add(c2967, c3239, c2967);
evaluator.multiply_plain(c2967, p84, c2967);
evaluator.multiply(c11, c28, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c5);
evaluator.add(c3239, c5, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c5);
evaluator.add(c3239, c5, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c5);
evaluator.add(c3239, c5, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c5);
evaluator.add(c3239, c5, c3239);
evaluator.multiply_plain(c3239, p89, c3239);
evaluator.multiply(c11, c29, c5);
evaluator.relinearize(c5, relin_keys, c5);
evaluator.rotate_rows(c5, 8, galois_keys, c16);
evaluator.add(c5, c16, c5);
evaluator.rotate_rows(c5, 4, galois_keys, c16);
evaluator.add(c5, c16, c5);
evaluator.rotate_rows(c5, 2, galois_keys, c16);
evaluator.add(c5, c16, c5);
evaluator.rotate_rows(c5, 1, galois_keys, c16);
evaluator.add(c5, c16, c5);
evaluator.multiply_plain(c5, p94, c5);
evaluator.add(c3239, c5, c3239);
evaluator.add(c2967, c3239, c2967);
evaluator.add(c3, c2967, c3);
evaluator.multiply(c11, c31, c16);
evaluator.relinearize(c16, relin_keys, c16);
evaluator.rotate_rows(c16, 8, galois_keys, c2967);
evaluator.add(c16, c2967, c16);
evaluator.rotate_rows(c16, 4, galois_keys, c3239);
evaluator.add(c16, c3239, c16);
evaluator.rotate_rows(c16, 2, galois_keys, c3239);
evaluator.add(c16, c3239, c16);
evaluator.rotate_rows(c16, 1, galois_keys, c3239);
evaluator.add(c16, c3239, c16);
evaluator.multiply_plain(c16, p104, c16);
evaluator.multiply(c11, c32, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c3239);
evaluator.add(c11, c3239, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c2967);
evaluator.add(c11, c2967, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c5);
evaluator.add(c11, c5, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c5);
evaluator.add(c11, c5, c11);
evaluator.multiply_plain(c11, p109, c11);
evaluator.add(c16, c11, c16);
evaluator.add(c3, c16, c3);
evaluator.add(c3279, c3, c3279);
evaluator.add(c2983, c3279, c2983);
evaluator.add(c2975, c2983, c2975);
evaluator.multiply(c12, c17, c2983);
evaluator.relinearize(c2983, relin_keys, c2983);
evaluator.rotate_rows(c2983, 8, galois_keys, c11);
evaluator.add(c2983, c11, c2983);
evaluator.rotate_rows(c2983, 4, galois_keys, c11);
evaluator.add(c2983, c11, c2983);
evaluator.rotate_rows(c2983, 2, galois_keys, c5);
evaluator.add(c2983, c5, c2983);
evaluator.rotate_rows(c2983, 1, galois_keys, c16);
evaluator.add(c2983, c16, c2983);
evaluator.multiply_plain(c2983, p35, c2983);
evaluator.multiply(c12, c18, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.multiply_plain(c3, p39, c3);
evaluator.add(c2983, c3, c2983);
evaluator.multiply(c12, c19, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.multiply_plain(c3, p44, c3);
evaluator.add(c2983, c3, c2983);
evaluator.multiply(c12, c20, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.multiply_plain(c3279, p49, c3279);
evaluator.add(c2983, c3279, c2983);
evaluator.multiply(c12, c24, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.multiply_plain(c3279, p69, c3279);
evaluator.multiply(c12, c23, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c11);
evaluator.add(c3, c11, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c11);
evaluator.add(c3, c11, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c11);
evaluator.add(c3, c11, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c11);
evaluator.add(c3, c11, c3);
evaluator.multiply_plain(c3, p64, c3);
evaluator.multiply(c12, c21, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c5);
evaluator.add(c11, c5, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c16);
evaluator.add(c11, c16, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c16);
evaluator.add(c11, c16, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c16);
evaluator.add(c11, c16, c11);
evaluator.multiply_plain(c11, p54, c11);
evaluator.multiply(c12, c22, c16);
evaluator.relinearize(c16, relin_keys, c16);
evaluator.rotate_rows(c16, 8, galois_keys, c3239);
evaluator.add(c16, c3239, c16);
evaluator.rotate_rows(c16, 4, galois_keys, c3239);
evaluator.add(c16, c3239, c16);
evaluator.rotate_rows(c16, 2, galois_keys, c3239);
evaluator.add(c16, c3239, c16);
evaluator.rotate_rows(c16, 1, galois_keys, c3239);
evaluator.add(c16, c3239, c16);
evaluator.multiply_plain(c16, p59, c16);
evaluator.add(c11, c16, c11);
evaluator.add(c3, c11, c3);
evaluator.add(c3279, c3, c3279);
evaluator.add(c2983, c3279, c2983);
evaluator.multiply(c12, c25, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c11);
evaluator.add(c3279, c11, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c16);
evaluator.add(c3279, c16, c3279);
evaluator.multiply_plain(c3279, p74, c3279);
evaluator.multiply(c12, c26, c16);
evaluator.relinearize(c16, relin_keys, c16);
evaluator.rotate_rows(c16, 8, galois_keys, c3);
evaluator.add(c16, c3, c16);
evaluator.rotate_rows(c16, 4, galois_keys, c3);
evaluator.add(c16, c3, c16);
evaluator.rotate_rows(c16, 2, galois_keys, c3);
evaluator.add(c16, c3, c16);
evaluator.rotate_rows(c16, 1, galois_keys, c3);
evaluator.add(c16, c3, c16);
evaluator.multiply_plain(c16, p79, c16);
evaluator.multiply(c12, c27, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c11);
evaluator.add(c3, c11, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c11);
evaluator.add(c3, c11, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c11);
evaluator.add(c3, c11, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c11);
evaluator.add(c3, c11, c3);
evaluator.multiply_plain(c3, p84, c3);
evaluator.add(c16, c3, c16);
evaluator.add(c3279, c16, c3279);
evaluator.multiply(c12, c28, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c11);
evaluator.add(c3, c11, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c11);
evaluator.add(c3, c11, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c11);
evaluator.add(c3, c11, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c11);
evaluator.add(c3, c11, c3);
evaluator.multiply_plain(c3, p89, c3);
evaluator.multiply(c12, c29, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c16);
evaluator.add(c11, c16, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c16);
evaluator.add(c11, c16, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c16);
evaluator.add(c11, c16, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c16);
evaluator.add(c11, c16, c11);
evaluator.multiply_plain(c11, p94, c11);
evaluator.add(c3, c11, c3);
evaluator.add(c3279, c3, c3279);
evaluator.add(c2983, c3279, c2983);
evaluator.multiply(c12, c30, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c11);
evaluator.add(c3279, c11, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c16);
evaluator.add(c3279, c16, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c16);
evaluator.add(c3279, c16, c3279);
evaluator.multiply_plain(c3279, p99, c3279);
evaluator.multiply(c12, c31, c16);
evaluator.relinearize(c16, relin_keys, c16);
evaluator.rotate_rows(c16, 8, galois_keys, c3);
evaluator.add(c16, c3, c16);
evaluator.rotate_rows(c16, 4, galois_keys, c11);
evaluator.add(c16, c11, c16);
evaluator.rotate_rows(c16, 2, galois_keys, c3);
evaluator.add(c16, c3, c16);
evaluator.rotate_rows(c16, 1, galois_keys, c11);
evaluator.add(c16, c11, c16);
evaluator.multiply_plain(c16, p104, c16);
evaluator.multiply(c12, c32, c12);
evaluator.relinearize(c12, relin_keys, c12);
evaluator.rotate_rows(c12, 8, galois_keys, c11);
evaluator.add(c12, c11, c12);
evaluator.rotate_rows(c12, 4, galois_keys, c11);
evaluator.add(c12, c11, c12);
evaluator.rotate_rows(c12, 2, galois_keys, c11);
evaluator.add(c12, c11, c12);
evaluator.rotate_rows(c12, 1, galois_keys, c11);
evaluator.add(c12, c11, c12);
evaluator.multiply_plain(c12, p109, c12);
evaluator.add(c16, c12, c16);
evaluator.add(c3279, c16, c3279);
evaluator.add(c2983, c3279, c2983);
evaluator.multiply(c1, c17, c12);
evaluator.relinearize(c12, relin_keys, c12);
evaluator.rotate_rows(c12, 8, galois_keys, c16);
evaluator.add(c12, c16, c12);
evaluator.rotate_rows(c12, 4, galois_keys, c16);
evaluator.add(c12, c16, c12);
evaluator.rotate_rows(c12, 2, galois_keys, c16);
evaluator.add(c12, c16, c12);
evaluator.rotate_rows(c12, 1, galois_keys, c16);
evaluator.add(c12, c16, c12);
evaluator.multiply_plain(c12, p35, c12);
evaluator.multiply(c1, c18, c16);
evaluator.relinearize(c16, relin_keys, c16);
evaluator.rotate_rows(c16, 8, galois_keys, c3279);
evaluator.add(c16, c3279, c16);
evaluator.rotate_rows(c16, 4, galois_keys, c3279);
evaluator.add(c16, c3279, c16);
evaluator.rotate_rows(c16, 2, galois_keys, c3279);
evaluator.add(c16, c3279, c16);
evaluator.rotate_rows(c16, 1, galois_keys, c3279);
evaluator.add(c16, c3279, c16);
evaluator.multiply_plain(c16, p39, c16);
evaluator.add(c12, c16, c12);
evaluator.multiply(c1, c23, c16);
evaluator.relinearize(c16, relin_keys, c16);
evaluator.rotate_rows(c16, 8, galois_keys, c3279);
evaluator.add(c16, c3279, c16);
evaluator.rotate_rows(c16, 4, galois_keys, c3279);
evaluator.add(c16, c3279, c16);
evaluator.rotate_rows(c16, 2, galois_keys, c3279);
evaluator.add(c16, c3279, c16);
evaluator.rotate_rows(c16, 1, galois_keys, c3279);
evaluator.add(c16, c3279, c16);
evaluator.multiply_plain(c16, p64, c16);
evaluator.multiply(c1, c22, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c11);
evaluator.add(c3279, c11, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c11);
evaluator.add(c3279, c11, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c11);
evaluator.add(c3279, c11, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c11);
evaluator.add(c3279, c11, c3279);
evaluator.multiply_plain(c3279, p59, c3279);
evaluator.multiply(c1, c21, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c3239);
evaluator.add(c11, c3239, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c3239);
evaluator.add(c11, c3239, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c3239);
evaluator.add(c11, c3239, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c3239);
evaluator.add(c11, c3239, c11);
evaluator.multiply_plain(c11, p54, c11);
evaluator.multiply(c1, c19, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c3);
evaluator.add(c3239, c3, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c3);
evaluator.add(c3239, c3, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c2967);
evaluator.add(c3239, c2967, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c2967);
evaluator.add(c3239, c2967, c3239);
evaluator.multiply_plain(c3239, p44, c3239);
evaluator.multiply(c1, c20, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c3);
evaluator.add(c2967, c3, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c3);
evaluator.add(c2967, c3, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c3);
evaluator.add(c2967, c3, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c3);
evaluator.add(c2967, c3, c2967);
evaluator.multiply_plain(c2967, p49, c2967);
evaluator.add(c3239, c2967, c3239);
evaluator.add(c11, c3239, c11);
evaluator.add(c3279, c11, c3279);
evaluator.add(c16, c3279, c16);
evaluator.multiply(c1, c27, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c11);
evaluator.add(c3279, c11, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.multiply_plain(c3279, p84, c3279);
evaluator.multiply(c1, c26, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c11);
evaluator.add(c2967, c11, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c11);
evaluator.add(c2967, c11, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c11);
evaluator.add(c2967, c11, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c11);
evaluator.add(c2967, c11, c2967);
evaluator.multiply_plain(c2967, p79, c2967);
evaluator.multiply(c1, c24, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c3239);
evaluator.add(c11, c3239, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c3239);
evaluator.add(c11, c3239, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c3239);
evaluator.add(c11, c3239, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c3239);
evaluator.add(c11, c3239, c11);
evaluator.multiply_plain(c11, p69, c11);
evaluator.multiply(c1, c25, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c3);
evaluator.add(c3239, c3, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c3);
evaluator.add(c3239, c3, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c3);
evaluator.add(c3239, c3, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c3);
evaluator.add(c3239, c3, c3239);
evaluator.multiply_plain(c3239, p74, c3239);
evaluator.add(c11, c3239, c11);
evaluator.add(c2967, c11, c2967);
evaluator.add(c3279, c2967, c3279);
evaluator.add(c16, c3279, c16);
evaluator.multiply(c1, c30, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c3239);
evaluator.add(c2967, c3239, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c3239);
evaluator.add(c2967, c3239, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c3239);
evaluator.add(c2967, c3239, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c3239);
evaluator.add(c2967, c3239, c2967);
evaluator.multiply_plain(c2967, p99, c2967);
evaluator.multiply(c1, c28, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c3239);
evaluator.add(c3, c3239, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c11);
evaluator.add(c3, c11, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c11);
evaluator.add(c3, c11, c3);
evaluator.multiply_plain(c3, p89, c3);
evaluator.multiply(c1, c29, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c3239);
evaluator.add(c11, c3239, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c3279);
evaluator.add(c11, c3279, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c3239);
evaluator.add(c11, c3239, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c3279);
evaluator.add(c11, c3279, c11);
evaluator.multiply_plain(c11, p94, c11);
evaluator.add(c3, c11, c3);
evaluator.add(c2967, c3, c2967);
evaluator.add(c16, c2967, c16);
evaluator.multiply(c1, c31, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c3);
evaluator.add(c2967, c3, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c3);
evaluator.add(c2967, c3, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c11);
evaluator.add(c2967, c11, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c11);
evaluator.add(c2967, c11, c2967);
evaluator.multiply_plain(c2967, p104, c2967);
evaluator.multiply(c1, c32, c1);
evaluator.relinearize(c1, relin_keys, c1);
evaluator.rotate_rows(c1, 8, galois_keys, c3);
evaluator.add(c1, c3, c1);
evaluator.rotate_rows(c1, 4, galois_keys, c3);
evaluator.add(c1, c3, c1);
evaluator.rotate_rows(c1, 2, galois_keys, c3);
evaluator.add(c1, c3, c1);
evaluator.rotate_rows(c1, 1, galois_keys, c3);
evaluator.add(c1, c3, c1);
evaluator.multiply_plain(c1, p109, c1);
evaluator.add(c2967, c1, c2967);
evaluator.add(c16, c2967, c16);
evaluator.add(c12, c16, c12);
evaluator.multiply(c8, c17, c16);
evaluator.relinearize(c16, relin_keys, c16);
evaluator.rotate_rows(c16, 8, galois_keys, c1);
evaluator.add(c16, c1, c16);
evaluator.rotate_rows(c16, 4, galois_keys, c1);
evaluator.add(c16, c1, c16);
evaluator.rotate_rows(c16, 2, galois_keys, c1);
evaluator.add(c16, c1, c16);
evaluator.rotate_rows(c16, 1, galois_keys, c1);
evaluator.add(c16, c1, c16);
evaluator.multiply_plain(c16, p35, c16);
evaluator.multiply(c8, c18, c1);
evaluator.relinearize(c1, relin_keys, c1);
evaluator.rotate_rows(c1, 8, galois_keys, c3);
evaluator.add(c1, c3, c1);
evaluator.rotate_rows(c1, 4, galois_keys, c3);
evaluator.add(c1, c3, c1);
evaluator.rotate_rows(c1, 2, galois_keys, c3);
evaluator.add(c1, c3, c1);
evaluator.rotate_rows(c1, 1, galois_keys, c3);
evaluator.add(c1, c3, c1);
evaluator.multiply_plain(c1, p39, c1);
evaluator.add(c16, c1, c16);
evaluator.multiply(c8, c19, c1);
evaluator.relinearize(c1, relin_keys, c1);
evaluator.rotate_rows(c1, 8, galois_keys, c3);
evaluator.add(c1, c3, c1);
evaluator.rotate_rows(c1, 4, galois_keys, c3);
evaluator.add(c1, c3, c1);
evaluator.rotate_rows(c1, 2, galois_keys, c3);
evaluator.add(c1, c3, c1);
evaluator.rotate_rows(c1, 1, galois_keys, c3);
evaluator.add(c1, c3, c1);
evaluator.multiply_plain(c1, p44, c1);
evaluator.multiply(c8, c20, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.multiply_plain(c3, p49, c3);
evaluator.multiply(c8, c21, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c11);
evaluator.add(c2967, c11, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c11);
evaluator.add(c2967, c11, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c3239);
evaluator.add(c2967, c3239, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c11);
evaluator.add(c2967, c11, c2967);
evaluator.multiply_plain(c2967, p54, c2967);
evaluator.add(c3, c2967, c3);
evaluator.add(c1, c3, c1);
evaluator.add(c16, c1, c16);
evaluator.multiply(c8, c25, c1);
evaluator.relinearize(c1, relin_keys, c1);
evaluator.rotate_rows(c1, 8, galois_keys, c3);
evaluator.add(c1, c3, c1);
evaluator.rotate_rows(c1, 4, galois_keys, c2967);
evaluator.add(c1, c2967, c1);
evaluator.rotate_rows(c1, 2, galois_keys, c2967);
evaluator.add(c1, c2967, c1);
evaluator.rotate_rows(c1, 1, galois_keys, c11);
evaluator.add(c1, c11, c1);
evaluator.multiply_plain(c1, p74, c1);
evaluator.multiply(c8, c22, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c2967);
evaluator.add(c3, c2967, c3);
evaluator.multiply_plain(c3, p59, c3);
evaluator.multiply(c8, c23, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c11);
evaluator.add(c2967, c11, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c11);
evaluator.add(c2967, c11, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c11);
evaluator.add(c2967, c11, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c11);
evaluator.add(c2967, c11, c2967);
evaluator.multiply_plain(c2967, p64, c2967);
evaluator.multiply(c8, c24, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c3279);
evaluator.add(c11, c3279, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c3279);
evaluator.add(c11, c3279, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c3279);
evaluator.add(c11, c3279, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c3279);
evaluator.add(c11, c3279, c11);
evaluator.multiply_plain(c11, p69, c11);
evaluator.add(c2967, c11, c2967);
evaluator.add(c3, c2967, c3);
evaluator.add(c1, c3, c1);
evaluator.add(c16, c1, c16);
evaluator.multiply(c8, c26, c1);
evaluator.relinearize(c1, relin_keys, c1);
evaluator.rotate_rows(c1, 8, galois_keys, c2967);
evaluator.add(c1, c2967, c1);
evaluator.rotate_rows(c1, 4, galois_keys, c2967);
evaluator.add(c1, c2967, c1);
evaluator.rotate_rows(c1, 2, galois_keys, c11);
evaluator.add(c1, c11, c1);
evaluator.rotate_rows(c1, 1, galois_keys, c11);
evaluator.add(c1, c11, c1);
evaluator.multiply_plain(c1, p79, c1);
evaluator.multiply(c8, c30, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c2967);
evaluator.add(c11, c2967, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c2967);
evaluator.add(c11, c2967, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c2967);
evaluator.add(c11, c2967, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c2967);
evaluator.add(c11, c2967, c11);
evaluator.multiply_plain(c11, p99, c11);
evaluator.multiply(c8, c29, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c3279);
evaluator.add(c2967, c3279, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c3);
evaluator.add(c2967, c3, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c3);
evaluator.add(c2967, c3, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c3);
evaluator.add(c2967, c3, c2967);
evaluator.multiply_plain(c2967, p94, c2967);
evaluator.multiply(c8, c27, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c3279);
evaluator.add(c3, c3279, c3);
evaluator.multiply_plain(c3, p84, c3);
evaluator.multiply(c8, c28, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.multiply_plain(c3279, p89, c3279);
evaluator.add(c3, c3279, c3);
evaluator.add(c2967, c3, c2967);
evaluator.add(c11, c2967, c11);
evaluator.multiply(c8, c31, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c3);
evaluator.add(c2967, c3, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c3);
evaluator.add(c2967, c3, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c3279);
evaluator.add(c2967, c3279, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c3279);
evaluator.add(c2967, c3279, c2967);
evaluator.multiply_plain(c2967, p104, c2967);
evaluator.multiply(c8, c32, c8);
evaluator.relinearize(c8, relin_keys, c8);
evaluator.rotate_rows(c8, 8, galois_keys, c3279);
evaluator.add(c8, c3279, c8);
evaluator.rotate_rows(c8, 4, galois_keys, c3279);
evaluator.add(c8, c3279, c8);
evaluator.rotate_rows(c8, 2, galois_keys, c3279);
evaluator.add(c8, c3279, c8);
evaluator.rotate_rows(c8, 1, galois_keys, c3279);
evaluator.add(c8, c3279, c8);
evaluator.multiply_plain(c8, p109, c8);
evaluator.add(c2967, c8, c2967);
evaluator.add(c11, c2967, c11);
evaluator.add(c1, c11, c1);
evaluator.add(c16, c1, c16);
evaluator.multiply(c14, c17, c1);
evaluator.relinearize(c1, relin_keys, c1);
evaluator.rotate_rows(c1, 8, galois_keys, c8);
evaluator.add(c1, c8, c1);
evaluator.rotate_rows(c1, 4, galois_keys, c8);
evaluator.add(c1, c8, c1);
evaluator.rotate_rows(c1, 2, galois_keys, c8);
evaluator.add(c1, c8, c1);
evaluator.rotate_rows(c1, 1, galois_keys, c3279);
evaluator.add(c1, c3279, c1);
evaluator.multiply_plain(c1, p35, c1);
evaluator.multiply(c14, c18, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c3239);
evaluator.add(c11, c3239, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c3279);
evaluator.add(c11, c3279, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c3279);
evaluator.add(c11, c3279, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c3279);
evaluator.add(c11, c3279, c11);
evaluator.multiply_plain(c11, p39, c11);
evaluator.add(c1, c11, c1);
evaluator.multiply(c14, c22, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c8);
evaluator.add(c3279, c8, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c8);
evaluator.add(c3279, c8, c3279);
evaluator.multiply_plain(c3279, p59, c3279);
evaluator.multiply(c14, c21, c8);
evaluator.relinearize(c8, relin_keys, c8);
evaluator.rotate_rows(c8, 8, galois_keys, c11);
evaluator.add(c8, c11, c8);
evaluator.rotate_rows(c8, 4, galois_keys, c3);
evaluator.add(c8, c3, c8);
evaluator.rotate_rows(c8, 2, galois_keys, c3239);
evaluator.add(c8, c3239, c8);
evaluator.rotate_rows(c8, 1, galois_keys, c2967);
evaluator.add(c8, c2967, c8);
evaluator.multiply_plain(c8, p54, c8);
evaluator.multiply(c14, c19, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c3);
evaluator.add(c11, c3, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c3);
evaluator.add(c11, c3, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c3);
evaluator.add(c11, c3, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c3);
evaluator.add(c11, c3, c11);
evaluator.multiply_plain(c11, p44, c11);
evaluator.multiply(c14, c20, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c3239);
evaluator.add(c3, c3239, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c3239);
evaluator.add(c3, c3239, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c3239);
evaluator.add(c3, c3239, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c3239);
evaluator.add(c3, c3239, c3);
evaluator.multiply_plain(c3, p49, c3);
evaluator.add(c11, c3, c11);
evaluator.add(c8, c11, c8);
evaluator.add(c3279, c8, c3279);
evaluator.add(c1, c3279, c1);
evaluator.multiply(c14, c27, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c8);
evaluator.add(c3279, c8, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c11);
evaluator.add(c3279, c11, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c11);
evaluator.add(c3279, c11, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c11);
evaluator.add(c3279, c11, c3279);
evaluator.multiply_plain(c3279, p84, c3279);
evaluator.multiply(c14, c26, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c3);
evaluator.add(c11, c3, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c3);
evaluator.add(c11, c3, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c3);
evaluator.add(c11, c3, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c3);
evaluator.add(c11, c3, c11);
evaluator.multiply_plain(c11, p79, c11);
evaluator.multiply(c14, c25, c3);
evaluator.relinearize(c3, relin_keys, c3);
evaluator.rotate_rows(c3, 8, galois_keys, c3239);
evaluator.add(c3, c3239, c3);
evaluator.rotate_rows(c3, 4, galois_keys, c3239);
evaluator.add(c3, c3239, c3);
evaluator.rotate_rows(c3, 2, galois_keys, c3239);
evaluator.add(c3, c3239, c3);
evaluator.rotate_rows(c3, 1, galois_keys, c3239);
evaluator.add(c3, c3239, c3);
evaluator.multiply_plain(c3, p74, c3);
evaluator.multiply(c14, c23, c3239);
evaluator.relinearize(c3239, relin_keys, c3239);
evaluator.rotate_rows(c3239, 8, galois_keys, c8);
evaluator.add(c3239, c8, c3239);
evaluator.rotate_rows(c3239, 4, galois_keys, c8);
evaluator.add(c3239, c8, c3239);
evaluator.rotate_rows(c3239, 2, galois_keys, c8);
evaluator.add(c3239, c8, c3239);
evaluator.rotate_rows(c3239, 1, galois_keys, c8);
evaluator.add(c3239, c8, c3239);
evaluator.multiply_plain(c3239, p64, c3239);
evaluator.multiply(c14, c24, c8);
evaluator.relinearize(c8, relin_keys, c8);
evaluator.rotate_rows(c8, 8, galois_keys, c2967);
evaluator.add(c8, c2967, c8);
evaluator.rotate_rows(c8, 4, galois_keys, c2967);
evaluator.add(c8, c2967, c8);
evaluator.rotate_rows(c8, 2, galois_keys, c2967);
evaluator.add(c8, c2967, c8);
evaluator.rotate_rows(c8, 1, galois_keys, c2967);
evaluator.add(c8, c2967, c8);
evaluator.multiply_plain(c8, p69, c8);
evaluator.add(c3239, c8, c3239);
evaluator.add(c3, c3239, c3);
evaluator.add(c11, c3, c11);
evaluator.add(c3279, c11, c3279);
evaluator.add(c1, c3279, c1);
evaluator.multiply(c14, c28, c3279);
evaluator.relinearize(c3279, relin_keys, c3279);
evaluator.rotate_rows(c3279, 8, galois_keys, c11);
evaluator.add(c3279, c11, c3279);
evaluator.rotate_rows(c3279, 4, galois_keys, c11);
evaluator.add(c3279, c11, c3279);
evaluator.rotate_rows(c3279, 2, galois_keys, c3);
evaluator.add(c3279, c3, c3279);
evaluator.rotate_rows(c3279, 1, galois_keys, c3239);
evaluator.add(c3279, c3239, c3279);
evaluator.multiply_plain(c3279, p89, c3279);
evaluator.multiply(c14, c29, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c11);
evaluator.add(c2967, c11, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c11);
evaluator.add(c2967, c11, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c11);
evaluator.add(c2967, c11, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c11);
evaluator.add(c2967, c11, c2967);
evaluator.multiply_plain(c2967, p94, c2967);
evaluator.multiply(c14, c30, c11);
evaluator.relinearize(c11, relin_keys, c11);
evaluator.rotate_rows(c11, 8, galois_keys, c8);
evaluator.add(c11, c8, c11);
evaluator.rotate_rows(c11, 4, galois_keys, c8);
evaluator.add(c11, c8, c11);
evaluator.rotate_rows(c11, 2, galois_keys, c8);
evaluator.add(c11, c8, c11);
evaluator.rotate_rows(c11, 1, galois_keys, c8);
evaluator.add(c11, c8, c11);
evaluator.multiply_plain(c11, p99, c11);
evaluator.add(c2967, c11, c2967);
evaluator.add(c3279, c2967, c3279);
evaluator.multiply(c14, c31, c2967);
evaluator.relinearize(c2967, relin_keys, c2967);
evaluator.rotate_rows(c2967, 8, galois_keys, c8);
evaluator.add(c2967, c8, c2967);
evaluator.rotate_rows(c2967, 4, galois_keys, c8);
evaluator.add(c2967, c8, c2967);
evaluator.rotate_rows(c2967, 2, galois_keys, c8);
evaluator.add(c2967, c8, c2967);
evaluator.rotate_rows(c2967, 1, galois_keys, c8);
evaluator.add(c2967, c8, c2967);
evaluator.multiply_plain(c2967, p104, c2967);
evaluator.multiply(c14, c32, c14);
evaluator.relinearize(c14, relin_keys, c14);
evaluator.rotate_rows(c14, 8, galois_keys, c8);
evaluator.add(c14, c8, c14);
evaluator.rotate_rows(c14, 4, galois_keys, c8);
evaluator.add(c14, c8, c14);
evaluator.rotate_rows(c14, 2, galois_keys, c8);
evaluator.add(c14, c8, c14);
evaluator.rotate_rows(c14, 1, galois_keys, c8);
evaluator.add(c14, c8, c14);
evaluator.multiply_plain(c14, p109, c14);
evaluator.add(c2967, c14, c2967);
evaluator.add(c3279, c2967, c3279);
evaluator.add(c1, c3279, c1);
evaluator.multiply(c13, c17, c17);
evaluator.relinearize(c17, relin_keys, c17);
evaluator.rotate_rows(c17, 8, galois_keys, c3279);
evaluator.add(c17, c3279, c17);
evaluator.rotate_rows(c17, 4, galois_keys, c3279);
evaluator.add(c17, c3279, c17);
evaluator.rotate_rows(c17, 2, galois_keys, c8);
evaluator.add(c17, c8, c17);
evaluator.rotate_rows(c17, 1, galois_keys, c8);
evaluator.add(c17, c8, c17);
evaluator.multiply_plain(c17, p35, c17);
evaluator.multiply(c13, c18, c18);
evaluator.relinearize(c18, relin_keys, c18);
evaluator.rotate_rows(c18, 8, galois_keys, c8);
evaluator.add(c18, c8, c18);
evaluator.rotate_rows(c18, 4, galois_keys, c2967);
evaluator.add(c18, c2967, c18);
evaluator.rotate_rows(c18, 2, galois_keys, c3279);
evaluator.add(c18, c3279, c18);
evaluator.rotate_rows(c18, 1, galois_keys, c2967);
evaluator.add(c18, c2967, c18);
evaluator.multiply_plain(c18, p39, c18);
evaluator.add(c17, c18, c17);
evaluator.multiply(c13, c21, c21);
evaluator.relinearize(c21, relin_keys, c21);
evaluator.rotate_rows(c21, 8, galois_keys, c3279);
evaluator.add(c21, c3279, c21);
evaluator.rotate_rows(c21, 4, galois_keys, c3279);
evaluator.add(c21, c3279, c21);
evaluator.rotate_rows(c21, 2, galois_keys, c2967);
evaluator.add(c21, c2967, c21);
evaluator.rotate_rows(c21, 1, galois_keys, c3);
evaluator.add(c21, c3, c21);
evaluator.multiply_plain(c21, p54, c21);
evaluator.multiply(c13, c19, c19);
evaluator.relinearize(c19, relin_keys, c19);
evaluator.rotate_rows(c19, 8, galois_keys, c3279);
evaluator.add(c19, c3279, c19);
evaluator.rotate_rows(c19, 4, galois_keys, c3279);
evaluator.add(c19, c3279, c19);
evaluator.rotate_rows(c19, 2, galois_keys, c3279);
evaluator.add(c19, c3279, c19);
evaluator.rotate_rows(c19, 1, galois_keys, c3279);
evaluator.add(c19, c3279, c19);
evaluator.multiply_plain(c19, p44, c19);
evaluator.multiply(c13, c20, c20);
evaluator.relinearize(c20, relin_keys, c20);
evaluator.rotate_rows(c20, 8, galois_keys, c3279);
evaluator.add(c20, c3279, c20);
evaluator.rotate_rows(c20, 4, galois_keys, c3279);
evaluator.add(c20, c3279, c20);
evaluator.rotate_rows(c20, 2, galois_keys, c3279);
evaluator.add(c20, c3279, c20);
evaluator.rotate_rows(c20, 1, galois_keys, c3279);
evaluator.add(c20, c3279, c20);
evaluator.multiply_plain(c20, p49, c20);
evaluator.add(c19, c20, c19);
evaluator.add(c21, c19, c21);
evaluator.add(c17, c21, c17);
evaluator.multiply(c13, c25, c25);
evaluator.relinearize(c25, relin_keys, c25);
evaluator.rotate_rows(c25, 8, galois_keys, c19);
evaluator.add(c25, c19, c25);
evaluator.rotate_rows(c25, 4, galois_keys, c19);
evaluator.add(c25, c19, c25);
evaluator.rotate_rows(c25, 2, galois_keys, c19);
evaluator.add(c25, c19, c25);
evaluator.rotate_rows(c25, 1, galois_keys, c19);
evaluator.add(c25, c19, c25);
evaluator.multiply_plain(c25, p74, c25);
evaluator.multiply(c13, c24, c24);
evaluator.relinearize(c24, relin_keys, c24);
evaluator.rotate_rows(c24, 8, galois_keys, c19);
evaluator.add(c24, c19, c24);
evaluator.rotate_rows(c24, 4, galois_keys, c19);
evaluator.add(c24, c19, c24);
evaluator.rotate_rows(c24, 2, galois_keys, c19);
evaluator.add(c24, c19, c24);
evaluator.rotate_rows(c24, 1, galois_keys, c19);
evaluator.add(c24, c19, c24);
evaluator.multiply_plain(c24, p69, c24);
evaluator.multiply(c13, c22, c22);
evaluator.relinearize(c22, relin_keys, c22);
evaluator.rotate_rows(c22, 8, galois_keys, c19);
evaluator.add(c22, c19, c22);
evaluator.rotate_rows(c22, 4, galois_keys, c19);
evaluator.add(c22, c19, c22);
evaluator.rotate_rows(c22, 2, galois_keys, c19);
evaluator.add(c22, c19, c22);
evaluator.rotate_rows(c22, 1, galois_keys, c19);
evaluator.add(c22, c19, c22);
evaluator.multiply_plain(c22, p59, c22);
evaluator.multiply(c13, c23, c23);
evaluator.relinearize(c23, relin_keys, c23);
evaluator.rotate_rows(c23, 8, galois_keys, c19);
evaluator.add(c23, c19, c23);
evaluator.rotate_rows(c23, 4, galois_keys, c21);
evaluator.add(c23, c21, c23);
evaluator.rotate_rows(c23, 2, galois_keys, c19);
evaluator.add(c23, c19, c23);
evaluator.rotate_rows(c23, 1, galois_keys, c19);
evaluator.add(c23, c19, c23);
evaluator.multiply_plain(c23, p64, c23);
evaluator.add(c22, c23, c22);
evaluator.add(c24, c22, c24);
evaluator.add(c25, c24, c25);
evaluator.add(c17, c25, c17);
evaluator.multiply(c13, c28, c28);
evaluator.relinearize(c28, relin_keys, c28);
evaluator.rotate_rows(c28, 8, galois_keys, c25);
evaluator.add(c28, c25, c28);
evaluator.rotate_rows(c28, 4, galois_keys, c24);
evaluator.add(c28, c24, c28);
evaluator.rotate_rows(c28, 2, galois_keys, c24);
evaluator.add(c28, c24, c28);
evaluator.rotate_rows(c28, 1, galois_keys, c24);
evaluator.add(c28, c24, c28);
evaluator.multiply_plain(c28, p89, c28);
evaluator.multiply(c13, c26, c26);
evaluator.relinearize(c26, relin_keys, c26);
evaluator.rotate_rows(c26, 8, galois_keys, c22);
evaluator.add(c26, c22, c26);
evaluator.rotate_rows(c26, 4, galois_keys, c19);
evaluator.add(c26, c19, c26);
evaluator.rotate_rows(c26, 2, galois_keys, c19);
evaluator.add(c26, c19, c26);
evaluator.rotate_rows(c26, 1, galois_keys, c24);
evaluator.add(c26, c24, c26);
evaluator.multiply_plain(c26, p79, c26);
evaluator.multiply(c13, c27, c27);
evaluator.relinearize(c27, relin_keys, c27);
evaluator.rotate_rows(c27, 8, galois_keys, c20);
evaluator.add(c27, c20, c27);
evaluator.rotate_rows(c27, 4, galois_keys, c20);
evaluator.add(c27, c20, c27);
evaluator.rotate_rows(c27, 2, galois_keys, c20);
evaluator.add(c27, c20, c27);
evaluator.rotate_rows(c27, 1, galois_keys, c20);
evaluator.add(c27, c20, c27);
evaluator.multiply_plain(c27, p84, c27);
evaluator.add(c26, c27, c26);
evaluator.add(c28, c26, c28);
evaluator.multiply(c13, c29, c29);
evaluator.relinearize(c29, relin_keys, c29);
evaluator.rotate_rows(c29, 8, galois_keys, c26);
evaluator.add(c29, c26, c29);
evaluator.rotate_rows(c29, 4, galois_keys, c26);
evaluator.add(c29, c26, c29);
evaluator.rotate_rows(c29, 2, galois_keys, c26);
evaluator.add(c29, c26, c29);
evaluator.rotate_rows(c29, 1, galois_keys, c20);
evaluator.add(c29, c20, c29);
evaluator.multiply_plain(c29, p94, c29);
evaluator.multiply(c13, c30, c30);
evaluator.relinearize(c30, relin_keys, c30);
evaluator.rotate_rows(c30, 8, galois_keys, c26);
evaluator.add(c30, c26, c30);
evaluator.rotate_rows(c30, 4, galois_keys, c27);
evaluator.add(c30, c27, c30);
evaluator.rotate_rows(c30, 2, galois_keys, c27);
evaluator.add(c30, c27, c30);
evaluator.rotate_rows(c30, 1, galois_keys, c27);
evaluator.add(c30, c27, c30);
evaluator.multiply_plain(c30, p99, c30);
evaluator.add(c29, c30, c29);
evaluator.add(c28, c29, c28);
evaluator.multiply(c13, c31, c31);
evaluator.relinearize(c31, relin_keys, c31);
evaluator.rotate_rows(c31, 8, galois_keys, c29);
evaluator.add(c31, c29, c31);
evaluator.rotate_rows(c31, 4, galois_keys, c29);
evaluator.add(c31, c29, c31);
evaluator.rotate_rows(c31, 2, galois_keys, c29);
evaluator.add(c31, c29, c31);
evaluator.rotate_rows(c31, 1, galois_keys, c29);
evaluator.add(c31, c29, c31);
evaluator.multiply_plain(c31, p104, c31);
evaluator.multiply(c13, c32, c13);
evaluator.relinearize(c13, relin_keys, c13);
evaluator.rotate_rows(c13, 8, galois_keys, c29);
evaluator.add(c13, c29, c13);
evaluator.rotate_rows(c13, 4, galois_keys, c27);
evaluator.add(c13, c27, c13);
evaluator.rotate_rows(c13, 2, galois_keys, c27);
evaluator.add(c13, c27, c13);
evaluator.rotate_rows(c13, 1, galois_keys, c26);
evaluator.add(c13, c26, c13);
evaluator.multiply_plain(c13, p109, c13);
evaluator.add(c31, c13, c31);
evaluator.add(c28, c31, c28);
evaluator.add(c17, c28, c17);
encrypted_outputs.emplace("C[14]", move(c931));
encrypted_outputs.emplace("C[1]", move(c15));
encrypted_outputs.emplace("C[2]", move(c3311));
encrypted_outputs.emplace("C[3]", move(c3247));
encrypted_outputs.emplace("C[4]", move(c4));
encrypted_outputs.emplace("C[5]", move(c3287));
encrypted_outputs.emplace("C[6]", move(c3207));
encrypted_outputs.emplace("C[8]", move(c6));
encrypted_outputs.emplace("C[9]", move(c2));
encrypted_outputs.emplace("C[15]", move(c9));
encrypted_outputs.emplace("C[10]", move(c2975));
encrypted_outputs.emplace("C[11]", move(c2983));
encrypted_outputs.emplace("C[0]", move(c12));
encrypted_outputs.emplace("C[7]", move(c16));
encrypted_outputs.emplace("C[13]", move(c1));
encrypted_outputs.emplace("C[12]", move(c17));
}

vector<int> get_rotation_steps_matrix_mul(){
return vector<int>{8, 4, 2, 1};
}
